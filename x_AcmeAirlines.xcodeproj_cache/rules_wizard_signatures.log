<?xml version="1.0" encoding="UTF-8"?>
<api_info>
	<package>
		<class>
			<method accessibility="External" name="ABAddressBookCopyArrayOfAllPeople" uniqueID="ABAddressBookCopyArrayOfAllPeople(ABAddressBookRef):CFArrayRef">
				<signature>ABAddressBookCopyArrayOfAllPeople(ABAddressBookRef):CFArrayRef</signature>
			</method>
			<method accessibility="External" name="ABAddressBookCreate" uniqueID="ABAddressBookCreate():ABAddressBookRef">
				<signature>ABAddressBookCreate():ABAddressBookRef</signature>
			</method>
			<method accessibility="External" name="ABAddressBookGetAuthorizationStatus" uniqueID="ABAddressBookGetAuthorizationStatus():ABAuthorizationStatus">
				<signature>ABAddressBookGetAuthorizationStatus():ABAuthorizationStatus</signature>
			</method>
			<method accessibility="External" name="ABAddressBookGetPersonCount" uniqueID="ABAddressBookGetPersonCount(ABAddressBookRef):CFIndex">
				<signature>ABAddressBookGetPersonCount(ABAddressBookRef):CFIndex</signature>
			</method>
			<method accessibility="External" name="ABAddressBookRequestAccessWithCompletion" uniqueID="ABAddressBookRequestAccessWithCompletion(ABAddressBookRef;(^)(_Bool;CFErrorRef):void):void">
				<signature>ABAddressBookRequestAccessWithCompletion(ABAddressBookRef;(^)(_Bool;CFErrorRef):void):void</signature>
			</method>
			<method accessibility="External" name="ABMultiValueCopyLabelAtIndex" uniqueID="ABMultiValueCopyLabelAtIndex(ABMultiValueRef;CFIndex):CFStringRef">
				<signature>ABMultiValueCopyLabelAtIndex(ABMultiValueRef;CFIndex):CFStringRef</signature>
			</method>
			<method accessibility="External" name="ABMultiValueCopyValueAtIndex" uniqueID="ABMultiValueCopyValueAtIndex(ABMultiValueRef;CFIndex):CFTypeRef">
				<signature>ABMultiValueCopyValueAtIndex(ABMultiValueRef;CFIndex):CFTypeRef</signature>
			</method>
			<method accessibility="External" name="ABMultiValueGetCount" uniqueID="ABMultiValueGetCount(ABMultiValueRef):CFIndex">
				<signature>ABMultiValueGetCount(ABMultiValueRef):CFIndex</signature>
			</method>
			<method accessibility="External" name="ABRecordCopyValue" uniqueID="ABRecordCopyValue(ABRecordRef;ABPropertyID):CFTypeRef">
				<signature>ABRecordCopyValue(ABRecordRef;ABPropertyID):CFTypeRef</signature>
			</method>
			<method accessibility="External" name="CCCalibratePBKDF" uniqueID="CCCalibratePBKDF(CCPBKDFAlgorithm;size_t;size_t;CCPseudoRandomAlgorithm;size_t;uint32_t):uint">
				<signature>CCCalibratePBKDF(CCPBKDFAlgorithm;size_t;size_t;CCPseudoRandomAlgorithm;size_t;uint32_t):uint</signature>
			</method>
			<method accessibility="External" name="CCCrypt" uniqueID="CCCrypt(CCOperation;CCAlgorithm;CCOptions;const void*;size_t;const void*;const void*;size_t;void*;size_t;size_t*):CCCryptorStatus">
				<signature>CCCrypt(CCOperation;CCAlgorithm;CCOptions;const void*;size_t;const void*;const void*;size_t;void*;size_t;size_t*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorCreate" uniqueID="CCCryptorCreate(CCOperation;CCAlgorithm;CCOptions;const void*;size_t;const void*;CCCryptorRef*):CCCryptorStatus">
				<signature>CCCryptorCreate(CCOperation;CCAlgorithm;CCOptions;const void*;size_t;const void*;CCCryptorRef*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorCreateFromData" uniqueID="CCCryptorCreateFromData(CCOperation;CCAlgorithm;CCOptions;const void*;size_t;const void*;const void*;size_t;CCCryptorRef*;size_t*):CCCryptorStatus">
				<signature>CCCryptorCreateFromData(CCOperation;CCAlgorithm;CCOptions;const void*;size_t;const void*;const void*;size_t;CCCryptorRef*;size_t*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorCreateWithMode" uniqueID="CCCryptorCreateWithMode(CCOperation;CCMode;CCAlgorithm;CCPadding;const void*;const void*;size_t;const void*;size_t;int;CCModeOptions;CCCryptorRef*):CCCryptorStatus">
				<signature>CCCryptorCreateWithMode(CCOperation;CCMode;CCAlgorithm;CCPadding;const void*;const void*;size_t;const void*;size_t;int;CCModeOptions;CCCryptorRef*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorFinal" uniqueID="CCCryptorFinal(CCCryptorRef;void*;size_t;size_t*):CCCryptorStatus">
				<signature>CCCryptorFinal(CCCryptorRef;void*;size_t;size_t*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorGetOutputLength" uniqueID="CCCryptorGetOutputLength(CCCryptorRef;size_t;_Bool):size_t">
				<signature>CCCryptorGetOutputLength(CCCryptorRef;size_t;_Bool):size_t</signature>
			</method>
			<method accessibility="External" name="CCCryptorRelease" uniqueID="CCCryptorRelease(CCCryptorRef):CCCryptorStatus">
				<signature>CCCryptorRelease(CCCryptorRef):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorReset" uniqueID="CCCryptorReset(CCCryptorRef;const void*):CCCryptorStatus">
				<signature>CCCryptorReset(CCCryptorRef;const void*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCCryptorUpdate" uniqueID="CCCryptorUpdate(CCCryptorRef;const void*;size_t;void*;size_t;size_t*):CCCryptorStatus">
				<signature>CCCryptorUpdate(CCCryptorRef;const void*;size_t;void*;size_t;size_t*):CCCryptorStatus</signature>
			</method>
			<method accessibility="External" name="CCHmac" uniqueID="CCHmac(CCHmacAlgorithm;const void*;size_t;const void*;size_t;void*):void">
				<signature>CCHmac(CCHmacAlgorithm;const void*;size_t;const void*;size_t;void*):void</signature>
			</method>
			<method accessibility="External" name="CCHmacFinal" uniqueID="CCHmacFinal(CCHmacContext*;void*):void">
				<signature>CCHmacFinal(CCHmacContext*;void*):void</signature>
			</method>
			<method accessibility="External" name="CCHmacInit" uniqueID="CCHmacInit(CCHmacContext*;CCHmacAlgorithm;const void*;size_t):void">
				<signature>CCHmacInit(CCHmacContext*;CCHmacAlgorithm;const void*;size_t):void</signature>
			</method>
			<method accessibility="External" name="CCHmacUpdate" uniqueID="CCHmacUpdate(CCHmacContext*;const void*;size_t):void">
				<signature>CCHmacUpdate(CCHmacContext*;const void*;size_t):void</signature>
			</method>
			<method accessibility="External" name="CCKeyDerivationPBKDF" uniqueID="CCKeyDerivationPBKDF(CCPBKDFAlgorithm;const char*;size_t;const uint8_t*;size_t;CCPseudoRandomAlgorithm;uint;uint8_t*;size_t):int">
				<signature>CCKeyDerivationPBKDF(CCPBKDFAlgorithm;const char*;size_t;const uint8_t*;size_t;CCPseudoRandomAlgorithm;uint;uint8_t*;size_t):int</signature>
			</method>
			<method accessibility="External" name="CC_MD2" uniqueID="CC_MD2(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_MD2(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_MD2_Final" uniqueID="CC_MD2_Final(unsigned char*;CC_MD2_CTX*):int">
				<signature>CC_MD2_Final(unsigned char*;CC_MD2_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_MD2_Init" uniqueID="CC_MD2_Init(CC_MD2_CTX*):int">
				<signature>CC_MD2_Init(CC_MD2_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_MD2_Update" uniqueID="CC_MD2_Update(CC_MD2_CTX*;const void*;CC_LONG):int">
				<signature>CC_MD2_Update(CC_MD2_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_MD4" uniqueID="CC_MD4(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_MD4(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_MD4_Final" uniqueID="CC_MD4_Final(unsigned char*;CC_MD4_CTX*):int">
				<signature>CC_MD4_Final(unsigned char*;CC_MD4_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_MD4_Init" uniqueID="CC_MD4_Init(CC_MD4_CTX*):int">
				<signature>CC_MD4_Init(CC_MD4_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_MD4_Update" uniqueID="CC_MD4_Update(CC_MD4_CTX*;const void*;CC_LONG):int">
				<signature>CC_MD4_Update(CC_MD4_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_MD5" uniqueID="CC_MD5(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_MD5(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_MD5_Final" uniqueID="CC_MD5_Final(unsigned char*;CC_MD5_CTX*):int">
				<signature>CC_MD5_Final(unsigned char*;CC_MD5_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_MD5_Init" uniqueID="CC_MD5_Init(CC_MD5_CTX*):int">
				<signature>CC_MD5_Init(CC_MD5_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_MD5_Update" uniqueID="CC_MD5_Update(CC_MD5_CTX*;const void*;CC_LONG):int">
				<signature>CC_MD5_Update(CC_MD5_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA1" uniqueID="CC_SHA1(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_SHA1(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_SHA1_Final" uniqueID="CC_SHA1_Final(unsigned char*;CC_SHA1_CTX*):int">
				<signature>CC_SHA1_Final(unsigned char*;CC_SHA1_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA1_Init" uniqueID="CC_SHA1_Init(CC_SHA1_CTX*):int">
				<signature>CC_SHA1_Init(CC_SHA1_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA1_Update" uniqueID="CC_SHA1_Update(CC_SHA1_CTX*;const void*;CC_LONG):int">
				<signature>CC_SHA1_Update(CC_SHA1_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA224" uniqueID="CC_SHA224(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_SHA224(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_SHA224_Final" uniqueID="CC_SHA224_Final(unsigned char*;CC_SHA256_CTX*):int">
				<signature>CC_SHA224_Final(unsigned char*;CC_SHA256_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA224_Init" uniqueID="CC_SHA224_Init(CC_SHA256_CTX*):int">
				<signature>CC_SHA224_Init(CC_SHA256_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA224_Update" uniqueID="CC_SHA224_Update(CC_SHA256_CTX*;const void*;CC_LONG):int">
				<signature>CC_SHA224_Update(CC_SHA256_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA256" uniqueID="CC_SHA256(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_SHA256(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_SHA256_Final" uniqueID="CC_SHA256_Final(unsigned char*;CC_SHA256_CTX*):int">
				<signature>CC_SHA256_Final(unsigned char*;CC_SHA256_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA256_Init" uniqueID="CC_SHA256_Init(CC_SHA256_CTX*):int">
				<signature>CC_SHA256_Init(CC_SHA256_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA256_Update" uniqueID="CC_SHA256_Update(CC_SHA256_CTX*;const void*;CC_LONG):int">
				<signature>CC_SHA256_Update(CC_SHA256_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA384" uniqueID="CC_SHA384(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_SHA384(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_SHA384_Final" uniqueID="CC_SHA384_Final(unsigned char*;CC_SHA512_CTX*):int">
				<signature>CC_SHA384_Final(unsigned char*;CC_SHA512_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA384_Init" uniqueID="CC_SHA384_Init(CC_SHA512_CTX*):int">
				<signature>CC_SHA384_Init(CC_SHA512_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA384_Update" uniqueID="CC_SHA384_Update(CC_SHA512_CTX*;const void*;CC_LONG):int">
				<signature>CC_SHA384_Update(CC_SHA512_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA512" uniqueID="CC_SHA512(const void*;CC_LONG;unsigned char*):unsigned char*">
				<signature>CC_SHA512(const void*;CC_LONG;unsigned char*):unsigned char*</signature>
			</method>
			<method accessibility="External" name="CC_SHA512_Final" uniqueID="CC_SHA512_Final(unsigned char*;CC_SHA512_CTX*):int">
				<signature>CC_SHA512_Final(unsigned char*;CC_SHA512_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA512_Init" uniqueID="CC_SHA512_Init(CC_SHA512_CTX*):int">
				<signature>CC_SHA512_Init(CC_SHA512_CTX*):int</signature>
			</method>
			<method accessibility="External" name="CC_SHA512_Update" uniqueID="CC_SHA512_Update(CC_SHA512_CTX*;const void*;CC_LONG):int">
				<signature>CC_SHA512_Update(CC_SHA512_CTX*;const void*;CC_LONG):int</signature>
			</method>
			<method accessibility="External" name="CFArrayGetValueAtIndex" uniqueID="CFArrayGetValueAtIndex(CFArrayRef;CFIndex):const void*">
				<signature>CFArrayGetValueAtIndex(CFArrayRef;CFIndex):const void*</signature>
			</method>
			<method accessibility="External" name="CGRectMake" uniqueID="CGRectMake(CGFloat;CGFloat;CGFloat;CGFloat):CGRect">
				<signature>CGRectMake(CGFloat;CGFloat;CGFloat;CGFloat):CGRect</signature>
			</method>
			<method accessibility="External" name="MKCoordinateRegionMake" uniqueID="MKCoordinateRegionMake(CLLocationCoordinate2D;MKCoordinateSpan):MKCoordinateRegion">
				<signature>MKCoordinateRegionMake(CLLocationCoordinate2D;MKCoordinateSpan):MKCoordinateRegion</signature>
			</method>
			<method accessibility="External" name="MKCoordinateSpanMake" uniqueID="MKCoordinateSpanMake(CLLocationDegrees;CLLocationDegrees):MKCoordinateSpan">
				<signature>MKCoordinateSpanMake(CLLocationDegrees;CLLocationDegrees):MKCoordinateSpan</signature>
			</method>
			<method accessibility="External" name="NSLog" uniqueID="NSLog(NSString*;...):void">
				<signature>NSLog(NSString*;...):void</signature>
			</method>
			<method accessibility="External" name="NSMakeRange" uniqueID="NSMakeRange(NSUInteger;NSUInteger):NSRange">
				<signature>NSMakeRange(NSUInteger;NSUInteger):NSRange</signature>
			</method>
			<method accessibility="External" name="NSSearchPathForDirectoriesInDomains" uniqueID="NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory;NSSearchPathDomainMask;BOOL):NSArray&lt;NSString *&gt;*">
				<signature>NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory;NSSearchPathDomainMask;BOOL):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="External" name="NSStringFromCGPoint" uniqueID="NSStringFromCGPoint(CGPoint):NSString*">
				<signature>NSStringFromCGPoint(CGPoint):NSString*</signature>
			</method>
			<method accessibility="External" name="NSStringFromClass" uniqueID="NSStringFromClass(Class*):NSString*">
				<signature>NSStringFromClass(Class*):NSString*</signature>
			</method>
			<method accessibility="External" name="UIApplicationMain" uniqueID="UIApplicationMain(int;char**;NSString*;NSString*):int">
				<signature>UIApplicationMain(int;char**;NSString*;NSString*):int</signature>
			</method>
			<method accessibility="External" name="_dispatch_once" uniqueID="_dispatch_once(dispatch_once_t*;(^)():void):void">
				<signature>_dispatch_once(dispatch_once_t*;(^)():void):void</signature>
			</method>
			<method accessibility="External" name="dispatch_async" uniqueID="dispatch_async(NSObject&lt;OS_dispatch_queue&gt;*;(^)():void):void">
				<signature>dispatch_async(NSObject&lt;OS_dispatch_queue&gt;*;(^)():void):void</signature>
			</method>
			<method accessibility="External" name="dispatch_get_main_queue" uniqueID="dispatch_get_main_queue():NSObject&lt;OS_dispatch_queue&gt;*">
				<signature>dispatch_get_main_queue():NSObject&lt;OS_dispatch_queue&gt;*</signature>
			</method>
			<method accessibility="External" name="dlopen" uniqueID="dlopen(const char*;int):void*">
				<signature>dlopen(const char*;int):void*</signature>
			</method>
			<method accessibility="External" name="dlsym" uniqueID="dlsym(void*;const char*):void*">
				<signature>dlsym(void*;const char*):void*</signature>
			</method>
			<method accessibility="External" name="getpid" uniqueID="getpid():pid_t">
				<signature>getpid():pid_t</signature>
			</method>
			<method accessibility="External" name="main" uniqueID="main(int;char**):int">
				<signature>main(int;char**):int</signature>
			</method>
			<method accessibility="External" name="objc_getClass" uniqueID="objc_getClass(const char*):id">
				<signature>objc_getClass(const char*):id</signature>
			</method>
			<method accessibility="External" name="ptrace" uniqueID="ptrace(int;pid_t;caddr_t;int):int">
				<signature>ptrace(int;pid_t;caddr_t;int):int</signature>
			</method>
			<method accessibility="External" name="syscall" uniqueID="syscall(int;...):int">
				<signature>syscall(int;...):int</signature>
			</method>
			<method accessibility="External" name="sysctl" uniqueID="sysctl(int*;u_int;void*;size_t*;void*;size_t):int">
				<signature>sysctl(int*;u_int;void*;size_t*;void*;size_t):int</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;MTLLibrary&gt;*;NSError*):void" uniqueID="^(objc_object&lt;MTLLibrary&gt;*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;MTLLibrary&gt;*;NSError*):void">
				<signature>^(objc_object&lt;MTLLibrary&gt;*;NSError*):void.-block(objc_object&lt;MTLLibrary&gt;*;NSError*):void</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void" uniqueID="^(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void">
				<signature>^(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void.-block(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void</signature>
			</method>
		</class>
		<class name="^(id;unsigned int;char*):char" uniqueID="^(id;unsigned int;char*):char">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;unsigned int;char*):char">
				<signature>^(id;unsigned int;char*):char.-block(id;unsigned int;char*):char</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void" uniqueID="^(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void">
				<signature>^(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void.-block(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void</signature>
			</method>
		</class>
		<class name="^(const void*;_NSRange;char*):void" uniqueID="^(const void*;_NSRange;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(const void*;_NSRange;char*):void">
				<signature>^(const void*;_NSRange;char*):void.-block(const void*;_NSRange;char*):void</signature>
			</method>
		</class>
		<class name="^(NSURLCredential*):void" uniqueID="^(NSURLCredential*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSURLCredential*):void">
				<signature>^(NSURLCredential*):void.-block(NSURLCredential*):void</signature>
			</method>
		</class>
		<class name="^(NSURL*;NSURLResponse*;NSError*):void" uniqueID="^(NSURL*;NSURLResponse*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSURL*;NSURLResponse*;NSError*):void">
				<signature>^(NSURL*;NSURLResponse*;NSError*):void.-block(NSURL*;NSURLResponse*;NSError*):void</signature>
			</method>
		</class>
		<class name="^(NSString*;_NSRange;_NSRange;char*):void" uniqueID="^(NSString*;_NSRange;_NSRange;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSString*;_NSRange;_NSRange;char*):void">
				<signature>^(NSString*;_NSRange;_NSRange;char*):void.-block(NSString*;_NSRange;_NSRange;char*):void</signature>
			</method>
		</class>
		<class name="^(NSNotification*):void" uniqueID="^(NSNotification*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSNotification*):void">
				<signature>^(NSNotification*):void.-block(NSNotification*):void</signature>
			</method>
		</class>
		<class name="^(NSDictionary*):void" uniqueID="^(NSDictionary*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSDictionary*):void">
				<signature>^(NSDictionary*):void.-block(NSDictionary*):void</signature>
			</method>
		</class>
		<class name="^(NSArray*):void" uniqueID="^(NSArray*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSArray*):void">
				<signature>^(NSArray*):void.-block(NSArray*):void</signature>
			</method>
		</class>
		<class name="^(JSContext*;JSValue*):void" uniqueID="^(JSContext*;JSValue*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(JSContext*;JSValue*):void">
				<signature>^(JSContext*;JSValue*):void.-block(JSContext*;JSValue*):void</signature>
			</method>
		</class>
		<class name="^(CGRect;char*):void" uniqueID="^(CGRect;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(CGRect;char*):void">
				<signature>^(CGRect;char*):void.-block(CGRect;char*):void</signature>
			</method>
		</class>
		<class name="UIWindow" uniqueID="UIWindow">
			<method accessibility="Public" methodKind="Member" name="-becomeKeyWindow" uniqueID="-becomeKeyWindow():void">
				<signature>UIWindow.-becomeKeyWindow():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:fromWindow:" uniqueID="-convertPoint:fromWindow:(CGPoint;UIWindow*):CGPoint">
				<signature>UIWindow.-convertPoint:fromWindow:(CGPoint;UIWindow*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:toWindow:" uniqueID="-convertPoint:toWindow:(CGPoint;UIWindow*):CGPoint">
				<signature>UIWindow.-convertPoint:toWindow:(CGPoint;UIWindow*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:fromWindow:" uniqueID="-convertRect:fromWindow:(CGRect;UIWindow*):CGRect">
				<signature>UIWindow.-convertRect:fromWindow:(CGRect;UIWindow*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:toWindow:" uniqueID="-convertRect:toWindow:(CGRect;UIWindow*):CGRect">
				<signature>UIWindow.-convertRect:toWindow:(CGRect;UIWindow*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isKeyWindow" uniqueID="-isKeyWindow():BOOL">
				<signature>UIWindow.-isKeyWindow():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeKeyAndVisible" uniqueID="-makeKeyAndVisible():void">
				<signature>UIWindow.-makeKeyAndVisible():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeKeyWindow" uniqueID="-makeKeyWindow():void">
				<signature>UIWindow.-makeKeyWindow():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resignKeyWindow" uniqueID="-resignKeyWindow():void">
				<signature>UIWindow.-resignKeyWindow():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rootViewController" uniqueID="-rootViewController():UIViewController*">
				<signature>UIWindow.-rootViewController():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-screen" uniqueID="-screen():UIScreen*">
				<signature>UIWindow.-screen():UIScreen*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendEvent:" uniqueID="-sendEvent:(UIEvent*):void">
				<signature>UIWindow.-sendEvent:(UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRootViewController:" uniqueID="-setRootViewController:(UIViewController*):void">
				<signature>UIWindow.-setRootViewController:(UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScreen:" uniqueID="-setScreen:(UIScreen*):void">
				<signature>UIWindow.-setScreen:(UIScreen*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWindowLevel:" uniqueID="-setWindowLevel:(UIWindowLevel):void">
				<signature>UIWindow.-setWindowLevel:(UIWindowLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-windowLevel" uniqueID="-windowLevel():UIWindowLevel">
				<signature>UIWindow.-windowLevel():UIWindowLevel</signature>
			</method>
		</class>
		<class name="UIWebView" uniqueID="UIWebView">
			<method accessibility="Public" methodKind="Member" name="-allowsInlineMediaPlayback" uniqueID="-allowsInlineMediaPlayback():BOOL">
				<signature>UIWebView.-allowsInlineMediaPlayback():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsLinkPreview" uniqueID="-allowsLinkPreview():BOOL">
				<signature>UIWebView.-allowsLinkPreview():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsPictureInPictureMediaPlayback" uniqueID="-allowsPictureInPictureMediaPlayback():BOOL">
				<signature>UIWebView.-allowsPictureInPictureMediaPlayback():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canGoBack" uniqueID="-canGoBack():BOOL">
				<signature>UIWebView.-canGoBack():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canGoForward" uniqueID="-canGoForward():BOOL">
				<signature>UIWebView.-canGoForward():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataDetectorTypes" uniqueID="-dataDetectorTypes():UIDataDetectorTypes">
				<signature>UIWebView.-dataDetectorTypes():UIDataDetectorTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UIWebViewDelegate&gt;*">
				<signature>UIWebView.-delegate():objc_object&lt;UIWebViewDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-detectsPhoneNumbers" uniqueID="-detectsPhoneNumbers():BOOL">
				<signature>UIWebView.-detectsPhoneNumbers():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gapBetweenPages" uniqueID="-gapBetweenPages():CGFloat">
				<signature>UIWebView.-gapBetweenPages():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-goBack" uniqueID="-goBack():void">
				<signature>UIWebView.-goBack():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-goForward" uniqueID="-goForward():void">
				<signature>UIWebView.-goForward():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isLoading" uniqueID="-isLoading():BOOL">
				<signature>UIWebView.-isLoading():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyboardDisplayRequiresUserAction" uniqueID="-keyboardDisplayRequiresUserAction():BOOL">
				<signature>UIWebView.-keyboardDisplayRequiresUserAction():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadData:MIMEType:textEncodingName:baseURL:" uniqueID="-loadData:MIMEType:textEncodingName:baseURL:(NSData*;NSString*;NSString*;NSURL*):void">
				<signature>UIWebView.-loadData:MIMEType:textEncodingName:baseURL:(NSData*;NSString*;NSString*;NSURL*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadHTMLString:baseURL:" uniqueID="-loadHTMLString:baseURL:(NSString*;NSURL*):void">
				<signature>UIWebView.-loadHTMLString:baseURL:(NSString*;NSURL*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadRequest:" uniqueID="-loadRequest:(NSURLRequest*):void">
				<signature>UIWebView.-loadRequest:(NSURLRequest*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mediaPlaybackAllowsAirPlay" uniqueID="-mediaPlaybackAllowsAirPlay():BOOL">
				<signature>UIWebView.-mediaPlaybackAllowsAirPlay():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mediaPlaybackRequiresUserAction" uniqueID="-mediaPlaybackRequiresUserAction():BOOL">
				<signature>UIWebView.-mediaPlaybackRequiresUserAction():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pageCount" uniqueID="-pageCount():NSUInteger">
				<signature>UIWebView.-pageCount():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pageLength" uniqueID="-pageLength():CGFloat">
				<signature>UIWebView.-pageLength():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-paginationBreakingMode" uniqueID="-paginationBreakingMode():UIWebPaginationBreakingMode">
				<signature>UIWebView.-paginationBreakingMode():UIWebPaginationBreakingMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-paginationMode" uniqueID="-paginationMode():UIWebPaginationMode">
				<signature>UIWebView.-paginationMode():UIWebPaginationMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reload" uniqueID="-reload():void">
				<signature>UIWebView.-reload():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-request" uniqueID="-request():NSURLRequest*">
				<signature>UIWebView.-request():NSURLRequest*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scalesPageToFit" uniqueID="-scalesPageToFit():BOOL">
				<signature>UIWebView.-scalesPageToFit():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollView" uniqueID="-scrollView():UIScrollView*">
				<signature>UIWebView.-scrollView():UIScrollView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsInlineMediaPlayback:" uniqueID="-setAllowsInlineMediaPlayback:(BOOL):void">
				<signature>UIWebView.-setAllowsInlineMediaPlayback:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsLinkPreview:" uniqueID="-setAllowsLinkPreview:(BOOL):void">
				<signature>UIWebView.-setAllowsLinkPreview:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsPictureInPictureMediaPlayback:" uniqueID="-setAllowsPictureInPictureMediaPlayback:(BOOL):void">
				<signature>UIWebView.-setAllowsPictureInPictureMediaPlayback:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDataDetectorTypes:" uniqueID="-setDataDetectorTypes:(UIDataDetectorTypes):void">
				<signature>UIWebView.-setDataDetectorTypes:(UIDataDetectorTypes):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UIWebViewDelegate&gt;*):void">
				<signature>UIWebView.-setDelegate:(objc_object&lt;UIWebViewDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDetectsPhoneNumbers:" uniqueID="-setDetectsPhoneNumbers:(BOOL):void">
				<signature>UIWebView.-setDetectsPhoneNumbers:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGapBetweenPages:" uniqueID="-setGapBetweenPages:(CGFloat):void">
				<signature>UIWebView.-setGapBetweenPages:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setKeyboardDisplayRequiresUserAction:" uniqueID="-setKeyboardDisplayRequiresUserAction:(BOOL):void">
				<signature>UIWebView.-setKeyboardDisplayRequiresUserAction:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMediaPlaybackAllowsAirPlay:" uniqueID="-setMediaPlaybackAllowsAirPlay:(BOOL):void">
				<signature>UIWebView.-setMediaPlaybackAllowsAirPlay:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMediaPlaybackRequiresUserAction:" uniqueID="-setMediaPlaybackRequiresUserAction:(BOOL):void">
				<signature>UIWebView.-setMediaPlaybackRequiresUserAction:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPageLength:" uniqueID="-setPageLength:(CGFloat):void">
				<signature>UIWebView.-setPageLength:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPaginationBreakingMode:" uniqueID="-setPaginationBreakingMode:(UIWebPaginationBreakingMode):void">
				<signature>UIWebView.-setPaginationBreakingMode:(UIWebPaginationBreakingMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPaginationMode:" uniqueID="-setPaginationMode:(UIWebPaginationMode):void">
				<signature>UIWebView.-setPaginationMode:(UIWebPaginationMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScalesPageToFit:" uniqueID="-setScalesPageToFit:(BOOL):void">
				<signature>UIWebView.-setScalesPageToFit:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSuppressesIncrementalRendering:" uniqueID="-setSuppressesIncrementalRendering:(BOOL):void">
				<signature>UIWebView.-setSuppressesIncrementalRendering:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopLoading" uniqueID="-stopLoading():void">
				<signature>UIWebView.-stopLoading():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByEvaluatingJavaScriptFromString:" uniqueID="-stringByEvaluatingJavaScriptFromString:(NSString*):NSString*">
				<signature>UIWebView.-stringByEvaluatingJavaScriptFromString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-suppressesIncrementalRendering" uniqueID="-suppressesIncrementalRendering():BOOL">
				<signature>UIWebView.-suppressesIncrementalRendering():BOOL</signature>
			</method>
		</class>
		<class name="UITouch" uniqueID="UITouch">
			<method accessibility="Public" methodKind="Member" name="-altitudeAngle" uniqueID="-altitudeAngle():CGFloat">
				<signature>UITouch.-altitudeAngle():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-azimuthAngleInView:" uniqueID="-azimuthAngleInView:(UIView*):CGFloat">
				<signature>UITouch.-azimuthAngleInView:(UIView*):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-azimuthUnitVectorInView:" uniqueID="-azimuthUnitVectorInView:(UIView*):CGVector">
				<signature>UITouch.-azimuthUnitVectorInView:(UIView*):CGVector</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-estimatedProperties" uniqueID="-estimatedProperties():UITouchProperties">
				<signature>UITouch.-estimatedProperties():UITouchProperties</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-estimatedPropertiesExpectingUpdates" uniqueID="-estimatedPropertiesExpectingUpdates():UITouchProperties">
				<signature>UITouch.-estimatedPropertiesExpectingUpdates():UITouchProperties</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-estimationUpdateIndex" uniqueID="-estimationUpdateIndex():NSNumber*">
				<signature>UITouch.-estimationUpdateIndex():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-force" uniqueID="-force():CGFloat">
				<signature>UITouch.-force():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizers" uniqueID="-gestureRecognizers():NSArray&lt;UIGestureRecognizer *&gt;*">
				<signature>UITouch.-gestureRecognizers():NSArray&lt;UIGestureRecognizer *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationInView:" uniqueID="-locationInView:(UIView*):CGPoint">
				<signature>UITouch.-locationInView:(UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-majorRadius" uniqueID="-majorRadius():CGFloat">
				<signature>UITouch.-majorRadius():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-majorRadiusTolerance" uniqueID="-majorRadiusTolerance():CGFloat">
				<signature>UITouch.-majorRadiusTolerance():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumPossibleForce" uniqueID="-maximumPossibleForce():CGFloat">
				<signature>UITouch.-maximumPossibleForce():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-phase" uniqueID="-phase():UITouchPhase">
				<signature>UITouch.-phase():UITouchPhase</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preciseLocationInView:" uniqueID="-preciseLocationInView:(UIView*):CGPoint">
				<signature>UITouch.-preciseLocationInView:(UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-precisePreviousLocationInView:" uniqueID="-precisePreviousLocationInView:(UIView*):CGPoint">
				<signature>UITouch.-precisePreviousLocationInView:(UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-previousLocationInView:" uniqueID="-previousLocationInView:(UIView*):CGPoint">
				<signature>UITouch.-previousLocationInView:(UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tapCount" uniqueID="-tapCount():NSUInteger">
				<signature>UITouch.-tapCount():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timestamp" uniqueID="-timestamp():NSTimeInterval">
				<signature>UITouch.-timestamp():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-type" uniqueID="-type():UITouchType">
				<signature>UITouch.-type():UITouchType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-view" uniqueID="-view():UIView*">
				<signature>UITouch.-view():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-window" uniqueID="-window():UIWindow*">
				<signature>UITouch.-window():UIWindow*</signature>
			</method>
		</class>
		<class name="UITextView" uniqueID="UITextView">
			<method accessibility="Public" methodKind="Member" name="-allowsEditingTextAttributes" uniqueID="-allowsEditingTextAttributes():BOOL">
				<signature>UITextView.-allowsEditingTextAttributes():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributedText" uniqueID="-attributedText():NSAttributedString*">
				<signature>UITextView.-attributedText():NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearsOnInsertion" uniqueID="-clearsOnInsertion():BOOL">
				<signature>UITextView.-clearsOnInsertion():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataDetectorTypes" uniqueID="-dataDetectorTypes():UIDataDetectorTypes">
				<signature>UITextView.-dataDetectorTypes():UIDataDetectorTypes</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UITextViewDelegate&gt;*">
				<signature>UITextView.-delegate():objc_object&lt;UITextViewDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-font" uniqueID="-font():UIFont*">
				<signature>UITextView.-font():UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UITextView.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFrame:textContainer:" uniqueID="-initWithFrame:textContainer:(CGRect;NSTextContainer*):instancetype _Nonnull">
				<signature>UITextView.-initWithFrame:textContainer:(CGRect;NSTextContainer*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAccessoryView" uniqueID="-inputAccessoryView():UIView*">
				<signature>UITextView.-inputAccessoryView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputView" uniqueID="-inputView():UIView*">
				<signature>UITextView.-inputView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEditable" uniqueID="-isEditable():BOOL">
				<signature>UITextView.-isEditable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSelectable" uniqueID="-isSelectable():BOOL">
				<signature>UITextView.-isSelectable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager" uniqueID="-layoutManager():NSLayoutManager*">
				<signature>UITextView.-layoutManager():NSLayoutManager*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-linkTextAttributes" uniqueID="-linkTextAttributes():NSDictionary&lt;NSString *,id&gt;*">
				<signature>UITextView.-linkTextAttributes():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollRangeToVisible:" uniqueID="-scrollRangeToVisible:(NSRange):void">
				<signature>UITextView.-scrollRangeToVisible:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedRange" uniqueID="-selectedRange():NSRange">
				<signature>UITextView.-selectedRange():NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsEditingTextAttributes:" uniqueID="-setAllowsEditingTextAttributes:(BOOL):void">
				<signature>UITextView.-setAllowsEditingTextAttributes:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedText:" uniqueID="-setAttributedText:(NSAttributedString*):void">
				<signature>UITextView.-setAttributedText:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearsOnInsertion:" uniqueID="-setClearsOnInsertion:(BOOL):void">
				<signature>UITextView.-setClearsOnInsertion:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDataDetectorTypes:" uniqueID="-setDataDetectorTypes:(UIDataDetectorTypes):void">
				<signature>UITextView.-setDataDetectorTypes:(UIDataDetectorTypes):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UITextViewDelegate&gt;*):void">
				<signature>UITextView.-setDelegate:(objc_object&lt;UITextViewDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditable:" uniqueID="-setEditable:(BOOL):void">
				<signature>UITextView.-setEditable:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFont:" uniqueID="-setFont:(UIFont*):void">
				<signature>UITextView.-setFont:(UIFont*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputAccessoryView:" uniqueID="-setInputAccessoryView:(UIView*):void">
				<signature>UITextView.-setInputAccessoryView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputView:" uniqueID="-setInputView:(UIView*):void">
				<signature>UITextView.-setInputView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLinkTextAttributes:" uniqueID="-setLinkTextAttributes:(NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>UITextView.-setLinkTextAttributes:(NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectable:" uniqueID="-setSelectable:(BOOL):void">
				<signature>UITextView.-setSelectable:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedRange:" uniqueID="-setSelectedRange:(NSRange):void">
				<signature>UITextView.-setSelectedRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setText:" uniqueID="-setText:(NSString*):void">
				<signature>UITextView.-setText:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextAlignment:" uniqueID="-setTextAlignment:(NSTextAlignment):void">
				<signature>UITextView.-setTextAlignment:(NSTextAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextColor:" uniqueID="-setTextColor:(UIColor*):void">
				<signature>UITextView.-setTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextContainerInset:" uniqueID="-setTextContainerInset:(UIEdgeInsets):void">
				<signature>UITextView.-setTextContainerInset:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTypingAttributes:" uniqueID="-setTypingAttributes:(NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>UITextView.-setTypingAttributes:(NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():NSString*">
				<signature>UITextView.-text():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textAlignment" uniqueID="-textAlignment():NSTextAlignment">
				<signature>UITextView.-textAlignment():NSTextAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textColor" uniqueID="-textColor():UIColor*">
				<signature>UITextView.-textColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textContainer" uniqueID="-textContainer():NSTextContainer*">
				<signature>UITextView.-textContainer():NSTextContainer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textContainerInset" uniqueID="-textContainerInset():UIEdgeInsets">
				<signature>UITextView.-textContainerInset():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textStorage" uniqueID="-textStorage():NSTextStorage*">
				<signature>UITextView.-textStorage():NSTextStorage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-typingAttributes" uniqueID="-typingAttributes():NSDictionary&lt;NSString *,id&gt;*">
				<signature>UITextView.-typingAttributes():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
		</class>
		<class name="UITextField" uniqueID="UITextField">
			<method accessibility="Public" methodKind="Member" name="-adjustsFontSizeToFitWidth" uniqueID="-adjustsFontSizeToFitWidth():BOOL">
				<signature>UITextField.-adjustsFontSizeToFitWidth():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsEditingTextAttributes" uniqueID="-allowsEditingTextAttributes():BOOL">
				<signature>UITextField.-allowsEditingTextAttributes():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributedPlaceholder" uniqueID="-attributedPlaceholder():NSAttributedString*">
				<signature>UITextField.-attributedPlaceholder():NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributedText" uniqueID="-attributedText():NSAttributedString*">
				<signature>UITextField.-attributedText():NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-background" uniqueID="-background():UIImage*">
				<signature>UITextField.-background():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-borderRectForBounds:" uniqueID="-borderRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-borderRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-borderStyle" uniqueID="-borderStyle():UITextBorderStyle">
				<signature>UITextField.-borderStyle():UITextBorderStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearButtonMode" uniqueID="-clearButtonMode():UITextFieldViewMode">
				<signature>UITextField.-clearButtonMode():UITextFieldViewMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearButtonRectForBounds:" uniqueID="-clearButtonRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-clearButtonRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearsOnBeginEditing" uniqueID="-clearsOnBeginEditing():BOOL">
				<signature>UITextField.-clearsOnBeginEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearsOnInsertion" uniqueID="-clearsOnInsertion():BOOL">
				<signature>UITextField.-clearsOnInsertion():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-defaultTextAttributes" uniqueID="-defaultTextAttributes():NSDictionary&lt;NSString *,id&gt;*">
				<signature>UITextField.-defaultTextAttributes():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UITextFieldDelegate&gt;*">
				<signature>UITextField.-delegate():objc_object&lt;UITextFieldDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-disabledBackground" uniqueID="-disabledBackground():UIImage*">
				<signature>UITextField.-disabledBackground():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawPlaceholderInRect:" uniqueID="-drawPlaceholderInRect:(CGRect):void">
				<signature>UITextField.-drawPlaceholderInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawTextInRect:" uniqueID="-drawTextInRect:(CGRect):void">
				<signature>UITextField.-drawTextInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editingRectForBounds:" uniqueID="-editingRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-editingRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-font" uniqueID="-font():UIFont*">
				<signature>UITextField.-font():UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAccessoryView" uniqueID="-inputAccessoryView():UIView*">
				<signature>UITextField.-inputAccessoryView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputView" uniqueID="-inputView():UIView*">
				<signature>UITextField.-inputView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEditing" uniqueID="-isEditing():BOOL">
				<signature>UITextField.-isEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftView" uniqueID="-leftView():UIView*">
				<signature>UITextField.-leftView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftViewMode" uniqueID="-leftViewMode():UITextFieldViewMode">
				<signature>UITextField.-leftViewMode():UITextFieldViewMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftViewRectForBounds:" uniqueID="-leftViewRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-leftViewRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumFontSize" uniqueID="-minimumFontSize():CGFloat">
				<signature>UITextField.-minimumFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-placeholder" uniqueID="-placeholder():NSString*">
				<signature>UITextField.-placeholder():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-placeholderRectForBounds:" uniqueID="-placeholderRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-placeholderRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rightView" uniqueID="-rightView():UIView*">
				<signature>UITextField.-rightView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rightViewMode" uniqueID="-rightViewMode():UITextFieldViewMode">
				<signature>UITextField.-rightViewMode():UITextFieldViewMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rightViewRectForBounds:" uniqueID="-rightViewRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-rightViewRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAdjustsFontSizeToFitWidth:" uniqueID="-setAdjustsFontSizeToFitWidth:(BOOL):void">
				<signature>UITextField.-setAdjustsFontSizeToFitWidth:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsEditingTextAttributes:" uniqueID="-setAllowsEditingTextAttributes:(BOOL):void">
				<signature>UITextField.-setAllowsEditingTextAttributes:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedPlaceholder:" uniqueID="-setAttributedPlaceholder:(NSAttributedString*):void">
				<signature>UITextField.-setAttributedPlaceholder:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedText:" uniqueID="-setAttributedText:(NSAttributedString*):void">
				<signature>UITextField.-setAttributedText:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackground:" uniqueID="-setBackground:(UIImage*):void">
				<signature>UITextField.-setBackground:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBorderStyle:" uniqueID="-setBorderStyle:(UITextBorderStyle):void">
				<signature>UITextField.-setBorderStyle:(UITextBorderStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearButtonMode:" uniqueID="-setClearButtonMode:(UITextFieldViewMode):void">
				<signature>UITextField.-setClearButtonMode:(UITextFieldViewMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearsOnBeginEditing:" uniqueID="-setClearsOnBeginEditing:(BOOL):void">
				<signature>UITextField.-setClearsOnBeginEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearsOnInsertion:" uniqueID="-setClearsOnInsertion:(BOOL):void">
				<signature>UITextField.-setClearsOnInsertion:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDefaultTextAttributes:" uniqueID="-setDefaultTextAttributes:(NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>UITextField.-setDefaultTextAttributes:(NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UITextFieldDelegate&gt;*):void">
				<signature>UITextField.-setDelegate:(objc_object&lt;UITextFieldDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDisabledBackground:" uniqueID="-setDisabledBackground:(UIImage*):void">
				<signature>UITextField.-setDisabledBackground:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFont:" uniqueID="-setFont:(UIFont*):void">
				<signature>UITextField.-setFont:(UIFont*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputAccessoryView:" uniqueID="-setInputAccessoryView:(UIView*):void">
				<signature>UITextField.-setInputAccessoryView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputView:" uniqueID="-setInputView:(UIView*):void">
				<signature>UITextField.-setInputView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLeftView:" uniqueID="-setLeftView:(UIView*):void">
				<signature>UITextField.-setLeftView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLeftViewMode:" uniqueID="-setLeftViewMode:(UITextFieldViewMode):void">
				<signature>UITextField.-setLeftViewMode:(UITextFieldViewMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumFontSize:" uniqueID="-setMinimumFontSize:(CGFloat):void">
				<signature>UITextField.-setMinimumFontSize:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPlaceholder:" uniqueID="-setPlaceholder:(NSString*):void">
				<signature>UITextField.-setPlaceholder:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRightView:" uniqueID="-setRightView:(UIView*):void">
				<signature>UITextField.-setRightView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRightViewMode:" uniqueID="-setRightViewMode:(UITextFieldViewMode):void">
				<signature>UITextField.-setRightViewMode:(UITextFieldViewMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setText:" uniqueID="-setText:(NSString*):void">
				<signature>UITextField.-setText:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextAlignment:" uniqueID="-setTextAlignment:(NSTextAlignment):void">
				<signature>UITextField.-setTextAlignment:(NSTextAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextColor:" uniqueID="-setTextColor:(UIColor*):void">
				<signature>UITextField.-setTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTypingAttributes:" uniqueID="-setTypingAttributes:(NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>UITextField.-setTypingAttributes:(NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():NSString*">
				<signature>UITextField.-text():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textAlignment" uniqueID="-textAlignment():NSTextAlignment">
				<signature>UITextField.-textAlignment():NSTextAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textColor" uniqueID="-textColor():UIColor*">
				<signature>UITextField.-textColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textRectForBounds:" uniqueID="-textRectForBounds:(CGRect):CGRect">
				<signature>UITextField.-textRectForBounds:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-typingAttributes" uniqueID="-typingAttributes():NSDictionary&lt;NSString *,id&gt;*">
				<signature>UITextField.-typingAttributes():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
		</class>
		<class name="UITableViewCell+UIDeprecated" uniqueID="UITableViewCell+UIDeprecated">
			<method accessibility="Public" methodKind="Member" name="-accessoryAction" uniqueID="-accessoryAction():SEL _Nullable">
				<signature>UITableViewCell+UIDeprecated.-accessoryAction():SEL _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editAction" uniqueID="-editAction():SEL _Nullable">
				<signature>UITableViewCell+UIDeprecated.-editAction():SEL _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-font" uniqueID="-font():UIFont*">
				<signature>UITableViewCell+UIDeprecated.-font():UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hidesAccessoryWhenEditing" uniqueID="-hidesAccessoryWhenEditing():BOOL">
				<signature>UITableViewCell+UIDeprecated.-hidesAccessoryWhenEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-image" uniqueID="-image():UIImage*">
				<signature>UITableViewCell+UIDeprecated.-image():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFrame:reuseIdentifier:" uniqueID="-initWithFrame:reuseIdentifier:(CGRect;NSString*):id _Nonnull">
				<signature>UITableViewCell+UIDeprecated.-initWithFrame:reuseIdentifier:(CGRect;NSString*):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineBreakMode" uniqueID="-lineBreakMode():NSLineBreakMode">
				<signature>UITableViewCell+UIDeprecated.-lineBreakMode():NSLineBreakMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedImage" uniqueID="-selectedImage():UIImage*">
				<signature>UITableViewCell+UIDeprecated.-selectedImage():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedTextColor" uniqueID="-selectedTextColor():UIColor*">
				<signature>UITableViewCell+UIDeprecated.-selectedTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessoryAction:" uniqueID="-setAccessoryAction:(SEL _Nullable):void">
				<signature>UITableViewCell+UIDeprecated.-setAccessoryAction:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditAction:" uniqueID="-setEditAction:(SEL _Nullable):void">
				<signature>UITableViewCell+UIDeprecated.-setEditAction:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFont:" uniqueID="-setFont:(UIFont*):void">
				<signature>UITableViewCell+UIDeprecated.-setFont:(UIFont*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidesAccessoryWhenEditing:" uniqueID="-setHidesAccessoryWhenEditing:(BOOL):void">
				<signature>UITableViewCell+UIDeprecated.-setHidesAccessoryWhenEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setImage:" uniqueID="-setImage:(UIImage*):void">
				<signature>UITableViewCell+UIDeprecated.-setImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLineBreakMode:" uniqueID="-setLineBreakMode:(NSLineBreakMode):void">
				<signature>UITableViewCell+UIDeprecated.-setLineBreakMode:(NSLineBreakMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedImage:" uniqueID="-setSelectedImage:(UIImage*):void">
				<signature>UITableViewCell+UIDeprecated.-setSelectedImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedTextColor:" uniqueID="-setSelectedTextColor:(UIColor*):void">
				<signature>UITableViewCell+UIDeprecated.-setSelectedTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTarget:" uniqueID="-setTarget:(id _Nullable):void">
				<signature>UITableViewCell+UIDeprecated.-setTarget:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setText:" uniqueID="-setText:(NSString*):void">
				<signature>UITableViewCell+UIDeprecated.-setText:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextAlignment:" uniqueID="-setTextAlignment:(NSTextAlignment):void">
				<signature>UITableViewCell+UIDeprecated.-setTextAlignment:(NSTextAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextColor:" uniqueID="-setTextColor:(UIColor*):void">
				<signature>UITableViewCell+UIDeprecated.-setTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-target" uniqueID="-target():id _Nullable">
				<signature>UITableViewCell+UIDeprecated.-target():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():NSString*">
				<signature>UITableViewCell+UIDeprecated.-text():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textAlignment" uniqueID="-textAlignment():NSTextAlignment">
				<signature>UITableViewCell+UIDeprecated.-textAlignment():NSTextAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textColor" uniqueID="-textColor():UIColor*">
				<signature>UITableViewCell+UIDeprecated.-textColor():UIColor*</signature>
			</method>
		</class>
		<class name="UIStoryboardSegue" uniqueID="UIStoryboardSegue">
			<method accessibility="Public" methodKind="Member" name="-destinationViewController" uniqueID="-destinationViewController():__kindof UIViewController*">
				<signature>UIStoryboardSegue.-destinationViewController():__kindof UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-identifier" uniqueID="-identifier():NSString*">
				<signature>UIStoryboardSegue.-identifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>UIStoryboardSegue.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithIdentifier:source:destination:" uniqueID="-initWithIdentifier:source:destination:(NSString*;UIViewController*;UIViewController*):instancetype _Nonnull">
				<signature>UIStoryboardSegue.-initWithIdentifier:source:destination:(NSString*;UIViewController*;UIViewController*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-perform" uniqueID="-perform():void">
				<signature>UIStoryboardSegue.-perform():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sourceViewController" uniqueID="-sourceViewController():__kindof UIViewController*">
				<signature>UIStoryboardSegue.-sourceViewController():__kindof UIViewController*</signature>
			</method>
		</class>
		<class name="UIScrollView" uniqueID="UIScrollView">
			<method accessibility="Public" methodKind="Member" name="-alwaysBounceHorizontal" uniqueID="-alwaysBounceHorizontal():BOOL">
				<signature>UIScrollView.-alwaysBounceHorizontal():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alwaysBounceVertical" uniqueID="-alwaysBounceVertical():BOOL">
				<signature>UIScrollView.-alwaysBounceVertical():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bounces" uniqueID="-bounces():BOOL">
				<signature>UIScrollView.-bounces():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bouncesZoom" uniqueID="-bouncesZoom():BOOL">
				<signature>UIScrollView.-bouncesZoom():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canCancelContentTouches" uniqueID="-canCancelContentTouches():BOOL">
				<signature>UIScrollView.-canCancelContentTouches():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentInset" uniqueID="-contentInset():UIEdgeInsets">
				<signature>UIScrollView.-contentInset():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentOffset" uniqueID="-contentOffset():CGPoint">
				<signature>UIScrollView.-contentOffset():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentSize" uniqueID="-contentSize():CGSize">
				<signature>UIScrollView.-contentSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decelerationRate" uniqueID="-decelerationRate():CGFloat">
				<signature>UIScrollView.-decelerationRate():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delaysContentTouches" uniqueID="-delaysContentTouches():BOOL">
				<signature>UIScrollView.-delaysContentTouches():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UIScrollViewDelegate&gt;*">
				<signature>UIScrollView.-delegate():objc_object&lt;UIScrollViewDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-directionalPressGestureRecognizer" uniqueID="-directionalPressGestureRecognizer():UIGestureRecognizer*">
				<signature>UIScrollView.-directionalPressGestureRecognizer():UIGestureRecognizer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-flashScrollIndicators" uniqueID="-flashScrollIndicators():void">
				<signature>UIScrollView.-flashScrollIndicators():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indicatorStyle" uniqueID="-indicatorStyle():UIScrollViewIndicatorStyle">
				<signature>UIScrollView.-indicatorStyle():UIScrollViewIndicatorStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDecelerating" uniqueID="-isDecelerating():BOOL">
				<signature>UIScrollView.-isDecelerating():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDirectionalLockEnabled" uniqueID="-isDirectionalLockEnabled():BOOL">
				<signature>UIScrollView.-isDirectionalLockEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDragging" uniqueID="-isDragging():BOOL">
				<signature>UIScrollView.-isDragging():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isPagingEnabled" uniqueID="-isPagingEnabled():BOOL">
				<signature>UIScrollView.-isPagingEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isScrollEnabled" uniqueID="-isScrollEnabled():BOOL">
				<signature>UIScrollView.-isScrollEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isTracking" uniqueID="-isTracking():BOOL">
				<signature>UIScrollView.-isTracking():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isZoomBouncing" uniqueID="-isZoomBouncing():BOOL">
				<signature>UIScrollView.-isZoomBouncing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isZooming" uniqueID="-isZooming():BOOL">
				<signature>UIScrollView.-isZooming():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyboardDismissMode" uniqueID="-keyboardDismissMode():UIScrollViewKeyboardDismissMode">
				<signature>UIScrollView.-keyboardDismissMode():UIScrollViewKeyboardDismissMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumZoomScale" uniqueID="-maximumZoomScale():CGFloat">
				<signature>UIScrollView.-maximumZoomScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumZoomScale" uniqueID="-minimumZoomScale():CGFloat">
				<signature>UIScrollView.-minimumZoomScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-panGestureRecognizer" uniqueID="-panGestureRecognizer():UIPanGestureRecognizer*">
				<signature>UIScrollView.-panGestureRecognizer():UIPanGestureRecognizer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pinchGestureRecognizer" uniqueID="-pinchGestureRecognizer():UIPinchGestureRecognizer*">
				<signature>UIScrollView.-pinchGestureRecognizer():UIPinchGestureRecognizer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollIndicatorInsets" uniqueID="-scrollIndicatorInsets():UIEdgeInsets">
				<signature>UIScrollView.-scrollIndicatorInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollRectToVisible:animated:" uniqueID="-scrollRectToVisible:animated:(CGRect;BOOL):void">
				<signature>UIScrollView.-scrollRectToVisible:animated:(CGRect;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollsToTop" uniqueID="-scrollsToTop():BOOL">
				<signature>UIScrollView.-scrollsToTop():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAlwaysBounceHorizontal:" uniqueID="-setAlwaysBounceHorizontal:(BOOL):void">
				<signature>UIScrollView.-setAlwaysBounceHorizontal:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAlwaysBounceVertical:" uniqueID="-setAlwaysBounceVertical:(BOOL):void">
				<signature>UIScrollView.-setAlwaysBounceVertical:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBounces:" uniqueID="-setBounces:(BOOL):void">
				<signature>UIScrollView.-setBounces:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBouncesZoom:" uniqueID="-setBouncesZoom:(BOOL):void">
				<signature>UIScrollView.-setBouncesZoom:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCanCancelContentTouches:" uniqueID="-setCanCancelContentTouches:(BOOL):void">
				<signature>UIScrollView.-setCanCancelContentTouches:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentInset:" uniqueID="-setContentInset:(UIEdgeInsets):void">
				<signature>UIScrollView.-setContentInset:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentOffset:" uniqueID="-setContentOffset:(CGPoint):void">
				<signature>UIScrollView.-setContentOffset:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentOffset:animated:" uniqueID="-setContentOffset:animated:(CGPoint;BOOL):void">
				<signature>UIScrollView.-setContentOffset:animated:(CGPoint;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentSize:" uniqueID="-setContentSize:(CGSize):void">
				<signature>UIScrollView.-setContentSize:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDecelerationRate:" uniqueID="-setDecelerationRate:(CGFloat):void">
				<signature>UIScrollView.-setDecelerationRate:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelaysContentTouches:" uniqueID="-setDelaysContentTouches:(BOOL):void">
				<signature>UIScrollView.-setDelaysContentTouches:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UIScrollViewDelegate&gt;*):void">
				<signature>UIScrollView.-setDelegate:(objc_object&lt;UIScrollViewDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDirectionalLockEnabled:" uniqueID="-setDirectionalLockEnabled:(BOOL):void">
				<signature>UIScrollView.-setDirectionalLockEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIndicatorStyle:" uniqueID="-setIndicatorStyle:(UIScrollViewIndicatorStyle):void">
				<signature>UIScrollView.-setIndicatorStyle:(UIScrollViewIndicatorStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setKeyboardDismissMode:" uniqueID="-setKeyboardDismissMode:(UIScrollViewKeyboardDismissMode):void">
				<signature>UIScrollView.-setKeyboardDismissMode:(UIScrollViewKeyboardDismissMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaximumZoomScale:" uniqueID="-setMaximumZoomScale:(CGFloat):void">
				<signature>UIScrollView.-setMaximumZoomScale:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumZoomScale:" uniqueID="-setMinimumZoomScale:(CGFloat):void">
				<signature>UIScrollView.-setMinimumZoomScale:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPagingEnabled:" uniqueID="-setPagingEnabled:(BOOL):void">
				<signature>UIScrollView.-setPagingEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScrollEnabled:" uniqueID="-setScrollEnabled:(BOOL):void">
				<signature>UIScrollView.-setScrollEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScrollIndicatorInsets:" uniqueID="-setScrollIndicatorInsets:(UIEdgeInsets):void">
				<signature>UIScrollView.-setScrollIndicatorInsets:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScrollsToTop:" uniqueID="-setScrollsToTop:(BOOL):void">
				<signature>UIScrollView.-setScrollsToTop:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsHorizontalScrollIndicator:" uniqueID="-setShowsHorizontalScrollIndicator:(BOOL):void">
				<signature>UIScrollView.-setShowsHorizontalScrollIndicator:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsVerticalScrollIndicator:" uniqueID="-setShowsVerticalScrollIndicator:(BOOL):void">
				<signature>UIScrollView.-setShowsVerticalScrollIndicator:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setZoomScale:" uniqueID="-setZoomScale:(CGFloat):void">
				<signature>UIScrollView.-setZoomScale:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setZoomScale:animated:" uniqueID="-setZoomScale:animated:(CGFloat;BOOL):void">
				<signature>UIScrollView.-setZoomScale:animated:(CGFloat;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsHorizontalScrollIndicator" uniqueID="-showsHorizontalScrollIndicator():BOOL">
				<signature>UIScrollView.-showsHorizontalScrollIndicator():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsVerticalScrollIndicator" uniqueID="-showsVerticalScrollIndicator():BOOL">
				<signature>UIScrollView.-showsVerticalScrollIndicator():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesShouldBegin:withEvent:inContentView:" uniqueID="-touchesShouldBegin:withEvent:inContentView:(NSSet&lt;UITouch *&gt;*;UIEvent*;UIView*):BOOL">
				<signature>UIScrollView.-touchesShouldBegin:withEvent:inContentView:(NSSet&lt;UITouch *&gt;*;UIEvent*;UIView*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesShouldCancelInContentView:" uniqueID="-touchesShouldCancelInContentView:(UIView*):BOOL">
				<signature>UIScrollView.-touchesShouldCancelInContentView:(UIView*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-zoomScale" uniqueID="-zoomScale():CGFloat">
				<signature>UIScrollView.-zoomScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-zoomToRect:animated:" uniqueID="-zoomToRect:animated:(CGRect;BOOL):void">
				<signature>UIScrollView.-zoomToRect:animated:(CGRect;BOOL):void</signature>
			</method>
		</class>
		<class name="^(id;char*):char" uniqueID="^(id;char*):char">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;char*):char">
				<signature>^(id;char*):char.-block(id;char*):char</signature>
			</method>
		</class>
		<class name="UIScreen" uniqueID="UIScreen">
			<method accessibility="Public" methodKind="Member" name="-applicationFrame" uniqueID="-applicationFrame():CGRect">
				<signature>UIScreen.-applicationFrame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-availableModes" uniqueID="-availableModes():NSArray&lt;UIScreenMode *&gt;*">
				<signature>UIScreen.-availableModes():NSArray&lt;UIScreenMode *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bounds" uniqueID="-bounds():CGRect">
				<signature>UIScreen.-bounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-brightness" uniqueID="-brightness():CGFloat">
				<signature>UIScreen.-brightness():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-coordinateSpace" uniqueID="-coordinateSpace():objc_object&lt;UICoordinateSpace&gt;*">
				<signature>UIScreen.-coordinateSpace():objc_object&lt;UICoordinateSpace&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentMode" uniqueID="-currentMode():UIScreenMode*">
				<signature>UIScreen.-currentMode():UIScreenMode*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-displayLinkWithTarget:selector:" uniqueID="-displayLinkWithTarget:selector:(id _Nonnull;SEL _Nonnull):CADisplayLink*">
				<signature>UIScreen.-displayLinkWithTarget:selector:(id _Nonnull;SEL _Nonnull):CADisplayLink*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fixedCoordinateSpace" uniqueID="-fixedCoordinateSpace():objc_object&lt;UICoordinateSpace&gt;*">
				<signature>UIScreen.-fixedCoordinateSpace():objc_object&lt;UICoordinateSpace&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-focusedView" uniqueID="-focusedView():UIView*">
				<signature>UIScreen.-focusedView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mirroredScreen" uniqueID="-mirroredScreen():UIScreen*">
				<signature>UIScreen.-mirroredScreen():UIScreen*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nativeBounds" uniqueID="-nativeBounds():CGRect">
				<signature>UIScreen.-nativeBounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nativeScale" uniqueID="-nativeScale():CGFloat">
				<signature>UIScreen.-nativeScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overscanCompensation" uniqueID="-overscanCompensation():UIScreenOverscanCompensation">
				<signature>UIScreen.-overscanCompensation():UIScreenOverscanCompensation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overscanCompensationInsets" uniqueID="-overscanCompensationInsets():UIEdgeInsets">
				<signature>UIScreen.-overscanCompensationInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredMode" uniqueID="-preferredMode():UIScreenMode*">
				<signature>UIScreen.-preferredMode():UIScreenMode*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scale" uniqueID="-scale():CGFloat">
				<signature>UIScreen.-scale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBrightness:" uniqueID="-setBrightness:(CGFloat):void">
				<signature>UIScreen.-setBrightness:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCurrentMode:" uniqueID="-setCurrentMode:(UIScreenMode*):void">
				<signature>UIScreen.-setCurrentMode:(UIScreenMode*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOverscanCompensation:" uniqueID="-setOverscanCompensation:(UIScreenOverscanCompensation):void">
				<signature>UIScreen.-setOverscanCompensation:(UIScreenOverscanCompensation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWantsSoftwareDimming:" uniqueID="-setWantsSoftwareDimming:(BOOL):void">
				<signature>UIScreen.-setWantsSoftwareDimming:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-snapshotViewAfterScreenUpdates:" uniqueID="-snapshotViewAfterScreenUpdates:(BOOL):UIView*">
				<signature>UIScreen.-snapshotViewAfterScreenUpdates:(BOOL):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportsFocus" uniqueID="-supportsFocus():BOOL">
				<signature>UIScreen.-supportsFocus():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-wantsSoftwareDimming" uniqueID="-wantsSoftwareDimming():BOOL">
				<signature>UIScreen.-wantsSoftwareDimming():BOOL</signature>
			</method>
		</class>
		<class name="UIScreen+UISnapshotting" uniqueID="UIScreen+UISnapshotting">
			<method accessibility="Public" methodKind="Member" name="-snapshotViewAfterScreenUpdates:" uniqueID="-snapshotViewAfterScreenUpdates:(BOOL):UIView*">
				<signature>UIScreen+UISnapshotting.-snapshotViewAfterScreenUpdates:(BOOL):UIView*</signature>
			</method>
		</class>
		<class name="UIPinchGestureRecognizer" uniqueID="UIPinchGestureRecognizer">
			<method accessibility="Public" methodKind="Member" name="-scale" uniqueID="-scale():CGFloat">
				<signature>UIPinchGestureRecognizer.-scale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScale:" uniqueID="-setScale:(CGFloat):void">
				<signature>UIPinchGestureRecognizer.-setScale:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-velocity" uniqueID="-velocity():CGFloat">
				<signature>UIPinchGestureRecognizer.-velocity():CGFloat</signature>
			</method>
		</class>
		<class name="UIImageView" uniqueID="UIImageView">
			<method accessibility="Public" methodKind="Member" name="-adjustsImageWhenAncestorFocused" uniqueID="-adjustsImageWhenAncestorFocused():BOOL">
				<signature>UIImageView.-adjustsImageWhenAncestorFocused():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationDuration" uniqueID="-animationDuration():NSTimeInterval">
				<signature>UIImageView.-animationDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationImages" uniqueID="-animationImages():NSArray&lt;UIImage *&gt;*">
				<signature>UIImageView.-animationImages():NSArray&lt;UIImage *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationRepeatCount" uniqueID="-animationRepeatCount():NSInteger">
				<signature>UIImageView.-animationRepeatCount():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-focusedFrameGuide" uniqueID="-focusedFrameGuide():UILayoutGuide*">
				<signature>UIImageView.-focusedFrameGuide():UILayoutGuide*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-highlightedAnimationImages" uniqueID="-highlightedAnimationImages():NSArray&lt;UIImage *&gt;*">
				<signature>UIImageView.-highlightedAnimationImages():NSArray&lt;UIImage *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-highlightedImage" uniqueID="-highlightedImage():UIImage*">
				<signature>UIImageView.-highlightedImage():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-image" uniqueID="-image():UIImage*">
				<signature>UIImageView.-image():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:" uniqueID="-initWithImage:(UIImage*):instancetype _Nonnull">
				<signature>UIImageView.-initWithImage:(UIImage*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:highlightedImage:" uniqueID="-initWithImage:highlightedImage:(UIImage*;UIImage*):instancetype _Nonnull">
				<signature>UIImageView.-initWithImage:highlightedImage:(UIImage*;UIImage*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAnimating" uniqueID="-isAnimating():BOOL">
				<signature>UIImageView.-isAnimating():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHighlighted" uniqueID="-isHighlighted():BOOL">
				<signature>UIImageView.-isHighlighted():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUserInteractionEnabled" uniqueID="-isUserInteractionEnabled():BOOL">
				<signature>UIImageView.-isUserInteractionEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAdjustsImageWhenAncestorFocused:" uniqueID="-setAdjustsImageWhenAncestorFocused:(BOOL):void">
				<signature>UIImageView.-setAdjustsImageWhenAncestorFocused:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAnimationDuration:" uniqueID="-setAnimationDuration:(NSTimeInterval):void">
				<signature>UIImageView.-setAnimationDuration:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAnimationImages:" uniqueID="-setAnimationImages:(NSArray&lt;UIImage *&gt;*):void">
				<signature>UIImageView.-setAnimationImages:(NSArray&lt;UIImage *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAnimationRepeatCount:" uniqueID="-setAnimationRepeatCount:(NSInteger):void">
				<signature>UIImageView.-setAnimationRepeatCount:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlighted:" uniqueID="-setHighlighted:(BOOL):void">
				<signature>UIImageView.-setHighlighted:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlightedAnimationImages:" uniqueID="-setHighlightedAnimationImages:(NSArray&lt;UIImage *&gt;*):void">
				<signature>UIImageView.-setHighlightedAnimationImages:(NSArray&lt;UIImage *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlightedImage:" uniqueID="-setHighlightedImage:(UIImage*):void">
				<signature>UIImageView.-setHighlightedImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setImage:" uniqueID="-setImage:(UIImage*):void">
				<signature>UIImageView.-setImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintColor:" uniqueID="-setTintColor:(UIColor*):void">
				<signature>UIImageView.-setTintColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserInteractionEnabled:" uniqueID="-setUserInteractionEnabled:(BOOL):void">
				<signature>UIImageView.-setUserInteractionEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startAnimating" uniqueID="-startAnimating():void">
				<signature>UIImageView.-startAnimating():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopAnimating" uniqueID="-stopAnimating():void">
				<signature>UIImageView.-stopAnimating():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColor" uniqueID="-tintColor():UIColor*">
				<signature>UIImageView.-tintColor():UIColor*</signature>
			</method>
		</class>
		<class name="UIGestureRecognizer+UIGestureRecognizerProtected" uniqueID="UIGestureRecognizer+UIGestureRecognizerProtected">
			<method accessibility="Public" methodKind="Member" name="-canBePreventedByGestureRecognizer:" uniqueID="-canBePreventedByGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-canBePreventedByGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canPreventGestureRecognizer:" uniqueID="-canPreventGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-canPreventGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ignorePress:forEvent:" uniqueID="-ignorePress:forEvent:(UIPress*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-ignorePress:forEvent:(UIPress*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ignoreTouch:forEvent:" uniqueID="-ignoreTouch:forEvent:(UITouch*;UIEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-ignoreTouch:forEvent:(UITouch*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesBegan:withEvent:" uniqueID="-pressesBegan:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-pressesBegan:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesCancelled:withEvent:" uniqueID="-pressesCancelled:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-pressesCancelled:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesChanged:withEvent:" uniqueID="-pressesChanged:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-pressesChanged:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesEnded:withEvent:" uniqueID="-pressesEnded:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-pressesEnded:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reset" uniqueID="-reset():void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-reset():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setState:" uniqueID="-setState:(UIGestureRecognizerState):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-setState:(UIGestureRecognizerState):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldBeRequiredToFailByGestureRecognizer:" uniqueID="-shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldRequireFailureOfGestureRecognizer:" uniqueID="-shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-state" uniqueID="-state():UIGestureRecognizerState">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-state():UIGestureRecognizerState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesBegan:withEvent:" uniqueID="-touchesBegan:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-touchesBegan:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesCancelled:withEvent:" uniqueID="-touchesCancelled:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-touchesCancelled:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesEnded:withEvent:" uniqueID="-touchesEnded:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-touchesEnded:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesEstimatedPropertiesUpdated:" uniqueID="-touchesEstimatedPropertiesUpdated:(NSSet*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-touchesEstimatedPropertiesUpdated:(NSSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesMoved:withEvent:" uniqueID="-touchesMoved:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer+UIGestureRecognizerProtected.-touchesMoved:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
		</class>
		<class name="UIEvent" uniqueID="UIEvent">
			<method accessibility="Public" methodKind="Member" name="-allTouches" uniqueID="-allTouches():NSSet&lt;UITouch *&gt;*">
				<signature>UIEvent.-allTouches():NSSet&lt;UITouch *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-coalescedTouchesForTouch:" uniqueID="-coalescedTouchesForTouch:(UITouch*):NSArray&lt;UITouch *&gt;*">
				<signature>UIEvent.-coalescedTouchesForTouch:(UITouch*):NSArray&lt;UITouch *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predictedTouchesForTouch:" uniqueID="-predictedTouchesForTouch:(UITouch*):NSArray&lt;UITouch *&gt;*">
				<signature>UIEvent.-predictedTouchesForTouch:(UITouch*):NSArray&lt;UITouch *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subtype" uniqueID="-subtype():UIEventSubtype">
				<signature>UIEvent.-subtype():UIEventSubtype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timestamp" uniqueID="-timestamp():NSTimeInterval">
				<signature>UIEvent.-timestamp():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesForGestureRecognizer:" uniqueID="-touchesForGestureRecognizer:(UIGestureRecognizer*):NSSet&lt;UITouch *&gt;*">
				<signature>UIEvent.-touchesForGestureRecognizer:(UIGestureRecognizer*):NSSet&lt;UITouch *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesForView:" uniqueID="-touchesForView:(UIView*):NSSet&lt;UITouch *&gt;*">
				<signature>UIEvent.-touchesForView:(UIView*):NSSet&lt;UITouch *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesForWindow:" uniqueID="-touchesForWindow:(UIWindow*):NSSet&lt;UITouch *&gt;*">
				<signature>UIEvent.-touchesForWindow:(UIWindow*):NSSet&lt;UITouch *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-type" uniqueID="-type():UIEventType">
				<signature>UIEvent.-type():UIEventType</signature>
			</method>
		</class>
		<class name="UIDevice" uniqueID="UIDevice">
			<method accessibility="Public" methodKind="Member" name="-batteryLevel" uniqueID="-batteryLevel():float">
				<signature>UIDevice.-batteryLevel():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-batteryState" uniqueID="-batteryState():UIDeviceBatteryState">
				<signature>UIDevice.-batteryState():UIDeviceBatteryState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginGeneratingDeviceOrientationNotifications" uniqueID="-beginGeneratingDeviceOrientationNotifications():void">
				<signature>UIDevice.-beginGeneratingDeviceOrientationNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endGeneratingDeviceOrientationNotifications" uniqueID="-endGeneratingDeviceOrientationNotifications():void">
				<signature>UIDevice.-endGeneratingDeviceOrientationNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-identifierForVendor" uniqueID="-identifierForVendor():NSUUID*">
				<signature>UIDevice.-identifierForVendor():NSUUID*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isBatteryMonitoringEnabled" uniqueID="-isBatteryMonitoringEnabled():BOOL">
				<signature>UIDevice.-isBatteryMonitoringEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isGeneratingDeviceOrientationNotifications" uniqueID="-isGeneratingDeviceOrientationNotifications():BOOL">
				<signature>UIDevice.-isGeneratingDeviceOrientationNotifications():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMultitaskingSupported" uniqueID="-isMultitaskingSupported():BOOL">
				<signature>UIDevice.-isMultitaskingSupported():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isProximityMonitoringEnabled" uniqueID="-isProximityMonitoringEnabled():BOOL">
				<signature>UIDevice.-isProximityMonitoringEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedModel" uniqueID="-localizedModel():NSString*">
				<signature>UIDevice.-localizedModel():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-model" uniqueID="-model():NSString*">
				<signature>UIDevice.-model():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>UIDevice.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-orientation" uniqueID="-orientation():UIDeviceOrientation">
				<signature>UIDevice.-orientation():UIDeviceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-playInputClick" uniqueID="-playInputClick():void">
				<signature>UIDevice.-playInputClick():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-proximityState" uniqueID="-proximityState():BOOL">
				<signature>UIDevice.-proximityState():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBatteryMonitoringEnabled:" uniqueID="-setBatteryMonitoringEnabled:(BOOL):void">
				<signature>UIDevice.-setBatteryMonitoringEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setProximityMonitoringEnabled:" uniqueID="-setProximityMonitoringEnabled:(BOOL):void">
				<signature>UIDevice.-setProximityMonitoringEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-systemName" uniqueID="-systemName():NSString*">
				<signature>UIDevice.-systemName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-systemVersion" uniqueID="-systemVersion():NSString*">
				<signature>UIDevice.-systemVersion():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInterfaceIdiom" uniqueID="-userInterfaceIdiom():UIUserInterfaceIdiom">
				<signature>UIDevice.-userInterfaceIdiom():UIUserInterfaceIdiom</signature>
			</method>
		</class>
		<class name="UIAlertView" uniqueID="UIAlertView">
			<method accessibility="Public" methodKind="Member" name="-addButtonWithTitle:" uniqueID="-addButtonWithTitle:(NSString*):NSInteger">
				<signature>UIAlertView.-addButtonWithTitle:(NSString*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alertViewStyle" uniqueID="-alertViewStyle():UIAlertViewStyle">
				<signature>UIAlertView.-alertViewStyle():UIAlertViewStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-buttonTitleAtIndex:" uniqueID="-buttonTitleAtIndex:(NSInteger):NSString*">
				<signature>UIAlertView.-buttonTitleAtIndex:(NSInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelButtonIndex" uniqueID="-cancelButtonIndex():NSInteger">
				<signature>UIAlertView.-cancelButtonIndex():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():id _Nullable">
				<signature>UIAlertView.-delegate():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dismissWithClickedButtonIndex:animated:" uniqueID="-dismissWithClickedButtonIndex:animated:(NSInteger;BOOL):void">
				<signature>UIAlertView.-dismissWithClickedButtonIndex:animated:(NSInteger;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstOtherButtonIndex" uniqueID="-firstOtherButtonIndex():NSInteger">
				<signature>UIAlertView.-firstOtherButtonIndex():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UIAlertView.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFrame:" uniqueID="-initWithFrame:(CGRect):id _Nonnull">
				<signature>UIAlertView.-initWithFrame:(CGRect):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:" uniqueID="-initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:(NSString*;NSString*;id _Nullable;NSString*;NSString*;...):instancetype _Nonnull">
				<signature>UIAlertView.-initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:(NSString*;NSString*;id _Nullable;NSString*;NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isVisible" uniqueID="-isVisible():BOOL">
				<signature>UIAlertView.-isVisible():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-message" uniqueID="-message():NSString*">
				<signature>UIAlertView.-message():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfButtons" uniqueID="-numberOfButtons():NSInteger">
				<signature>UIAlertView.-numberOfButtons():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAlertViewStyle:" uniqueID="-setAlertViewStyle:(UIAlertViewStyle):void">
				<signature>UIAlertView.-setAlertViewStyle:(UIAlertViewStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCancelButtonIndex:" uniqueID="-setCancelButtonIndex:(NSInteger):void">
				<signature>UIAlertView.-setCancelButtonIndex:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(id _Nullable):void">
				<signature>UIAlertView.-setDelegate:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMessage:" uniqueID="-setMessage:(NSString*):void">
				<signature>UIAlertView.-setMessage:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitle:" uniqueID="-setTitle:(NSString*):void">
				<signature>UIAlertView.-setTitle:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-show" uniqueID="-show():void">
				<signature>UIAlertView.-show():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldAtIndex:" uniqueID="-textFieldAtIndex:(NSInteger):UITextField*">
				<signature>UIAlertView.-textFieldAtIndex:(NSInteger):UITextField*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>UIAlertView.-title():NSString*</signature>
			</method>
		</class>
		<class name="RadioTableViewController" uniqueID="RadioTableViewController">
			<method accessibility="Public" methodKind="Member" name="-audioPlayerDidFinishPlaying:successfully:" uniqueID="-audioPlayerDidFinishPlaying:successfully:(AVAudioPlayer*;BOOL):void">
				<signature>RadioTableViewController.-audioPlayerDidFinishPlaying:successfully:(AVAudioPlayer*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteAllRecs" uniqueID="-deleteAllRecs():void">
				<signature>RadioTableViewController.-deleteAllRecs():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>RadioTableViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfSectionsInTableView:" uniqueID="-numberOfSectionsInTableView:(UITableView*):NSInteger">
				<signature>RadioTableViewController.-numberOfSectionsInTableView:(UITableView*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-playFile:" uniqueID="-playFile:(NSString*):void">
				<signature>RadioTableViewController.-playFile:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:cellForRowAtIndexPath:" uniqueID="-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*">
				<signature>RadioTableViewController.-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didSelectRowAtIndexPath:" uniqueID="-tableView:didSelectRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>RadioTableViewController.-tableView:didSelectRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:numberOfRowsInSection:" uniqueID="-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger">
				<signature>RadioTableViewController.-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>RadioTableViewController.-viewDidLoad():void</signature>
			</method>
		</class>
		<class name="NotesTableViewController" uniqueID="NotesTableViewController">
			<method accessibility="Public" methodKind="Member" name="-addButton" uniqueID="-addButton():UIBarButtonItem*">
				<signature>NotesTableViewController.-addButton():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-arr" uniqueID="-arr():NSMutableArray*">
				<signature>NotesTableViewController.-arr():NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dict" uniqueID="-dict():NSMutableDictionary*">
				<signature>NotesTableViewController.-dict():NSMutableDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>NotesTableViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getData" uniqueID="-getData():void">
				<signature>NotesTableViewController.-getData():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfSectionsInTableView:" uniqueID="-numberOfSectionsInTableView:(UITableView*):NSInteger">
				<signature>NotesTableViewController.-numberOfSectionsInTableView:(UITableView*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareForSegue:sender:" uniqueID="-prepareForSegue:sender:(UIStoryboardSegue*;id):void">
				<signature>NotesTableViewController.-prepareForSegue:sender:(UIStoryboardSegue*;id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-refreshTable" uniqueID="-refreshTable():void">
				<signature>NotesTableViewController.-refreshTable():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAddButton:" uniqueID="-setAddButton:(UIBarButtonItem*):void">
				<signature>NotesTableViewController.-setAddButton:(UIBarButtonItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setArr:" uniqueID="-setArr:(NSMutableArray*):void">
				<signature>NotesTableViewController.-setArr:(NSMutableArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDict:" uniqueID="-setDict:(NSMutableDictionary*):void">
				<signature>NotesTableViewController.-setDict:(NSMutableDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:animated:" uniqueID="-setEditing:animated:(BOOL;BOOL):void">
				<signature>NotesTableViewController.-setEditing:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:cellForRowAtIndexPath:" uniqueID="-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*">
				<signature>NotesTableViewController.-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:commitEditingStyle:forRowAtIndexPath:" uniqueID="-tableView:commitEditingStyle:forRowAtIndexPath:(UITableView*;UITableViewCellEditingStyle;NSIndexPath*):void">
				<signature>NotesTableViewController.-tableView:commitEditingStyle:forRowAtIndexPath:(UITableView*;UITableViewCellEditingStyle;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:heightForRowAtIndexPath:" uniqueID="-tableView:heightForRowAtIndexPath:(UITableView*;NSIndexPath*):CGFloat">
				<signature>NotesTableViewController.-tableView:heightForRowAtIndexPath:(UITableView*;NSIndexPath*):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:numberOfRowsInSection:" uniqueID="-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger">
				<signature>NotesTableViewController.-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>NotesTableViewController.-viewDidLoad():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillAppear:" uniqueID="-viewWillAppear:(BOOL):void">
				<signature>NotesTableViewController.-viewWillAppear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillDisappear:" uniqueID="-viewWillDisappear:(BOOL):void">
				<signature>NotesTableViewController.-viewWillDisappear:(BOOL):void</signature>
			</method>
		</class>
		<class name="NSUUID" uniqueID="NSUUID">
			<method accessibility="Public" methodKind="Member" name="-UUIDString" uniqueID="-UUIDString():NSString*">
				<signature>NSUUID.-UUIDString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getUUIDBytes:" uniqueID="-getUUIDBytes:(unsigned char*):void">
				<signature>NSUUID.-getUUIDBytes:(unsigned char*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSUUID.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUUIDBytes:" uniqueID="-initWithUUIDBytes:(const unsigned char*):instancetype _Nonnull">
				<signature>NSUUID.-initWithUUIDBytes:(const unsigned char*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUUIDString:" uniqueID="-initWithUUIDString:(NSString*):instancetype _Nullable">
				<signature>NSUUID.-initWithUUIDString:(NSString*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSURLSessionConfiguration" uniqueID="NSURLSessionConfiguration">
			<method accessibility="Public" methodKind="Member" name="-HTTPAdditionalHeaders" uniqueID="-HTTPAdditionalHeaders():NSDictionary*">
				<signature>NSURLSessionConfiguration.-HTTPAdditionalHeaders():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPCookieAcceptPolicy" uniqueID="-HTTPCookieAcceptPolicy():NSHTTPCookieAcceptPolicy">
				<signature>NSURLSessionConfiguration.-HTTPCookieAcceptPolicy():NSHTTPCookieAcceptPolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPCookieStorage" uniqueID="-HTTPCookieStorage():NSHTTPCookieStorage*">
				<signature>NSURLSessionConfiguration.-HTTPCookieStorage():NSHTTPCookieStorage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPMaximumConnectionsPerHost" uniqueID="-HTTPMaximumConnectionsPerHost():NSInteger">
				<signature>NSURLSessionConfiguration.-HTTPMaximumConnectionsPerHost():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldSetCookies" uniqueID="-HTTPShouldSetCookies():BOOL">
				<signature>NSURLSessionConfiguration.-HTTPShouldSetCookies():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldUsePipelining" uniqueID="-HTTPShouldUsePipelining():BOOL">
				<signature>NSURLSessionConfiguration.-HTTPShouldUsePipelining():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-TLSMaximumSupportedProtocol" uniqueID="-TLSMaximumSupportedProtocol():SSLProtocol">
				<signature>NSURLSessionConfiguration.-TLSMaximumSupportedProtocol():SSLProtocol</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-TLSMinimumSupportedProtocol" uniqueID="-TLSMinimumSupportedProtocol():SSLProtocol">
				<signature>NSURLSessionConfiguration.-TLSMinimumSupportedProtocol():SSLProtocol</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLCache" uniqueID="-URLCache():NSURLCache*">
				<signature>NSURLSessionConfiguration.-URLCache():NSURLCache*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLCredentialStorage" uniqueID="-URLCredentialStorage():NSURLCredentialStorage*">
				<signature>NSURLSessionConfiguration.-URLCredentialStorage():NSURLCredentialStorage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsCellularAccess" uniqueID="-allowsCellularAccess():BOOL">
				<signature>NSURLSessionConfiguration.-allowsCellularAccess():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connectionProxyDictionary" uniqueID="-connectionProxyDictionary():NSDictionary*">
				<signature>NSURLSessionConfiguration.-connectionProxyDictionary():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-identifier" uniqueID="-identifier():NSString*">
				<signature>NSURLSessionConfiguration.-identifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDiscretionary" uniqueID="-isDiscretionary():BOOL">
				<signature>NSURLSessionConfiguration.-isDiscretionary():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-networkServiceType" uniqueID="-networkServiceType():NSURLRequestNetworkServiceType">
				<signature>NSURLSessionConfiguration.-networkServiceType():NSURLRequestNetworkServiceType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-protocolClasses" uniqueID="-protocolClasses():NSArray&lt;Class&gt;*">
				<signature>NSURLSessionConfiguration.-protocolClasses():NSArray&lt;Class&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestCachePolicy" uniqueID="-requestCachePolicy():NSURLRequestCachePolicy">
				<signature>NSURLSessionConfiguration.-requestCachePolicy():NSURLRequestCachePolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sessionSendsLaunchEvents" uniqueID="-sessionSendsLaunchEvents():BOOL">
				<signature>NSURLSessionConfiguration.-sessionSendsLaunchEvents():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsCellularAccess:" uniqueID="-setAllowsCellularAccess:(BOOL):void">
				<signature>NSURLSessionConfiguration.-setAllowsCellularAccess:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setConnectionProxyDictionary:" uniqueID="-setConnectionProxyDictionary:(NSDictionary*):void">
				<signature>NSURLSessionConfiguration.-setConnectionProxyDictionary:(NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDiscretionary:" uniqueID="-setDiscretionary:(BOOL):void">
				<signature>NSURLSessionConfiguration.-setDiscretionary:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPAdditionalHeaders:" uniqueID="-setHTTPAdditionalHeaders:(NSDictionary*):void">
				<signature>NSURLSessionConfiguration.-setHTTPAdditionalHeaders:(NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPCookieAcceptPolicy:" uniqueID="-setHTTPCookieAcceptPolicy:(NSHTTPCookieAcceptPolicy):void">
				<signature>NSURLSessionConfiguration.-setHTTPCookieAcceptPolicy:(NSHTTPCookieAcceptPolicy):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPCookieStorage:" uniqueID="-setHTTPCookieStorage:(NSHTTPCookieStorage*):void">
				<signature>NSURLSessionConfiguration.-setHTTPCookieStorage:(NSHTTPCookieStorage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPMaximumConnectionsPerHost:" uniqueID="-setHTTPMaximumConnectionsPerHost:(NSInteger):void">
				<signature>NSURLSessionConfiguration.-setHTTPMaximumConnectionsPerHost:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPShouldSetCookies:" uniqueID="-setHTTPShouldSetCookies:(BOOL):void">
				<signature>NSURLSessionConfiguration.-setHTTPShouldSetCookies:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPShouldUsePipelining:" uniqueID="-setHTTPShouldUsePipelining:(BOOL):void">
				<signature>NSURLSessionConfiguration.-setHTTPShouldUsePipelining:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNetworkServiceType:" uniqueID="-setNetworkServiceType:(NSURLRequestNetworkServiceType):void">
				<signature>NSURLSessionConfiguration.-setNetworkServiceType:(NSURLRequestNetworkServiceType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setProtocolClasses:" uniqueID="-setProtocolClasses:(NSArray&lt;Class&gt;*):void">
				<signature>NSURLSessionConfiguration.-setProtocolClasses:(NSArray&lt;Class&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRequestCachePolicy:" uniqueID="-setRequestCachePolicy:(NSURLRequestCachePolicy):void">
				<signature>NSURLSessionConfiguration.-setRequestCachePolicy:(NSURLRequestCachePolicy):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSessionSendsLaunchEvents:" uniqueID="-setSessionSendsLaunchEvents:(BOOL):void">
				<signature>NSURLSessionConfiguration.-setSessionSendsLaunchEvents:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSharedContainerIdentifier:" uniqueID="-setSharedContainerIdentifier:(NSString*):void">
				<signature>NSURLSessionConfiguration.-setSharedContainerIdentifier:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShouldUseExtendedBackgroundIdleMode:" uniqueID="-setShouldUseExtendedBackgroundIdleMode:(BOOL):void">
				<signature>NSURLSessionConfiguration.-setShouldUseExtendedBackgroundIdleMode:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTLSMaximumSupportedProtocol:" uniqueID="-setTLSMaximumSupportedProtocol:(SSLProtocol):void">
				<signature>NSURLSessionConfiguration.-setTLSMaximumSupportedProtocol:(SSLProtocol):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTLSMinimumSupportedProtocol:" uniqueID="-setTLSMinimumSupportedProtocol:(SSLProtocol):void">
				<signature>NSURLSessionConfiguration.-setTLSMinimumSupportedProtocol:(SSLProtocol):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeoutIntervalForRequest:" uniqueID="-setTimeoutIntervalForRequest:(NSTimeInterval):void">
				<signature>NSURLSessionConfiguration.-setTimeoutIntervalForRequest:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeoutIntervalForResource:" uniqueID="-setTimeoutIntervalForResource:(NSTimeInterval):void">
				<signature>NSURLSessionConfiguration.-setTimeoutIntervalForResource:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setURLCache:" uniqueID="-setURLCache:(NSURLCache*):void">
				<signature>NSURLSessionConfiguration.-setURLCache:(NSURLCache*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setURLCredentialStorage:" uniqueID="-setURLCredentialStorage:(NSURLCredentialStorage*):void">
				<signature>NSURLSessionConfiguration.-setURLCredentialStorage:(NSURLCredentialStorage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sharedContainerIdentifier" uniqueID="-sharedContainerIdentifier():NSString*">
				<signature>NSURLSessionConfiguration.-sharedContainerIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldUseExtendedBackgroundIdleMode" uniqueID="-shouldUseExtendedBackgroundIdleMode():BOOL">
				<signature>NSURLSessionConfiguration.-shouldUseExtendedBackgroundIdleMode():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeoutIntervalForRequest" uniqueID="-timeoutIntervalForRequest():NSTimeInterval">
				<signature>NSURLSessionConfiguration.-timeoutIntervalForRequest():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeoutIntervalForResource" uniqueID="-timeoutIntervalForResource():NSTimeInterval">
				<signature>NSURLSessionConfiguration.-timeoutIntervalForResource():NSTimeInterval</signature>
			</method>
		</class>
		<class name="NSURLSession" uniqueID="NSURLSession">
			<method accessibility="Public" methodKind="Member" name="-configuration" uniqueID="-configuration():NSURLSessionConfiguration*">
				<signature>NSURLSession.-configuration():NSURLSessionConfiguration*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataTaskWithRequest:" uniqueID="-dataTaskWithRequest:(NSURLRequest*):NSURLSessionDataTask*">
				<signature>NSURLSession.-dataTaskWithRequest:(NSURLRequest*):NSURLSessionDataTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataTaskWithRequest:completionHandler:" uniqueID="-dataTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*">
				<signature>NSURLSession.-dataTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataTaskWithURL:" uniqueID="-dataTaskWithURL:(NSURL*):NSURLSessionDataTask*">
				<signature>NSURLSession.-dataTaskWithURL:(NSURL*):NSURLSessionDataTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataTaskWithURL:completionHandler:" uniqueID="-dataTaskWithURL:completionHandler:(NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*">
				<signature>NSURLSession.-dataTaskWithURL:completionHandler:(NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;NSURLSessionDelegate&gt;*">
				<signature>NSURLSession.-delegate():objc_object&lt;NSURLSessionDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegateQueue" uniqueID="-delegateQueue():NSOperationQueue*">
				<signature>NSURLSession.-delegateQueue():NSOperationQueue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithRequest:" uniqueID="-downloadTaskWithRequest:(NSURLRequest*):NSURLSessionDownloadTask*">
				<signature>NSURLSession.-downloadTaskWithRequest:(NSURLRequest*):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithRequest:completionHandler:" uniqueID="-downloadTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*">
				<signature>NSURLSession.-downloadTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithResumeData:" uniqueID="-downloadTaskWithResumeData:(NSData*):NSURLSessionDownloadTask*">
				<signature>NSURLSession.-downloadTaskWithResumeData:(NSData*):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithResumeData:completionHandler:" uniqueID="-downloadTaskWithResumeData:completionHandler:(NSData*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*">
				<signature>NSURLSession.-downloadTaskWithResumeData:completionHandler:(NSData*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithURL:" uniqueID="-downloadTaskWithURL:(NSURL*):NSURLSessionDownloadTask*">
				<signature>NSURLSession.-downloadTaskWithURL:(NSURL*):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithURL:completionHandler:" uniqueID="-downloadTaskWithURL:completionHandler:(NSURL*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*">
				<signature>NSURLSession.-downloadTaskWithURL:completionHandler:(NSURL*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-finishTasksAndInvalidate" uniqueID="-finishTasksAndInvalidate():void">
				<signature>NSURLSession.-finishTasksAndInvalidate():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-flushWithCompletionHandler:" uniqueID="-flushWithCompletionHandler:((^)():void):void">
				<signature>NSURLSession.-flushWithCompletionHandler:((^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getAllTasksWithCompletionHandler:" uniqueID="-getAllTasksWithCompletionHandler:((^)(NSArray&lt;__kindof NSURLSessionTask *&gt;*):void):void">
				<signature>NSURLSession.-getAllTasksWithCompletionHandler:((^)(NSArray&lt;__kindof NSURLSessionTask *&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getTasksWithCompletionHandler:" uniqueID="-getTasksWithCompletionHandler:((^)(NSArray&lt;NSURLSessionDataTask *&gt;*;NSArray&lt;NSURLSessionUploadTask *&gt;*;NSArray&lt;NSURLSessionDownloadTask *&gt;*):void):void">
				<signature>NSURLSession.-getTasksWithCompletionHandler:((^)(NSArray&lt;NSURLSessionDataTask *&gt;*;NSArray&lt;NSURLSessionUploadTask *&gt;*;NSArray&lt;NSURLSessionDownloadTask *&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateAndCancel" uniqueID="-invalidateAndCancel():void">
				<signature>NSURLSession.-invalidateAndCancel():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resetWithCompletionHandler:" uniqueID="-resetWithCompletionHandler:((^)():void):void">
				<signature>NSURLSession.-resetWithCompletionHandler:((^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sessionDescription" uniqueID="-sessionDescription():NSString*">
				<signature>NSURLSession.-sessionDescription():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSessionDescription:" uniqueID="-setSessionDescription:(NSString*):void">
				<signature>NSURLSession.-setSessionDescription:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-streamTaskWithHostName:port:" uniqueID="-streamTaskWithHostName:port:(NSString*;NSInteger):NSURLSessionStreamTask*">
				<signature>NSURLSession.-streamTaskWithHostName:port:(NSString*;NSInteger):NSURLSessionStreamTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-streamTaskWithNetService:" uniqueID="-streamTaskWithNetService:(NSNetService*):NSURLSessionStreamTask*">
				<signature>NSURLSession.-streamTaskWithNetService:(NSNetService*):NSURLSessionStreamTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithRequest:fromData:" uniqueID="-uploadTaskWithRequest:fromData:(NSURLRequest*;NSData*):NSURLSessionUploadTask*">
				<signature>NSURLSession.-uploadTaskWithRequest:fromData:(NSURLRequest*;NSData*):NSURLSessionUploadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithRequest:fromData:completionHandler:" uniqueID="-uploadTaskWithRequest:fromData:completionHandler:(NSURLRequest*;NSData*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*">
				<signature>NSURLSession.-uploadTaskWithRequest:fromData:completionHandler:(NSURLRequest*;NSData*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithRequest:fromFile:" uniqueID="-uploadTaskWithRequest:fromFile:(NSURLRequest*;NSURL*):NSURLSessionUploadTask*">
				<signature>NSURLSession.-uploadTaskWithRequest:fromFile:(NSURLRequest*;NSURL*):NSURLSessionUploadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithRequest:fromFile:completionHandler:" uniqueID="-uploadTaskWithRequest:fromFile:completionHandler:(NSURLRequest*;NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*">
				<signature>NSURLSession.-uploadTaskWithRequest:fromFile:completionHandler:(NSURLRequest*;NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithStreamedRequest:" uniqueID="-uploadTaskWithStreamedRequest:(NSURLRequest*):NSURLSessionUploadTask*">
				<signature>NSURLSession.-uploadTaskWithStreamedRequest:(NSURLRequest*):NSURLSessionUploadTask*</signature>
			</method>
		</class>
		<class name="NSURLSession+NSURLSessionAsynchronousConvenience" uniqueID="NSURLSession+NSURLSessionAsynchronousConvenience">
			<method accessibility="Public" methodKind="Member" name="-dataTaskWithRequest:completionHandler:" uniqueID="-dataTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-dataTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataTaskWithURL:completionHandler:" uniqueID="-dataTaskWithURL:completionHandler:(NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-dataTaskWithURL:completionHandler:(NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionDataTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithRequest:completionHandler:" uniqueID="-downloadTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-downloadTaskWithRequest:completionHandler:(NSURLRequest*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithResumeData:completionHandler:" uniqueID="-downloadTaskWithResumeData:completionHandler:(NSData*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-downloadTaskWithResumeData:completionHandler:(NSData*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-downloadTaskWithURL:completionHandler:" uniqueID="-downloadTaskWithURL:completionHandler:(NSURL*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-downloadTaskWithURL:completionHandler:(NSURL*;(^)(NSURL*;NSURLResponse*;NSError*):void):NSURLSessionDownloadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithRequest:fromData:completionHandler:" uniqueID="-uploadTaskWithRequest:fromData:completionHandler:(NSURLRequest*;NSData*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-uploadTaskWithRequest:fromData:completionHandler:(NSURLRequest*;NSData*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uploadTaskWithRequest:fromFile:completionHandler:" uniqueID="-uploadTaskWithRequest:fromFile:completionHandler:(NSURLRequest*;NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*">
				<signature>NSURLSession+NSURLSessionAsynchronousConvenience.-uploadTaskWithRequest:fromFile:completionHandler:(NSURLRequest*;NSURL*;(^)(NSData*;NSURLResponse*;NSError*):void):NSURLSessionUploadTask*</signature>
			</method>
		</class>
		<class name="NSURLProtectionSpace" uniqueID="NSURLProtectionSpace">
			<method accessibility="Public" methodKind="Member" name="-authenticationMethod" uniqueID="-authenticationMethod():NSString*">
				<signature>NSURLProtectionSpace.-authenticationMethod():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-distinguishedNames" uniqueID="-distinguishedNames():NSArray&lt;NSData *&gt;*">
				<signature>NSURLProtectionSpace.-distinguishedNames():NSArray&lt;NSData *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-host" uniqueID="-host():NSString*">
				<signature>NSURLProtectionSpace.-host():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithHost:port:protocol:realm:authenticationMethod:" uniqueID="-initWithHost:port:protocol:realm:authenticationMethod:(NSString*;NSInteger;NSString*;NSString*;NSString*):instancetype _Nonnull">
				<signature>NSURLProtectionSpace.-initWithHost:port:protocol:realm:authenticationMethod:(NSString*;NSInteger;NSString*;NSString*;NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithProxyHost:port:type:realm:authenticationMethod:" uniqueID="-initWithProxyHost:port:type:realm:authenticationMethod:(NSString*;NSInteger;NSString*;NSString*;NSString*):instancetype _Nonnull">
				<signature>NSURLProtectionSpace.-initWithProxyHost:port:type:realm:authenticationMethod:(NSString*;NSInteger;NSString*;NSString*;NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isProxy" uniqueID="-isProxy():BOOL">
				<signature>NSURLProtectionSpace.-isProxy():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-port" uniqueID="-port():NSInteger">
				<signature>NSURLProtectionSpace.-port():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-protocol" uniqueID="-protocol():NSString*">
				<signature>NSURLProtectionSpace.-protocol():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-proxyType" uniqueID="-proxyType():NSString*">
				<signature>NSURLProtectionSpace.-proxyType():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-realm" uniqueID="-realm():NSString*">
				<signature>NSURLProtectionSpace.-realm():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-receivesCredentialSecurely" uniqueID="-receivesCredentialSecurely():BOOL">
				<signature>NSURLProtectionSpace.-receivesCredentialSecurely():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-serverTrust" uniqueID="-serverTrust():struct __SecTrust*">
				<signature>NSURLProtectionSpace.-serverTrust():struct __SecTrust*</signature>
			</method>
		</class>
		<class name="NSURLCredentialStorage" uniqueID="NSURLCredentialStorage">
			<method accessibility="Public" methodKind="Member" name="-allCredentials" uniqueID="-allCredentials():NSDictionary&lt;NSURLProtectionSpace *,NSDictionary&lt;NSString *,NSURLCredential *&gt; *&gt;*">
				<signature>NSURLCredentialStorage.-allCredentials():NSDictionary&lt;NSURLProtectionSpace *,NSDictionary&lt;NSString *,NSURLCredential *&gt; *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-credentialsForProtectionSpace:" uniqueID="-credentialsForProtectionSpace:(NSURLProtectionSpace*):NSDictionary&lt;NSString *,NSURLCredential *&gt;*">
				<signature>NSURLCredentialStorage.-credentialsForProtectionSpace:(NSURLProtectionSpace*):NSDictionary&lt;NSString *,NSURLCredential *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-defaultCredentialForProtectionSpace:" uniqueID="-defaultCredentialForProtectionSpace:(NSURLProtectionSpace*):NSURLCredential*">
				<signature>NSURLCredentialStorage.-defaultCredentialForProtectionSpace:(NSURLProtectionSpace*):NSURLCredential*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCredentialsForProtectionSpace:task:completionHandler:" uniqueID="-getCredentialsForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSDictionary&lt;NSString *,NSURLCredential *&gt;*):void):void">
				<signature>NSURLCredentialStorage.-getCredentialsForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSDictionary&lt;NSString *,NSURLCredential *&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getDefaultCredentialForProtectionSpace:task:completionHandler:" uniqueID="-getDefaultCredentialForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSURLCredential*):void):void">
				<signature>NSURLCredentialStorage.-getDefaultCredentialForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSURLCredential*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCredential:forProtectionSpace:" uniqueID="-removeCredential:forProtectionSpace:(NSURLCredential*;NSURLProtectionSpace*):void">
				<signature>NSURLCredentialStorage.-removeCredential:forProtectionSpace:(NSURLCredential*;NSURLProtectionSpace*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCredential:forProtectionSpace:options:" uniqueID="-removeCredential:forProtectionSpace:options:(NSURLCredential*;NSURLProtectionSpace*;NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSURLCredentialStorage.-removeCredential:forProtectionSpace:options:(NSURLCredential*;NSURLProtectionSpace*;NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCredential:forProtectionSpace:options:task:" uniqueID="-removeCredential:forProtectionSpace:options:task:(NSURLCredential*;NSURLProtectionSpace*;NSDictionary&lt;NSString *,id&gt;*;NSURLSessionTask*):void">
				<signature>NSURLCredentialStorage.-removeCredential:forProtectionSpace:options:task:(NSURLCredential*;NSURLProtectionSpace*;NSDictionary&lt;NSString *,id&gt;*;NSURLSessionTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCredential:forProtectionSpace:" uniqueID="-setCredential:forProtectionSpace:(NSURLCredential*;NSURLProtectionSpace*):void">
				<signature>NSURLCredentialStorage.-setCredential:forProtectionSpace:(NSURLCredential*;NSURLProtectionSpace*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCredential:forProtectionSpace:task:" uniqueID="-setCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void">
				<signature>NSURLCredentialStorage.-setCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDefaultCredential:forProtectionSpace:" uniqueID="-setDefaultCredential:forProtectionSpace:(NSURLCredential*;NSURLProtectionSpace*):void">
				<signature>NSURLCredentialStorage.-setDefaultCredential:forProtectionSpace:(NSURLCredential*;NSURLProtectionSpace*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDefaultCredential:forProtectionSpace:task:" uniqueID="-setDefaultCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void">
				<signature>NSURLCredentialStorage.-setDefaultCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void</signature>
			</method>
		</class>
		<class name="UIBarButtonItem" uniqueID="UIBarButtonItem">
			<method accessibility="Public" methodKind="Member" name="-action" uniqueID="-action():SEL _Nullable">
				<signature>UIBarButtonItem.-action():SEL _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backButtonBackgroundImageForState:barMetrics:" uniqueID="-backButtonBackgroundImageForState:barMetrics:(UIControlState;UIBarMetrics):UIImage*">
				<signature>UIBarButtonItem.-backButtonBackgroundImageForState:barMetrics:(UIControlState;UIBarMetrics):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:" uniqueID="-backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics):CGFloat">
				<signature>UIBarButtonItem.-backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backButtonTitlePositionAdjustmentForBarMetrics:" uniqueID="-backButtonTitlePositionAdjustmentForBarMetrics:(UIBarMetrics):UIOffset">
				<signature>UIBarButtonItem.-backButtonTitlePositionAdjustmentForBarMetrics:(UIBarMetrics):UIOffset</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundImageForState:barMetrics:" uniqueID="-backgroundImageForState:barMetrics:(UIControlState;UIBarMetrics):UIImage*">
				<signature>UIBarButtonItem.-backgroundImageForState:barMetrics:(UIControlState;UIBarMetrics):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundImageForState:style:barMetrics:" uniqueID="-backgroundImageForState:style:barMetrics:(UIControlState;UIBarButtonItemStyle;UIBarMetrics):UIImage*">
				<signature>UIBarButtonItem.-backgroundImageForState:style:barMetrics:(UIControlState;UIBarButtonItemStyle;UIBarMetrics):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundVerticalPositionAdjustmentForBarMetrics:" uniqueID="-backgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics):CGFloat">
				<signature>UIBarButtonItem.-backgroundVerticalPositionAdjustmentForBarMetrics:(UIBarMetrics):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-buttonGroup" uniqueID="-buttonGroup():UIBarButtonItemGroup*">
				<signature>UIBarButtonItem.-buttonGroup():UIBarButtonItemGroup*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-customView" uniqueID="-customView():__kindof UIView*">
				<signature>UIBarButtonItem.-customView():__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>UIBarButtonItem.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBarButtonSystemItem:target:action:" uniqueID="-initWithBarButtonSystemItem:target:action:(UIBarButtonSystemItem;id _Nullable;SEL _Nullable):instancetype _Nonnull">
				<signature>UIBarButtonItem.-initWithBarButtonSystemItem:target:action:(UIBarButtonSystemItem;id _Nullable;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UIBarButtonItem.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCustomView:" uniqueID="-initWithCustomView:(UIView*):instancetype _Nonnull">
				<signature>UIBarButtonItem.-initWithCustomView:(UIView*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:landscapeImagePhone:style:target:action:" uniqueID="-initWithImage:landscapeImagePhone:style:target:action:(UIImage*;UIImage*;UIBarButtonItemStyle;id _Nullable;SEL _Nullable):instancetype _Nonnull">
				<signature>UIBarButtonItem.-initWithImage:landscapeImagePhone:style:target:action:(UIImage*;UIImage*;UIBarButtonItemStyle;id _Nullable;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:style:target:action:" uniqueID="-initWithImage:style:target:action:(UIImage*;UIBarButtonItemStyle;id _Nullable;SEL _Nullable):instancetype _Nonnull">
				<signature>UIBarButtonItem.-initWithImage:style:target:action:(UIImage*;UIBarButtonItemStyle;id _Nullable;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTitle:style:target:action:" uniqueID="-initWithTitle:style:target:action:(NSString*;UIBarButtonItemStyle;id _Nullable;SEL _Nullable):instancetype _Nonnull">
				<signature>UIBarButtonItem.-initWithTitle:style:target:action:(NSString*;UIBarButtonItemStyle;id _Nullable;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-possibleTitles" uniqueID="-possibleTitles():NSSet&lt;NSString *&gt;*">
				<signature>UIBarButtonItem.-possibleTitles():NSSet&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAction:" uniqueID="-setAction:(SEL _Nullable):void">
				<signature>UIBarButtonItem.-setAction:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackButtonBackgroundImage:forState:barMetrics:" uniqueID="-setBackButtonBackgroundImage:forState:barMetrics:(UIImage*;UIControlState;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setBackButtonBackgroundImage:forState:barMetrics:(UIImage*;UIControlState;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:" uniqueID="-setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:(CGFloat;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:(CGFloat;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackButtonTitlePositionAdjustment:forBarMetrics:" uniqueID="-setBackButtonTitlePositionAdjustment:forBarMetrics:(UIOffset;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setBackButtonTitlePositionAdjustment:forBarMetrics:(UIOffset;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundImage:forState:barMetrics:" uniqueID="-setBackgroundImage:forState:barMetrics:(UIImage*;UIControlState;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setBackgroundImage:forState:barMetrics:(UIImage*;UIControlState;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundImage:forState:style:barMetrics:" uniqueID="-setBackgroundImage:forState:style:barMetrics:(UIImage*;UIControlState;UIBarButtonItemStyle;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setBackgroundImage:forState:style:barMetrics:(UIImage*;UIControlState;UIBarButtonItemStyle;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundVerticalPositionAdjustment:forBarMetrics:" uniqueID="-setBackgroundVerticalPositionAdjustment:forBarMetrics:(CGFloat;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setBackgroundVerticalPositionAdjustment:forBarMetrics:(CGFloat;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCustomView:" uniqueID="-setCustomView:(__kindof UIView*):void">
				<signature>UIBarButtonItem.-setCustomView:(__kindof UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPossibleTitles:" uniqueID="-setPossibleTitles:(NSSet&lt;NSString *&gt;*):void">
				<signature>UIBarButtonItem.-setPossibleTitles:(NSSet&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStyle:" uniqueID="-setStyle:(UIBarButtonItemStyle):void">
				<signature>UIBarButtonItem.-setStyle:(UIBarButtonItemStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTarget:" uniqueID="-setTarget:(id _Nullable):void">
				<signature>UIBarButtonItem.-setTarget:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintColor:" uniqueID="-setTintColor:(UIColor*):void">
				<signature>UIBarButtonItem.-setTintColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitlePositionAdjustment:forBarMetrics:" uniqueID="-setTitlePositionAdjustment:forBarMetrics:(UIOffset;UIBarMetrics):void">
				<signature>UIBarButtonItem.-setTitlePositionAdjustment:forBarMetrics:(UIOffset;UIBarMetrics):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWidth:" uniqueID="-setWidth:(CGFloat):void">
				<signature>UIBarButtonItem.-setWidth:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-style" uniqueID="-style():UIBarButtonItemStyle">
				<signature>UIBarButtonItem.-style():UIBarButtonItemStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-target" uniqueID="-target():id _Nullable">
				<signature>UIBarButtonItem.-target():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColor" uniqueID="-tintColor():UIColor*">
				<signature>UIBarButtonItem.-tintColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-titlePositionAdjustmentForBarMetrics:" uniqueID="-titlePositionAdjustmentForBarMetrics:(UIBarMetrics):UIOffset">
				<signature>UIBarButtonItem.-titlePositionAdjustmentForBarMetrics:(UIBarMetrics):UIOffset</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-width" uniqueID="-width():CGFloat">
				<signature>UIBarButtonItem.-width():CGFloat</signature>
			</method>
		</class>
		<class name="NSURLCredential+NSServerTrust" uniqueID="NSURLCredential+NSServerTrust">
			<method accessibility="Public" methodKind="Member" name="-initWithTrust:" uniqueID="-initWithTrust:(struct __SecTrust*):instancetype _Nonnull">
				<signature>NSURLCredential+NSServerTrust.-initWithTrust:(struct __SecTrust*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="^(NSDictionary*;_NSRange;char*):void" uniqueID="^(NSDictionary*;_NSRange;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSDictionary*;_NSRange;char*):void">
				<signature>^(NSDictionary*;_NSRange;char*):void.-block(NSDictionary*;_NSRange;char*):void</signature>
			</method>
		</class>
		<class name="NSURLConnection" uniqueID="NSURLConnection">
			<method accessibility="Public" methodKind="Member" name="-cancel" uniqueID="-cancel():void">
				<signature>NSURLConnection.-cancel():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentRequest" uniqueID="-currentRequest():NSURLRequest*">
				<signature>NSURLConnection.-currentRequest():NSURLRequest*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithRequest:delegate:" uniqueID="-initWithRequest:delegate:(NSURLRequest*;id _Nullable):instancetype _Nullable">
				<signature>NSURLConnection.-initWithRequest:delegate:(NSURLRequest*;id _Nullable):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithRequest:delegate:startImmediately:" uniqueID="-initWithRequest:delegate:startImmediately:(NSURLRequest*;id _Nullable;BOOL):instancetype _Nullable">
				<signature>NSURLConnection.-initWithRequest:delegate:startImmediately:(NSURLRequest*;id _Nullable;BOOL):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-originalRequest" uniqueID="-originalRequest():NSURLRequest*">
				<signature>NSURLConnection.-originalRequest():NSURLRequest*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scheduleInRunLoop:forMode:" uniqueID="-scheduleInRunLoop:forMode:(NSRunLoop*;NSString*):void">
				<signature>NSURLConnection.-scheduleInRunLoop:forMode:(NSRunLoop*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegateQueue:" uniqueID="-setDelegateQueue:(NSOperationQueue*):void">
				<signature>NSURLConnection.-setDelegateQueue:(NSOperationQueue*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-start" uniqueID="-start():void">
				<signature>NSURLConnection.-start():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unscheduleFromRunLoop:forMode:" uniqueID="-unscheduleFromRunLoop:forMode:(NSRunLoop*;NSString*):void">
				<signature>NSURLConnection.-unscheduleFromRunLoop:forMode:(NSRunLoop*;NSString*):void</signature>
			</method>
		</class>
		<class name="NSURLAuthenticationChallenge" uniqueID="NSURLAuthenticationChallenge">
			<method accessibility="Public" methodKind="Member" name="-error" uniqueID="-error():NSError*">
				<signature>NSURLAuthenticationChallenge.-error():NSError*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-failureResponse" uniqueID="-failureResponse():NSURLResponse*">
				<signature>NSURLAuthenticationChallenge.-failureResponse():NSURLResponse*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithAuthenticationChallenge:sender:" uniqueID="-initWithAuthenticationChallenge:sender:(NSURLAuthenticationChallenge*;objc_object&lt;NSURLAuthenticationChallengeSender&gt;*):instancetype _Nonnull">
				<signature>NSURLAuthenticationChallenge.-initWithAuthenticationChallenge:sender:(NSURLAuthenticationChallenge*;objc_object&lt;NSURLAuthenticationChallengeSender&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:" uniqueID="-initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:(NSURLProtectionSpace*;NSURLCredential*;NSInteger;NSURLResponse*;NSError*;objc_object&lt;NSURLAuthenticationChallengeSender&gt;*):instancetype _Nonnull">
				<signature>NSURLAuthenticationChallenge.-initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:(NSURLProtectionSpace*;NSURLCredential*;NSInteger;NSURLResponse*;NSError*;objc_object&lt;NSURLAuthenticationChallengeSender&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-previousFailureCount" uniqueID="-previousFailureCount():NSInteger">
				<signature>NSURLAuthenticationChallenge.-previousFailureCount():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-proposedCredential" uniqueID="-proposedCredential():NSURLCredential*">
				<signature>NSURLAuthenticationChallenge.-proposedCredential():NSURLCredential*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-protectionSpace" uniqueID="-protectionSpace():NSURLProtectionSpace*">
				<signature>NSURLAuthenticationChallenge.-protectionSpace():NSURLProtectionSpace*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sender" uniqueID="-sender():objc_object&lt;NSURLAuthenticationChallengeSender&gt;*">
				<signature>NSURLAuthenticationChallenge.-sender():objc_object&lt;NSURLAuthenticationChallengeSender&gt;*</signature>
			</method>
		</class>
		<class name="NSURL" uniqueID="NSURL">
			<method accessibility="Public" methodKind="Member" name="-URLByAppendingPathComponent:" uniqueID="-URLByAppendingPathComponent:(NSString*):NSURL*">
				<signature>NSURL.-URLByAppendingPathComponent:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByAppendingPathComponent:isDirectory:" uniqueID="-URLByAppendingPathComponent:isDirectory:(NSString*;BOOL):NSURL*">
				<signature>NSURL.-URLByAppendingPathComponent:isDirectory:(NSString*;BOOL):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByAppendingPathExtension:" uniqueID="-URLByAppendingPathExtension:(NSString*):NSURL*">
				<signature>NSURL.-URLByAppendingPathExtension:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByDeletingLastPathComponent" uniqueID="-URLByDeletingLastPathComponent():NSURL*">
				<signature>NSURL.-URLByDeletingLastPathComponent():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByDeletingPathExtension" uniqueID="-URLByDeletingPathExtension():NSURL*">
				<signature>NSURL.-URLByDeletingPathExtension():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByResolvingSymlinksInPath" uniqueID="-URLByResolvingSymlinksInPath():NSURL*">
				<signature>NSURL.-URLByResolvingSymlinksInPath():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByStandardizingPath" uniqueID="-URLByStandardizingPath():NSURL*">
				<signature>NSURL.-URLByStandardizingPath():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-absoluteString" uniqueID="-absoluteString():NSString*">
				<signature>NSURL.-absoluteString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-absoluteURL" uniqueID="-absoluteURL():NSURL*">
				<signature>NSURL.-absoluteURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-baseURL" uniqueID="-baseURL():NSURL*">
				<signature>NSURL.-baseURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:" uniqueID="-bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:(NSURLBookmarkCreationOptions;NSArray&lt;NSString *&gt;*;NSURL*;NSError**):NSData*">
				<signature>NSURL.-bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:(NSURLBookmarkCreationOptions;NSArray&lt;NSString *&gt;*;NSURL*;NSError**):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-checkPromisedItemIsReachableAndReturnError:" uniqueID="-checkPromisedItemIsReachableAndReturnError:(NSError**):BOOL">
				<signature>NSURL.-checkPromisedItemIsReachableAndReturnError:(NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-checkResourceIsReachableAndReturnError:" uniqueID="-checkResourceIsReachableAndReturnError:(NSError**):BOOL">
				<signature>NSURL.-checkResourceIsReachableAndReturnError:(NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataRepresentation" uniqueID="-dataRepresentation():NSData*">
				<signature>NSURL.-dataRepresentation():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filePathURL" uniqueID="-filePathURL():NSURL*">
				<signature>NSURL.-filePathURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileReferenceURL" uniqueID="-fileReferenceURL():NSURL*">
				<signature>NSURL.-fileReferenceURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemRepresentation" uniqueID="-fileSystemRepresentation():const char*">
				<signature>NSURL.-fileSystemRepresentation():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fragment" uniqueID="-fragment():NSString*">
				<signature>NSURL.-fragment():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getFileSystemRepresentation:maxLength:" uniqueID="-getFileSystemRepresentation:maxLength:(char*;NSUInteger):BOOL">
				<signature>NSURL.-getFileSystemRepresentation:maxLength:(char*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getPromisedItemResourceValue:forKey:error:" uniqueID="-getPromisedItemResourceValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSURL.-getPromisedItemResourceValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getResourceValue:forKey:error:" uniqueID="-getResourceValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSURL.-getResourceValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasDirectoryPath" uniqueID="-hasDirectoryPath():BOOL">
				<signature>NSURL.-hasDirectoryPath():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-host" uniqueID="-host():NSString*">
				<signature>NSURL.-host():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initAbsoluteURLWithDataRepresentation:relativeToURL:" uniqueID="-initAbsoluteURLWithDataRepresentation:relativeToURL:(NSData*;NSURL*):instancetype _Nonnull">
				<signature>NSURL.-initAbsoluteURLWithDataRepresentation:relativeToURL:(NSData*;NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:" uniqueID="-initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:(NSData*;NSURLBookmarkResolutionOptions;NSURL*;BOOL*;NSError**):instancetype _Nullable">
				<signature>NSURL.-initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:(NSData*;NSURLBookmarkResolutionOptions;NSURL*;BOOL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:" uniqueID="-initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:(const char*;BOOL;NSURL*):instancetype _Nonnull">
				<signature>NSURL.-initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:(const char*;BOOL;NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initFileURLWithPath:" uniqueID="-initFileURLWithPath:(NSString*):instancetype _Nonnull">
				<signature>NSURL.-initFileURLWithPath:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initFileURLWithPath:isDirectory:" uniqueID="-initFileURLWithPath:isDirectory:(NSString*;BOOL):instancetype _Nonnull">
				<signature>NSURL.-initFileURLWithPath:isDirectory:(NSString*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initFileURLWithPath:isDirectory:relativeToURL:" uniqueID="-initFileURLWithPath:isDirectory:relativeToURL:(NSString*;BOOL;NSURL*):instancetype _Nonnull">
				<signature>NSURL.-initFileURLWithPath:isDirectory:relativeToURL:(NSString*;BOOL;NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initFileURLWithPath:relativeToURL:" uniqueID="-initFileURLWithPath:relativeToURL:(NSString*;NSURL*):instancetype _Nonnull">
				<signature>NSURL.-initFileURLWithPath:relativeToURL:(NSString*;NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDataRepresentation:relativeToURL:" uniqueID="-initWithDataRepresentation:relativeToURL:(NSData*;NSURL*):instancetype _Nonnull">
				<signature>NSURL.-initWithDataRepresentation:relativeToURL:(NSData*;NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithScheme:host:path:" uniqueID="-initWithScheme:host:path:(NSString*;NSString*;NSString*):instancetype _Nullable">
				<signature>NSURL.-initWithScheme:host:path:(NSString*;NSString*;NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:" uniqueID="-initWithString:(NSString*):instancetype _Nullable">
				<signature>NSURL.-initWithString:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:relativeToURL:" uniqueID="-initWithString:relativeToURL:(NSString*;NSURL*):instancetype _Nullable">
				<signature>NSURL.-initWithString:relativeToURL:(NSString*;NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isFileReferenceURL" uniqueID="-isFileReferenceURL():BOOL">
				<signature>NSURL.-isFileReferenceURL():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isFileURL" uniqueID="-isFileURL():BOOL">
				<signature>NSURL.-isFileURL():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastPathComponent" uniqueID="-lastPathComponent():NSString*">
				<signature>NSURL.-lastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-parameterString" uniqueID="-parameterString():NSString*">
				<signature>NSURL.-parameterString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-password" uniqueID="-password():NSString*">
				<signature>NSURL.-password():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-path" uniqueID="-path():NSString*">
				<signature>NSURL.-path():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathComponents" uniqueID="-pathComponents():NSArray&lt;NSString *&gt;*">
				<signature>NSURL.-pathComponents():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathExtension" uniqueID="-pathExtension():NSString*">
				<signature>NSURL.-pathExtension():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-port" uniqueID="-port():NSNumber*">
				<signature>NSURL.-port():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-promisedItemResourceValuesForKeys:error:" uniqueID="-promisedItemResourceValuesForKeys:error:(NSArray&lt;NSString *&gt;*;NSError**):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSURL.-promisedItemResourceValuesForKeys:error:(NSArray&lt;NSString *&gt;*;NSError**):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-query" uniqueID="-query():NSString*">
				<signature>NSURL.-query():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-relativePath" uniqueID="-relativePath():NSString*">
				<signature>NSURL.-relativePath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-relativeString" uniqueID="-relativeString():NSString*">
				<signature>NSURL.-relativeString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllCachedResourceValues" uniqueID="-removeAllCachedResourceValues():void">
				<signature>NSURL.-removeAllCachedResourceValues():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCachedResourceValueForKey:" uniqueID="-removeCachedResourceValueForKey:(NSString*):void">
				<signature>NSURL.-removeCachedResourceValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resourceSpecifier" uniqueID="-resourceSpecifier():NSString*">
				<signature>NSURL.-resourceSpecifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resourceValuesForKeys:error:" uniqueID="-resourceValuesForKeys:error:(NSArray&lt;NSString *&gt;*;NSError**):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSURL.-resourceValuesForKeys:error:(NSArray&lt;NSString *&gt;*;NSError**):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scheme" uniqueID="-scheme():NSString*">
				<signature>NSURL.-scheme():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setResourceValue:forKey:error:" uniqueID="-setResourceValue:forKey:error:(id _Nullable;NSString*;NSError**):BOOL">
				<signature>NSURL.-setResourceValue:forKey:error:(id _Nullable;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setResourceValues:error:" uniqueID="-setResourceValues:error:(NSDictionary&lt;NSString *,id&gt;*;NSError**):BOOL">
				<signature>NSURL.-setResourceValues:error:(NSDictionary&lt;NSString *,id&gt;*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTemporaryResourceValue:forKey:" uniqueID="-setTemporaryResourceValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSURL.-setTemporaryResourceValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standardizedURL" uniqueID="-standardizedURL():NSURL*">
				<signature>NSURL.-standardizedURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startAccessingSecurityScopedResource" uniqueID="-startAccessingSecurityScopedResource():BOOL">
				<signature>NSURL.-startAccessingSecurityScopedResource():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopAccessingSecurityScopedResource" uniqueID="-stopAccessingSecurityScopedResource():void">
				<signature>NSURL.-stopAccessingSecurityScopedResource():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-user" uniqueID="-user():NSString*">
				<signature>NSURL.-user():NSString*</signature>
			</method>
		</class>
		<class name="NSURL+NSURLPathUtilities" uniqueID="NSURL+NSURLPathUtilities">
			<method accessibility="Public" methodKind="Member" name="-URLByAppendingPathComponent:" uniqueID="-URLByAppendingPathComponent:(NSString*):NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByAppendingPathComponent:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByAppendingPathComponent:isDirectory:" uniqueID="-URLByAppendingPathComponent:isDirectory:(NSString*;BOOL):NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByAppendingPathComponent:isDirectory:(NSString*;BOOL):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByAppendingPathExtension:" uniqueID="-URLByAppendingPathExtension:(NSString*):NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByAppendingPathExtension:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByDeletingLastPathComponent" uniqueID="-URLByDeletingLastPathComponent():NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByDeletingLastPathComponent():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByDeletingPathExtension" uniqueID="-URLByDeletingPathExtension():NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByDeletingPathExtension():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByResolvingSymlinksInPath" uniqueID="-URLByResolvingSymlinksInPath():NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByResolvingSymlinksInPath():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLByStandardizingPath" uniqueID="-URLByStandardizingPath():NSURL*">
				<signature>NSURL+NSURLPathUtilities.-URLByStandardizingPath():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastPathComponent" uniqueID="-lastPathComponent():NSString*">
				<signature>NSURL+NSURLPathUtilities.-lastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathComponents" uniqueID="-pathComponents():NSArray&lt;NSString *&gt;*">
				<signature>NSURL+NSURLPathUtilities.-pathComponents():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathExtension" uniqueID="-pathExtension():NSString*">
				<signature>NSURL+NSURLPathUtilities.-pathExtension():NSString*</signature>
			</method>
		</class>
		<class name="^(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void" uniqueID="^(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void">
				<signature>^(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void.-block(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void</signature>
			</method>
		</class>
		<class name="NSURL+NSPromisedItems" uniqueID="NSURL+NSPromisedItems">
			<method accessibility="Public" methodKind="Member" name="-checkPromisedItemIsReachableAndReturnError:" uniqueID="-checkPromisedItemIsReachableAndReturnError:(NSError**):BOOL">
				<signature>NSURL+NSPromisedItems.-checkPromisedItemIsReachableAndReturnError:(NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getPromisedItemResourceValue:forKey:error:" uniqueID="-getPromisedItemResourceValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSURL+NSPromisedItems.-getPromisedItemResourceValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-promisedItemResourceValuesForKeys:error:" uniqueID="-promisedItemResourceValuesForKeys:error:(NSArray&lt;NSString *&gt;*;NSError**):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSURL+NSPromisedItems.-promisedItemResourceValuesForKeys:error:(NSArray&lt;NSString *&gt;*;NSError**):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
		</class>
		<class name="NSTimeZone" uniqueID="NSTimeZone">
			<method accessibility="Public" methodKind="Member" name="-abbreviation" uniqueID="-abbreviation():NSString*">
				<signature>NSTimeZone.-abbreviation():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-abbreviationForDate:" uniqueID="-abbreviationForDate:(NSDate*):NSString*">
				<signature>NSTimeZone.-abbreviationForDate:(NSDate*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-data" uniqueID="-data():NSData*">
				<signature>NSTimeZone.-data():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-daylightSavingTimeOffset" uniqueID="-daylightSavingTimeOffset():NSTimeInterval">
				<signature>NSTimeZone.-daylightSavingTimeOffset():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-daylightSavingTimeOffsetForDate:" uniqueID="-daylightSavingTimeOffsetForDate:(NSDate*):NSTimeInterval">
				<signature>NSTimeZone.-daylightSavingTimeOffsetForDate:(NSDate*):NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSTimeZone.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithName:" uniqueID="-initWithName:(NSString*):instancetype _Nullable">
				<signature>NSTimeZone.-initWithName:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithName:data:" uniqueID="-initWithName:data:(NSString*;NSData*):instancetype _Nullable">
				<signature>NSTimeZone.-initWithName:data:(NSString*;NSData*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDaylightSavingTime" uniqueID="-isDaylightSavingTime():BOOL">
				<signature>NSTimeZone.-isDaylightSavingTime():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDaylightSavingTimeForDate:" uniqueID="-isDaylightSavingTimeForDate:(NSDate*):BOOL">
				<signature>NSTimeZone.-isDaylightSavingTimeForDate:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToTimeZone:" uniqueID="-isEqualToTimeZone:(NSTimeZone*):BOOL">
				<signature>NSTimeZone.-isEqualToTimeZone:(NSTimeZone*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedName:locale:" uniqueID="-localizedName:locale:(NSTimeZoneNameStyle;NSLocale*):NSString*">
				<signature>NSTimeZone.-localizedName:locale:(NSTimeZoneNameStyle;NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>NSTimeZone.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextDaylightSavingTimeTransition" uniqueID="-nextDaylightSavingTimeTransition():NSDate*">
				<signature>NSTimeZone.-nextDaylightSavingTimeTransition():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextDaylightSavingTimeTransitionAfterDate:" uniqueID="-nextDaylightSavingTimeTransitionAfterDate:(NSDate*):NSDate*">
				<signature>NSTimeZone.-nextDaylightSavingTimeTransitionAfterDate:(NSDate*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-secondsFromGMT" uniqueID="-secondsFromGMT():NSInteger">
				<signature>NSTimeZone.-secondsFromGMT():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-secondsFromGMTForDate:" uniqueID="-secondsFromGMTForDate:(NSDate*):NSInteger">
				<signature>NSTimeZone.-secondsFromGMTForDate:(NSDate*):NSInteger</signature>
			</method>
		</class>
		<class name="NSTimeZone+NSExtendedTimeZone" uniqueID="NSTimeZone+NSExtendedTimeZone">
			<method accessibility="Public" methodKind="Member" name="-abbreviation" uniqueID="-abbreviation():NSString*">
				<signature>NSTimeZone+NSExtendedTimeZone.-abbreviation():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-daylightSavingTimeOffset" uniqueID="-daylightSavingTimeOffset():NSTimeInterval">
				<signature>NSTimeZone+NSExtendedTimeZone.-daylightSavingTimeOffset():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSTimeZone+NSExtendedTimeZone.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDaylightSavingTime" uniqueID="-isDaylightSavingTime():BOOL">
				<signature>NSTimeZone+NSExtendedTimeZone.-isDaylightSavingTime():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToTimeZone:" uniqueID="-isEqualToTimeZone:(NSTimeZone*):BOOL">
				<signature>NSTimeZone+NSExtendedTimeZone.-isEqualToTimeZone:(NSTimeZone*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedName:locale:" uniqueID="-localizedName:locale:(NSTimeZoneNameStyle;NSLocale*):NSString*">
				<signature>NSTimeZone+NSExtendedTimeZone.-localizedName:locale:(NSTimeZoneNameStyle;NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextDaylightSavingTimeTransition" uniqueID="-nextDaylightSavingTimeTransition():NSDate*">
				<signature>NSTimeZone+NSExtendedTimeZone.-nextDaylightSavingTimeTransition():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-secondsFromGMT" uniqueID="-secondsFromGMT():NSInteger">
				<signature>NSTimeZone+NSExtendedTimeZone.-secondsFromGMT():NSInteger</signature>
			</method>
		</class>
		<class name="NSTextContainer" uniqueID="NSTextContainer">
			<method accessibility="Public" methodKind="Member" name="-exclusionPaths" uniqueID="-exclusionPaths():NSArray&lt;UIBezierPath *&gt;*">
				<signature>NSTextContainer.-exclusionPaths():NSArray&lt;UIBezierPath *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heightTracksTextView" uniqueID="-heightTracksTextView():BOOL">
				<signature>NSTextContainer.-heightTracksTextView():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSTextContainer.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithSize:" uniqueID="-initWithSize:(CGSize):instancetype _Nonnull">
				<signature>NSTextContainer.-initWithSize:(CGSize):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSimpleRectangularTextContainer" uniqueID="-isSimpleRectangularTextContainer():BOOL">
				<signature>NSTextContainer.-isSimpleRectangularTextContainer():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager" uniqueID="-layoutManager():NSLayoutManager*">
				<signature>NSTextContainer.-layoutManager():NSLayoutManager*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineBreakMode" uniqueID="-lineBreakMode():NSLineBreakMode">
				<signature>NSTextContainer.-lineBreakMode():NSLineBreakMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineFragmentPadding" uniqueID="-lineFragmentPadding():CGFloat">
				<signature>NSTextContainer.-lineFragmentPadding():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:" uniqueID="-lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:(CGRect;NSUInteger;NSWritingDirection;CGRect*):CGRect">
				<signature>NSTextContainer.-lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:(CGRect;NSUInteger;NSWritingDirection;CGRect*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumNumberOfLines" uniqueID="-maximumNumberOfLines():NSUInteger">
				<signature>NSTextContainer.-maximumNumberOfLines():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceLayoutManager:" uniqueID="-replaceLayoutManager:(NSLayoutManager*):void">
				<signature>NSTextContainer.-replaceLayoutManager:(NSLayoutManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setExclusionPaths:" uniqueID="-setExclusionPaths:(NSArray&lt;UIBezierPath *&gt;*):void">
				<signature>NSTextContainer.-setExclusionPaths:(NSArray&lt;UIBezierPath *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHeightTracksTextView:" uniqueID="-setHeightTracksTextView:(BOOL):void">
				<signature>NSTextContainer.-setHeightTracksTextView:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLayoutManager:" uniqueID="-setLayoutManager:(NSLayoutManager*):void">
				<signature>NSTextContainer.-setLayoutManager:(NSLayoutManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLineBreakMode:" uniqueID="-setLineBreakMode:(NSLineBreakMode):void">
				<signature>NSTextContainer.-setLineBreakMode:(NSLineBreakMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLineFragmentPadding:" uniqueID="-setLineFragmentPadding:(CGFloat):void">
				<signature>NSTextContainer.-setLineFragmentPadding:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaximumNumberOfLines:" uniqueID="-setMaximumNumberOfLines:(NSUInteger):void">
				<signature>NSTextContainer.-setMaximumNumberOfLines:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSize:" uniqueID="-setSize:(CGSize):void">
				<signature>NSTextContainer.-setSize:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWidthTracksTextView:" uniqueID="-setWidthTracksTextView:(BOOL):void">
				<signature>NSTextContainer.-setWidthTracksTextView:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-size" uniqueID="-size():CGSize">
				<signature>NSTextContainer.-size():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-widthTracksTextView" uniqueID="-widthTracksTextView():BOOL">
				<signature>NSTextContainer.-widthTracksTextView():BOOL</signature>
			</method>
		</class>
		<class name="NSString+UIStringDrawing" uniqueID="NSString+UIStringDrawing">
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:" uniqueID="-drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;NSLineBreakMode;UIBaselineAdjustment):CGSize">
				<signature>NSString+UIStringDrawing.-drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;NSLineBreakMode;UIBaselineAdjustment):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:forWidth:withFont:lineBreakMode:" uniqueID="-drawAtPoint:forWidth:withFont:lineBreakMode:(CGPoint;CGFloat;UIFont*;NSLineBreakMode):CGSize">
				<signature>NSString+UIStringDrawing.-drawAtPoint:forWidth:withFont:lineBreakMode:(CGPoint;CGFloat;UIFont*;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:" uniqueID="-drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;CGFloat*;NSLineBreakMode;UIBaselineAdjustment):CGSize">
				<signature>NSString+UIStringDrawing.-drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;CGFloat*;NSLineBreakMode;UIBaselineAdjustment):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:withFont:" uniqueID="-drawAtPoint:withFont:(CGPoint;UIFont*):CGSize">
				<signature>NSString+UIStringDrawing.-drawAtPoint:withFont:(CGPoint;UIFont*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withFont:" uniqueID="-drawInRect:withFont:(CGRect;UIFont*):CGSize">
				<signature>NSString+UIStringDrawing.-drawInRect:withFont:(CGRect;UIFont*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withFont:lineBreakMode:" uniqueID="-drawInRect:withFont:lineBreakMode:(CGRect;UIFont*;NSLineBreakMode):CGSize">
				<signature>NSString+UIStringDrawing.-drawInRect:withFont:lineBreakMode:(CGRect;UIFont*;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withFont:lineBreakMode:alignment:" uniqueID="-drawInRect:withFont:lineBreakMode:alignment:(CGRect;UIFont*;NSLineBreakMode;NSTextAlignment):CGSize">
				<signature>NSString+UIStringDrawing.-drawInRect:withFont:lineBreakMode:alignment:(CGRect;UIFont*;NSLineBreakMode;NSTextAlignment):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:" uniqueID="-sizeWithFont:(UIFont*):CGSize">
				<signature>NSString+UIStringDrawing.-sizeWithFont:(UIFont*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:constrainedToSize:" uniqueID="-sizeWithFont:constrainedToSize:(UIFont*;CGSize):CGSize">
				<signature>NSString+UIStringDrawing.-sizeWithFont:constrainedToSize:(UIFont*;CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:constrainedToSize:lineBreakMode:" uniqueID="-sizeWithFont:constrainedToSize:lineBreakMode:(UIFont*;CGSize;NSLineBreakMode):CGSize">
				<signature>NSString+UIStringDrawing.-sizeWithFont:constrainedToSize:lineBreakMode:(UIFont*;CGSize;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:forWidth:lineBreakMode:" uniqueID="-sizeWithFont:forWidth:lineBreakMode:(UIFont*;CGFloat;NSLineBreakMode):CGSize">
				<signature>NSString+UIStringDrawing.-sizeWithFont:forWidth:lineBreakMode:(UIFont*;CGFloat;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:" uniqueID="-sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:(UIFont*;CGFloat;CGFloat*;CGFloat;NSLineBreakMode):CGSize">
				<signature>NSString+UIStringDrawing.-sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:(UIFont*;CGFloat;CGFloat*;CGFloat;NSLineBreakMode):CGSize</signature>
			</method>
		</class>
		<class name="UIBarItem" uniqueID="UIBarItem">
			<method accessibility="Public" methodKind="Member" name="-image" uniqueID="-image():UIImage*">
				<signature>UIBarItem.-image():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageInsets" uniqueID="-imageInsets():UIEdgeInsets">
				<signature>UIBarItem.-imageInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>UIBarItem.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UIBarItem.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEnabled" uniqueID="-isEnabled():BOOL">
				<signature>UIBarItem.-isEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-landscapeImagePhone" uniqueID="-landscapeImagePhone():UIImage*">
				<signature>UIBarItem.-landscapeImagePhone():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-landscapeImagePhoneInsets" uniqueID="-landscapeImagePhoneInsets():UIEdgeInsets">
				<signature>UIBarItem.-landscapeImagePhoneInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEnabled:" uniqueID="-setEnabled:(BOOL):void">
				<signature>UIBarItem.-setEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setImage:" uniqueID="-setImage:(UIImage*):void">
				<signature>UIBarItem.-setImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setImageInsets:" uniqueID="-setImageInsets:(UIEdgeInsets):void">
				<signature>UIBarItem.-setImageInsets:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLandscapeImagePhone:" uniqueID="-setLandscapeImagePhone:(UIImage*):void">
				<signature>UIBarItem.-setLandscapeImagePhone:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLandscapeImagePhoneInsets:" uniqueID="-setLandscapeImagePhoneInsets:(UIEdgeInsets):void">
				<signature>UIBarItem.-setLandscapeImagePhoneInsets:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTag:" uniqueID="-setTag:(NSInteger):void">
				<signature>UIBarItem.-setTag:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitle:" uniqueID="-setTitle:(NSString*):void">
				<signature>UIBarItem.-setTitle:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitleTextAttributes:forState:" uniqueID="-setTitleTextAttributes:forState:(NSDictionary&lt;NSString *,id&gt;*;UIControlState):void">
				<signature>UIBarItem.-setTitleTextAttributes:forState:(NSDictionary&lt;NSString *,id&gt;*;UIControlState):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tag" uniqueID="-tag():NSInteger">
				<signature>UIBarItem.-tag():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>UIBarItem.-title():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-titleTextAttributesForState:" uniqueID="-titleTextAttributesForState:(UIControlState):NSDictionary&lt;NSString *,id&gt;*">
				<signature>UIBarItem.-titleTextAttributesForState:(UIControlState):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
		</class>
		<class name="NSString+NSStringPathExtensions" uniqueID="NSString+NSStringPathExtensions">
			<method accessibility="Public" methodKind="Member" name="-completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:" uniqueID="-completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:(NSString**;BOOL;NSArray&lt;NSString *&gt;**;NSArray&lt;NSString *&gt;*):NSUInteger">
				<signature>NSString+NSStringPathExtensions.-completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:(NSString**;BOOL;NSArray&lt;NSString *&gt;**;NSArray&lt;NSString *&gt;*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemRepresentation" uniqueID="-fileSystemRepresentation():const char*">
				<signature>NSString+NSStringPathExtensions.-fileSystemRepresentation():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getFileSystemRepresentation:maxLength:" uniqueID="-getFileSystemRepresentation:maxLength:(char*;NSUInteger):BOOL">
				<signature>NSString+NSStringPathExtensions.-getFileSystemRepresentation:maxLength:(char*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAbsolutePath" uniqueID="-isAbsolutePath():BOOL">
				<signature>NSString+NSStringPathExtensions.-isAbsolutePath():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastPathComponent" uniqueID="-lastPathComponent():NSString*">
				<signature>NSString+NSStringPathExtensions.-lastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathComponents" uniqueID="-pathComponents():NSArray&lt;NSString *&gt;*">
				<signature>NSString+NSStringPathExtensions.-pathComponents():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathExtension" uniqueID="-pathExtension():NSString*">
				<signature>NSString+NSStringPathExtensions.-pathExtension():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAbbreviatingWithTildeInPath" uniqueID="-stringByAbbreviatingWithTildeInPath():NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByAbbreviatingWithTildeInPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingPathComponent:" uniqueID="-stringByAppendingPathComponent:(NSString*):NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByAppendingPathComponent:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingPathExtension:" uniqueID="-stringByAppendingPathExtension:(NSString*):NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByAppendingPathExtension:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByDeletingLastPathComponent" uniqueID="-stringByDeletingLastPathComponent():NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByDeletingLastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByDeletingPathExtension" uniqueID="-stringByDeletingPathExtension():NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByDeletingPathExtension():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByExpandingTildeInPath" uniqueID="-stringByExpandingTildeInPath():NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByExpandingTildeInPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByResolvingSymlinksInPath" uniqueID="-stringByResolvingSymlinksInPath():NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByResolvingSymlinksInPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByStandardizingPath" uniqueID="-stringByStandardizingPath():NSString*">
				<signature>NSString+NSStringPathExtensions.-stringByStandardizingPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringsByAppendingPaths:" uniqueID="-stringsByAppendingPaths:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*">
				<signature>NSString+NSStringPathExtensions.-stringsByAppendingPaths:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="NSString+NSStringDrawing" uniqueID="NSString+NSStringDrawing">
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:withAttributes:" uniqueID="-drawAtPoint:withAttributes:(CGPoint;NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSString+NSStringDrawing.-drawAtPoint:withAttributes:(CGPoint;NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withAttributes:" uniqueID="-drawInRect:withAttributes:(CGRect;NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSString+NSStringDrawing.-drawInRect:withAttributes:(CGRect;NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithAttributes:" uniqueID="-sizeWithAttributes:(NSDictionary&lt;NSString *,id&gt;*):CGSize">
				<signature>NSString+NSStringDrawing.-sizeWithAttributes:(NSDictionary&lt;NSString *,id&gt;*):CGSize</signature>
			</method>
		</class>
		<class name="NSString+NSExtendedStringDrawing" uniqueID="NSString+NSExtendedStringDrawing">
			<method accessibility="Public" methodKind="Member" name="-boundingRectWithSize:options:attributes:context:" uniqueID="-boundingRectWithSize:options:attributes:context:(CGSize;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):CGRect">
				<signature>NSString+NSExtendedStringDrawing.-boundingRectWithSize:options:attributes:context:(CGSize;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawWithRect:options:attributes:context:" uniqueID="-drawWithRect:options:attributes:context:(CGRect;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):void">
				<signature>NSString+NSExtendedStringDrawing.-drawWithRect:options:attributes:context:(CGRect;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):void</signature>
			</method>
		</class>
		<class name="NSString+NSBundleExtensionMethods" uniqueID="NSString+NSBundleExtensionMethods">
			<method accessibility="Public" methodKind="Member" name="-variantFittingPresentationWidth:" uniqueID="-variantFittingPresentationWidth:(NSInteger):NSString*">
				<signature>NSString+NSBundleExtensionMethods.-variantFittingPresentationWidth:(NSInteger):NSString*</signature>
			</method>
		</class>
		<class name="NSSortDescriptor" uniqueID="NSSortDescriptor">
			<method accessibility="Public" methodKind="Member" name="-allowEvaluation" uniqueID="-allowEvaluation():void">
				<signature>NSSortDescriptor.-allowEvaluation():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ascending" uniqueID="-ascending():BOOL">
				<signature>NSSortDescriptor.-ascending():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-comparator" uniqueID="-comparator():(^)(id _Nonnull;id _Nonnull):NSComparisonResult">
				<signature>NSSortDescriptor.-comparator():(^)(id _Nonnull;id _Nonnull):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compareObject:toObject:" uniqueID="-compareObject:toObject:(id _Nonnull;id _Nonnull):NSComparisonResult">
				<signature>NSSortDescriptor.-compareObject:toObject:(id _Nonnull;id _Nonnull):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSSortDescriptor.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithKey:ascending:" uniqueID="-initWithKey:ascending:(NSString*;BOOL):instancetype _Nonnull">
				<signature>NSSortDescriptor.-initWithKey:ascending:(NSString*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithKey:ascending:comparator:" uniqueID="-initWithKey:ascending:comparator:(NSString*;BOOL;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):instancetype _Nonnull">
				<signature>NSSortDescriptor.-initWithKey:ascending:comparator:(NSString*;BOOL;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithKey:ascending:selector:" uniqueID="-initWithKey:ascending:selector:(NSString*;BOOL;SEL _Nullable):instancetype _Nonnull">
				<signature>NSSortDescriptor.-initWithKey:ascending:selector:(NSString*;BOOL;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-key" uniqueID="-key():NSString*">
				<signature>NSSortDescriptor.-key():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reversedSortDescriptor" uniqueID="-reversedSortDescriptor():id _Nonnull">
				<signature>NSSortDescriptor.-reversedSortDescriptor():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selector" uniqueID="-selector():SEL _Nullable">
				<signature>NSSortDescriptor.-selector():SEL _Nullable</signature>
			</method>
		</class>
		<class name="NSURLCredentialStorage+NSURLSessionTaskAdditions" uniqueID="NSURLCredentialStorage+NSURLSessionTaskAdditions">
			<method accessibility="Public" methodKind="Member" name="-getCredentialsForProtectionSpace:task:completionHandler:" uniqueID="-getCredentialsForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSDictionary&lt;NSString *,NSURLCredential *&gt;*):void):void">
				<signature>NSURLCredentialStorage+NSURLSessionTaskAdditions.-getCredentialsForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSDictionary&lt;NSString *,NSURLCredential *&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getDefaultCredentialForProtectionSpace:task:completionHandler:" uniqueID="-getDefaultCredentialForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSURLCredential*):void):void">
				<signature>NSURLCredentialStorage+NSURLSessionTaskAdditions.-getDefaultCredentialForProtectionSpace:task:completionHandler:(NSURLProtectionSpace*;NSURLSessionTask*;(^)(NSURLCredential*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCredential:forProtectionSpace:options:task:" uniqueID="-removeCredential:forProtectionSpace:options:task:(NSURLCredential*;NSURLProtectionSpace*;NSDictionary&lt;NSString *,id&gt;*;NSURLSessionTask*):void">
				<signature>NSURLCredentialStorage+NSURLSessionTaskAdditions.-removeCredential:forProtectionSpace:options:task:(NSURLCredential*;NSURLProtectionSpace*;NSDictionary&lt;NSString *,id&gt;*;NSURLSessionTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCredential:forProtectionSpace:task:" uniqueID="-setCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void">
				<signature>NSURLCredentialStorage+NSURLSessionTaskAdditions.-setCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDefaultCredential:forProtectionSpace:task:" uniqueID="-setDefaultCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void">
				<signature>NSURLCredentialStorage+NSURLSessionTaskAdditions.-setDefaultCredential:forProtectionSpace:task:(NSURLCredential*;NSURLProtectionSpace*;NSURLSessionTask*):void</signature>
			</method>
		</class>
		<class name="NSSet+NSSetCreation" uniqueID="NSSet+NSSetCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithArray:" uniqueID="-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSSet+NSSetCreation.-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:" uniqueID="-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>NSSet+NSSetCreation.-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithSet:" uniqueID="-initWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSSet+NSSetCreation.-initWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithSet:copyItems:" uniqueID="-initWithSet:copyItems:(NSSet&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull">
				<signature>NSSet+NSSetCreation.-initWithSet:copyItems:(NSSet&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSSet+NSPredicateSupport" uniqueID="NSSet+NSPredicateSupport">
			<method accessibility="Public" methodKind="Member" name="-filteredSetUsingPredicate:" uniqueID="-filteredSetUsingPredicate:(NSPredicate*):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet+NSPredicateSupport.-filteredSetUsingPredicate:(NSPredicate*):NSSet&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSRunLoop" uniqueID="NSRunLoop">
			<method accessibility="Public" methodKind="Member" name="-acceptInputForMode:beforeDate:" uniqueID="-acceptInputForMode:beforeDate:(NSString*;NSDate*):void">
				<signature>NSRunLoop.-acceptInputForMode:beforeDate:(NSString*;NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addPort:forMode:" uniqueID="-addPort:forMode:(NSPort*;NSString*):void">
				<signature>NSRunLoop.-addPort:forMode:(NSPort*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addTimer:forMode:" uniqueID="-addTimer:forMode:(NSTimer*;NSString*):void">
				<signature>NSRunLoop.-addTimer:forMode:(NSTimer*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelPerformSelector:target:argument:" uniqueID="-cancelPerformSelector:target:argument:(SEL _Nonnull;id _Nonnull;id _Nullable):void">
				<signature>NSRunLoop.-cancelPerformSelector:target:argument:(SEL _Nonnull;id _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelPerformSelectorsWithTarget:" uniqueID="-cancelPerformSelectorsWithTarget:(id _Nonnull):void">
				<signature>NSRunLoop.-cancelPerformSelectorsWithTarget:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentMode" uniqueID="-currentMode():NSString*">
				<signature>NSRunLoop.-currentMode():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCFRunLoop" uniqueID="-getCFRunLoop():struct __CFRunLoop*">
				<signature>NSRunLoop.-getCFRunLoop():struct __CFRunLoop*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-limitDateForMode:" uniqueID="-limitDateForMode:(NSString*):NSDate*">
				<signature>NSRunLoop.-limitDateForMode:(NSString*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:target:argument:order:modes:" uniqueID="-performSelector:target:argument:order:modes:(SEL _Nonnull;id _Nonnull;id _Nullable;NSUInteger;NSArray&lt;NSString *&gt;*):void">
				<signature>NSRunLoop.-performSelector:target:argument:order:modes:(SEL _Nonnull;id _Nonnull;id _Nullable;NSUInteger;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removePort:forMode:" uniqueID="-removePort:forMode:(NSPort*;NSString*):void">
				<signature>NSRunLoop.-removePort:forMode:(NSPort*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-run" uniqueID="-run():void">
				<signature>NSRunLoop.-run():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-runMode:beforeDate:" uniqueID="-runMode:beforeDate:(NSString*;NSDate*):BOOL">
				<signature>NSRunLoop.-runMode:beforeDate:(NSString*;NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-runUntilDate:" uniqueID="-runUntilDate:(NSDate*):void">
				<signature>NSRunLoop.-runUntilDate:(NSDate*):void</signature>
			</method>
		</class>
		<class name="NSRunLoop+NSRunLoopConveniences" uniqueID="NSRunLoop+NSRunLoopConveniences">
			<method accessibility="Public" methodKind="Member" name="-run" uniqueID="-run():void">
				<signature>NSRunLoop+NSRunLoopConveniences.-run():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-runMode:beforeDate:" uniqueID="-runMode:beforeDate:(NSString*;NSDate*):BOOL">
				<signature>NSRunLoop+NSRunLoopConveniences.-runMode:beforeDate:(NSString*;NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-runUntilDate:" uniqueID="-runUntilDate:(NSDate*):void">
				<signature>NSRunLoop+NSRunLoopConveniences.-runUntilDate:(NSDate*):void</signature>
			</method>
		</class>
		<class name="UIControl" uniqueID="UIControl">
			<method accessibility="Public" methodKind="Member" name="-actionsForTarget:forControlEvent:" uniqueID="-actionsForTarget:forControlEvent:(id _Nullable;UIControlEvents):NSArray&lt;NSString *&gt;*">
				<signature>UIControl.-actionsForTarget:forControlEvent:(id _Nullable;UIControlEvents):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addTarget:action:forControlEvents:" uniqueID="-addTarget:action:forControlEvents:(id _Nullable;SEL _Nonnull;UIControlEvents):void">
				<signature>UIControl.-addTarget:action:forControlEvents:(id _Nullable;SEL _Nonnull;UIControlEvents):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allControlEvents" uniqueID="-allControlEvents():UIControlEvents">
				<signature>UIControl.-allControlEvents():UIControlEvents</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allTargets" uniqueID="-allTargets():NSSet*">
				<signature>UIControl.-allTargets():NSSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginTrackingWithTouch:withEvent:" uniqueID="-beginTrackingWithTouch:withEvent:(UITouch*;UIEvent*):BOOL">
				<signature>UIControl.-beginTrackingWithTouch:withEvent:(UITouch*;UIEvent*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelTrackingWithEvent:" uniqueID="-cancelTrackingWithEvent:(UIEvent*):void">
				<signature>UIControl.-cancelTrackingWithEvent:(UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentHorizontalAlignment" uniqueID="-contentHorizontalAlignment():UIControlContentHorizontalAlignment">
				<signature>UIControl.-contentHorizontalAlignment():UIControlContentHorizontalAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentVerticalAlignment" uniqueID="-contentVerticalAlignment():UIControlContentVerticalAlignment">
				<signature>UIControl.-contentVerticalAlignment():UIControlContentVerticalAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-continueTrackingWithTouch:withEvent:" uniqueID="-continueTrackingWithTouch:withEvent:(UITouch*;UIEvent*):BOOL">
				<signature>UIControl.-continueTrackingWithTouch:withEvent:(UITouch*;UIEvent*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endTrackingWithTouch:withEvent:" uniqueID="-endTrackingWithTouch:withEvent:(UITouch*;UIEvent*):void">
				<signature>UIControl.-endTrackingWithTouch:withEvent:(UITouch*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEnabled" uniqueID="-isEnabled():BOOL">
				<signature>UIControl.-isEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHighlighted" uniqueID="-isHighlighted():BOOL">
				<signature>UIControl.-isHighlighted():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSelected" uniqueID="-isSelected():BOOL">
				<signature>UIControl.-isSelected():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isTouchInside" uniqueID="-isTouchInside():BOOL">
				<signature>UIControl.-isTouchInside():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isTracking" uniqueID="-isTracking():BOOL">
				<signature>UIControl.-isTracking():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeTarget:action:forControlEvents:" uniqueID="-removeTarget:action:forControlEvents:(id _Nullable;SEL _Nullable;UIControlEvents):void">
				<signature>UIControl.-removeTarget:action:forControlEvents:(id _Nullable;SEL _Nullable;UIControlEvents):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendAction:to:forEvent:" uniqueID="-sendAction:to:forEvent:(SEL _Nonnull;id _Nullable;UIEvent*):void">
				<signature>UIControl.-sendAction:to:forEvent:(SEL _Nonnull;id _Nullable;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendActionsForControlEvents:" uniqueID="-sendActionsForControlEvents:(UIControlEvents):void">
				<signature>UIControl.-sendActionsForControlEvents:(UIControlEvents):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentHorizontalAlignment:" uniqueID="-setContentHorizontalAlignment:(UIControlContentHorizontalAlignment):void">
				<signature>UIControl.-setContentHorizontalAlignment:(UIControlContentHorizontalAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentVerticalAlignment:" uniqueID="-setContentVerticalAlignment:(UIControlContentVerticalAlignment):void">
				<signature>UIControl.-setContentVerticalAlignment:(UIControlContentVerticalAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEnabled:" uniqueID="-setEnabled:(BOOL):void">
				<signature>UIControl.-setEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlighted:" uniqueID="-setHighlighted:(BOOL):void">
				<signature>UIControl.-setHighlighted:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelected:" uniqueID="-setSelected:(BOOL):void">
				<signature>UIControl.-setSelected:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-state" uniqueID="-state():UIControlState">
				<signature>UIControl.-state():UIControlState</signature>
			</method>
		</class>
		<class name="NSRegularExpression" uniqueID="NSRegularExpression">
			<method accessibility="Public" methodKind="Member" name="-enumerateMatchesInString:options:range:usingBlock:" uniqueID="-enumerateMatchesInString:options:range:usingBlock:(NSString*;NSMatchingOptions;NSRange;(^)(NSTextCheckingResult*;NSMatchingFlags;BOOL*):void):void">
				<signature>NSRegularExpression.-enumerateMatchesInString:options:range:usingBlock:(NSString*;NSMatchingOptions;NSRange;(^)(NSTextCheckingResult*;NSMatchingFlags;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstMatchInString:options:range:" uniqueID="-firstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSTextCheckingResult*">
				<signature>NSRegularExpression.-firstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSTextCheckingResult*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithPattern:options:error:" uniqueID="-initWithPattern:options:error:(NSString*;NSRegularExpressionOptions;NSError**):instancetype _Nullable">
				<signature>NSRegularExpression.-initWithPattern:options:error:(NSString*;NSRegularExpressionOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-matchesInString:options:range:" uniqueID="-matchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSArray&lt;NSTextCheckingResult *&gt;*">
				<signature>NSRegularExpression.-matchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSArray&lt;NSTextCheckingResult *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfCaptureGroups" uniqueID="-numberOfCaptureGroups():NSUInteger">
				<signature>NSRegularExpression.-numberOfCaptureGroups():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfMatchesInString:options:range:" uniqueID="-numberOfMatchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSUInteger">
				<signature>NSRegularExpression.-numberOfMatchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-options" uniqueID="-options():NSRegularExpressionOptions">
				<signature>NSRegularExpression.-options():NSRegularExpressionOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pattern" uniqueID="-pattern():NSString*">
				<signature>NSRegularExpression.-pattern():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfFirstMatchInString:options:range:" uniqueID="-rangeOfFirstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSRange">
				<signature>NSRegularExpression.-rangeOfFirstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceMatchesInString:options:range:withTemplate:" uniqueID="-replaceMatchesInString:options:range:withTemplate:(NSMutableString*;NSMatchingOptions;NSRange;NSString*):NSUInteger">
				<signature>NSRegularExpression.-replaceMatchesInString:options:range:withTemplate:(NSMutableString*;NSMatchingOptions;NSRange;NSString*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replacementStringForResult:inString:offset:template:" uniqueID="-replacementStringForResult:inString:offset:template:(NSTextCheckingResult*;NSString*;NSInteger;NSString*):NSString*">
				<signature>NSRegularExpression.-replacementStringForResult:inString:offset:template:(NSTextCheckingResult*;NSString*;NSInteger;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingMatchesInString:options:range:withTemplate:" uniqueID="-stringByReplacingMatchesInString:options:range:withTemplate:(NSString*;NSMatchingOptions;NSRange;NSString*):NSString*">
				<signature>NSRegularExpression.-stringByReplacingMatchesInString:options:range:withTemplate:(NSString*;NSMatchingOptions;NSRange;NSString*):NSString*</signature>
			</method>
		</class>
		<class name="NSURLProtectionSpace+NSClientCertificateSpace" uniqueID="NSURLProtectionSpace+NSClientCertificateSpace">
			<method accessibility="Public" methodKind="Member" name="-distinguishedNames" uniqueID="-distinguishedNames():NSArray&lt;NSData *&gt;*">
				<signature>NSURLProtectionSpace+NSClientCertificateSpace.-distinguishedNames():NSArray&lt;NSData *&gt;*</signature>
			</method>
		</class>
		<class name="NSRegularExpression+NSReplacement" uniqueID="NSRegularExpression+NSReplacement">
			<method accessibility="Public" methodKind="Member" name="-replaceMatchesInString:options:range:withTemplate:" uniqueID="-replaceMatchesInString:options:range:withTemplate:(NSMutableString*;NSMatchingOptions;NSRange;NSString*):NSUInteger">
				<signature>NSRegularExpression+NSReplacement.-replaceMatchesInString:options:range:withTemplate:(NSMutableString*;NSMatchingOptions;NSRange;NSString*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replacementStringForResult:inString:offset:template:" uniqueID="-replacementStringForResult:inString:offset:template:(NSTextCheckingResult*;NSString*;NSInteger;NSString*):NSString*">
				<signature>NSRegularExpression+NSReplacement.-replacementStringForResult:inString:offset:template:(NSTextCheckingResult*;NSString*;NSInteger;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingMatchesInString:options:range:withTemplate:" uniqueID="-stringByReplacingMatchesInString:options:range:withTemplate:(NSString*;NSMatchingOptions;NSRange;NSString*):NSString*">
				<signature>NSRegularExpression+NSReplacement.-stringByReplacingMatchesInString:options:range:withTemplate:(NSString*;NSMatchingOptions;NSRange;NSString*):NSString*</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void" uniqueID="^(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void">
				<signature>^(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void.-block(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void</signature>
			</method>
		</class>
		<class name="NSPredicate" uniqueID="NSPredicate">
			<method accessibility="Public" methodKind="Member" name="-allowEvaluation" uniqueID="-allowEvaluation():void">
				<signature>NSPredicate.-allowEvaluation():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-evaluateWithObject:" uniqueID="-evaluateWithObject:(id _Nullable):BOOL">
				<signature>NSPredicate.-evaluateWithObject:(id _Nullable):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-evaluateWithObject:substitutionVariables:" uniqueID="-evaluateWithObject:substitutionVariables:(id _Nullable;NSDictionary&lt;NSString *,id&gt;*):BOOL">
				<signature>NSPredicate.-evaluateWithObject:substitutionVariables:(id _Nullable;NSDictionary&lt;NSString *,id&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predicateFormat" uniqueID="-predicateFormat():NSString*">
				<signature>NSPredicate.-predicateFormat():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predicateWithSubstitutionVariables:" uniqueID="-predicateWithSubstitutionVariables:(NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>NSPredicate.-predicateWithSubstitutionVariables:(NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSValue+NSValueRangeExtensions" uniqueID="NSValue+NSValueRangeExtensions">
			<method accessibility="Public" methodKind="Member" name="-rangeValue" uniqueID="-rangeValue():NSRange">
				<signature>NSValue+NSValueRangeExtensions.-rangeValue():NSRange</signature>
			</method>
		</class>
		<class name="NSValue+NSValueExtensionMethods" uniqueID="NSValue+NSValueExtensionMethods">
			<method accessibility="Public" methodKind="Member" name="-isEqualToValue:" uniqueID="-isEqualToValue:(NSValue*):BOOL">
				<signature>NSValue+NSValueExtensionMethods.-isEqualToValue:(NSValue*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nonretainedObjectValue" uniqueID="-nonretainedObjectValue():id _Nullable">
				<signature>NSValue+NSValueExtensionMethods.-nonretainedObjectValue():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pointerValue" uniqueID="-pointerValue():void*">
				<signature>NSValue+NSValueExtensionMethods.-pointerValue():void*</signature>
			</method>
		</class>
		<class name="UIColor" uniqueID="UIColor">
			<method accessibility="Public" methodKind="Member" name="-CGColor" uniqueID="-CGColor():struct CGColor*">
				<signature>UIColor.-CGColor():struct CGColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CIColor" uniqueID="-CIColor():CIColor*">
				<signature>UIColor.-CIColor():CIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-colorWithAlphaComponent:" uniqueID="-colorWithAlphaComponent:(CGFloat):UIColor*">
				<signature>UIColor.-colorWithAlphaComponent:(CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getHue:saturation:brightness:alpha:" uniqueID="-getHue:saturation:brightness:alpha:(CGFloat*;CGFloat*;CGFloat*;CGFloat*):BOOL">
				<signature>UIColor.-getHue:saturation:brightness:alpha:(CGFloat*;CGFloat*;CGFloat*;CGFloat*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getRed:green:blue:alpha:" uniqueID="-getRed:green:blue:alpha:(CGFloat*;CGFloat*;CGFloat*;CGFloat*):BOOL">
				<signature>UIColor.-getRed:green:blue:alpha:(CGFloat*;CGFloat*;CGFloat*;CGFloat*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getWhite:alpha:" uniqueID="-getWhite:alpha:(CGFloat*;CGFloat*):BOOL">
				<signature>UIColor.-getWhite:alpha:(CGFloat*;CGFloat*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGColor:" uniqueID="-initWithCGColor:(struct CGColor*):UIColor*">
				<signature>UIColor.-initWithCGColor:(struct CGColor*):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCIColor:" uniqueID="-initWithCIColor:(CIColor*):UIColor*">
				<signature>UIColor.-initWithCIColor:(CIColor*):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithHue:saturation:brightness:alpha:" uniqueID="-initWithHue:saturation:brightness:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*">
				<signature>UIColor.-initWithHue:saturation:brightness:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithPatternImage:" uniqueID="-initWithPatternImage:(UIImage*):UIColor*">
				<signature>UIColor.-initWithPatternImage:(UIImage*):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithRed:green:blue:alpha:" uniqueID="-initWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*">
				<signature>UIColor.-initWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithWhite:alpha:" uniqueID="-initWithWhite:alpha:(CGFloat;CGFloat):UIColor*">
				<signature>UIColor.-initWithWhite:alpha:(CGFloat;CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-set" uniqueID="-set():void">
				<signature>UIColor.-set():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFill" uniqueID="-setFill():void">
				<signature>UIColor.-setFill():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStroke" uniqueID="-setStroke():void">
				<signature>UIColor.-setStroke():void</signature>
			</method>
		</class>
		<class name="NSNotificationCenter" uniqueID="NSNotificationCenter">
			<method accessibility="Public" methodKind="Member" name="-addObserver:selector:name:object:" uniqueID="-addObserver:selector:name:object:(id _Nonnull;SEL _Nonnull;NSString*;id _Nullable):void">
				<signature>NSNotificationCenter.-addObserver:selector:name:object:(id _Nonnull;SEL _Nonnull;NSString*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addObserverForName:object:queue:usingBlock:" uniqueID="-addObserverForName:object:queue:usingBlock:(NSString*;id _Nullable;NSOperationQueue*;(^)(NSNotification*):void):objc_object&lt;NSObject&gt;*">
				<signature>NSNotificationCenter.-addObserverForName:object:queue:usingBlock:(NSString*;id _Nullable;NSOperationQueue*;(^)(NSNotification*):void):objc_object&lt;NSObject&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-postNotification:" uniqueID="-postNotification:(NSNotification*):void">
				<signature>NSNotificationCenter.-postNotification:(NSNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-postNotificationName:object:" uniqueID="-postNotificationName:object:(NSString*;id _Nullable):void">
				<signature>NSNotificationCenter.-postNotificationName:object:(NSString*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-postNotificationName:object:userInfo:" uniqueID="-postNotificationName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):void">
				<signature>NSNotificationCenter.-postNotificationName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:" uniqueID="-removeObserver:(id _Nonnull):void">
				<signature>NSNotificationCenter.-removeObserver:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:name:object:" uniqueID="-removeObserver:name:object:(id _Nonnull;NSString*;id _Nullable):void">
				<signature>NSNotificationCenter.-removeObserver:name:object:(id _Nonnull;NSString*;id _Nullable):void</signature>
			</method>
		</class>
		<class name="NSNotification" uniqueID="NSNotification">
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSNotification.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSNotification.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithName:object:userInfo:" uniqueID="-initWithName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):instancetype _Nonnull">
				<signature>NSNotification.-initWithName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>NSNotification.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-object" uniqueID="-object():id _Nullable">
				<signature>NSNotification.-object():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInfo" uniqueID="-userInfo():NSDictionary*">
				<signature>NSNotification.-userInfo():NSDictionary*</signature>
			</method>
		</class>
		<class name="NSNotification+NSNotificationCreation" uniqueID="NSNotification+NSNotificationCreation">
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSNotification+NSNotificationCreation.-init():instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSMutableURLRequest" uniqueID="NSMutableURLRequest">
			<method accessibility="Public" methodKind="Member" name="-HTTPBody" uniqueID="-HTTPBody():NSData*">
				<signature>NSMutableURLRequest.-HTTPBody():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPBodyStream" uniqueID="-HTTPBodyStream():NSInputStream*">
				<signature>NSMutableURLRequest.-HTTPBodyStream():NSInputStream*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPMethod" uniqueID="-HTTPMethod():NSString*">
				<signature>NSMutableURLRequest.-HTTPMethod():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldHandleCookies" uniqueID="-HTTPShouldHandleCookies():BOOL">
				<signature>NSMutableURLRequest.-HTTPShouldHandleCookies():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldUsePipelining" uniqueID="-HTTPShouldUsePipelining():BOOL">
				<signature>NSMutableURLRequest.-HTTPShouldUsePipelining():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URL" uniqueID="-URL():NSURL*">
				<signature>NSMutableURLRequest.-URL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addValue:forHTTPHeaderField:" uniqueID="-addValue:forHTTPHeaderField:(NSString*;NSString*):void">
				<signature>NSMutableURLRequest.-addValue:forHTTPHeaderField:(NSString*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allHTTPHeaderFields" uniqueID="-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>NSMutableURLRequest.-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsCellularAccess" uniqueID="-allowsCellularAccess():BOOL">
				<signature>NSMutableURLRequest.-allowsCellularAccess():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cachePolicy" uniqueID="-cachePolicy():NSURLRequestCachePolicy">
				<signature>NSMutableURLRequest.-cachePolicy():NSURLRequestCachePolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mainDocumentURL" uniqueID="-mainDocumentURL():NSURL*">
				<signature>NSMutableURLRequest.-mainDocumentURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-networkServiceType" uniqueID="-networkServiceType():NSURLRequestNetworkServiceType">
				<signature>NSMutableURLRequest.-networkServiceType():NSURLRequestNetworkServiceType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllHTTPHeaderFields:" uniqueID="-setAllHTTPHeaderFields:(NSDictionary&lt;NSString *,NSString *&gt;*):void">
				<signature>NSMutableURLRequest.-setAllHTTPHeaderFields:(NSDictionary&lt;NSString *,NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsCellularAccess:" uniqueID="-setAllowsCellularAccess:(BOOL):void">
				<signature>NSMutableURLRequest.-setAllowsCellularAccess:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCachePolicy:" uniqueID="-setCachePolicy:(NSURLRequestCachePolicy):void">
				<signature>NSMutableURLRequest.-setCachePolicy:(NSURLRequestCachePolicy):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPBody:" uniqueID="-setHTTPBody:(NSData*):void">
				<signature>NSMutableURLRequest.-setHTTPBody:(NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPBodyStream:" uniqueID="-setHTTPBodyStream:(NSInputStream*):void">
				<signature>NSMutableURLRequest.-setHTTPBodyStream:(NSInputStream*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPMethod:" uniqueID="-setHTTPMethod:(NSString*):void">
				<signature>NSMutableURLRequest.-setHTTPMethod:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPShouldHandleCookies:" uniqueID="-setHTTPShouldHandleCookies:(BOOL):void">
				<signature>NSMutableURLRequest.-setHTTPShouldHandleCookies:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPShouldUsePipelining:" uniqueID="-setHTTPShouldUsePipelining:(BOOL):void">
				<signature>NSMutableURLRequest.-setHTTPShouldUsePipelining:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMainDocumentURL:" uniqueID="-setMainDocumentURL:(NSURL*):void">
				<signature>NSMutableURLRequest.-setMainDocumentURL:(NSURL*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNetworkServiceType:" uniqueID="-setNetworkServiceType:(NSURLRequestNetworkServiceType):void">
				<signature>NSMutableURLRequest.-setNetworkServiceType:(NSURLRequestNetworkServiceType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeoutInterval:" uniqueID="-setTimeoutInterval:(NSTimeInterval):void">
				<signature>NSMutableURLRequest.-setTimeoutInterval:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setURL:" uniqueID="-setURL:(NSURL*):void">
				<signature>NSMutableURLRequest.-setURL:(NSURL*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forHTTPHeaderField:" uniqueID="-setValue:forHTTPHeaderField:(NSString*;NSString*):void">
				<signature>NSMutableURLRequest.-setValue:forHTTPHeaderField:(NSString*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeoutInterval" uniqueID="-timeoutInterval():NSTimeInterval">
				<signature>NSMutableURLRequest.-timeoutInterval():NSTimeInterval</signature>
			</method>
		</class>
		<class name="NSURLRequest" uniqueID="NSURLRequest">
			<method accessibility="Public" methodKind="Member" name="-HTTPBody" uniqueID="-HTTPBody():NSData*">
				<signature>NSURLRequest.-HTTPBody():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPBodyStream" uniqueID="-HTTPBodyStream():NSInputStream*">
				<signature>NSURLRequest.-HTTPBodyStream():NSInputStream*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPMethod" uniqueID="-HTTPMethod():NSString*">
				<signature>NSURLRequest.-HTTPMethod():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldHandleCookies" uniqueID="-HTTPShouldHandleCookies():BOOL">
				<signature>NSURLRequest.-HTTPShouldHandleCookies():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldUsePipelining" uniqueID="-HTTPShouldUsePipelining():BOOL">
				<signature>NSURLRequest.-HTTPShouldUsePipelining():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URL" uniqueID="-URL():NSURL*">
				<signature>NSURLRequest.-URL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allHTTPHeaderFields" uniqueID="-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>NSURLRequest.-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsCellularAccess" uniqueID="-allowsCellularAccess():BOOL">
				<signature>NSURLRequest.-allowsCellularAccess():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cachePolicy" uniqueID="-cachePolicy():NSURLRequestCachePolicy">
				<signature>NSURLRequest.-cachePolicy():NSURLRequestCachePolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:" uniqueID="-initWithURL:(NSURL*):instancetype _Nonnull">
				<signature>NSURLRequest.-initWithURL:(NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:cachePolicy:timeoutInterval:" uniqueID="-initWithURL:cachePolicy:timeoutInterval:(NSURL*;NSURLRequestCachePolicy;NSTimeInterval):instancetype _Nonnull">
				<signature>NSURLRequest.-initWithURL:cachePolicy:timeoutInterval:(NSURL*;NSURLRequestCachePolicy;NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mainDocumentURL" uniqueID="-mainDocumentURL():NSURL*">
				<signature>NSURLRequest.-mainDocumentURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-networkServiceType" uniqueID="-networkServiceType():NSURLRequestNetworkServiceType">
				<signature>NSURLRequest.-networkServiceType():NSURLRequestNetworkServiceType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeoutInterval" uniqueID="-timeoutInterval():NSTimeInterval">
				<signature>NSURLRequest.-timeoutInterval():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForHTTPHeaderField:" uniqueID="-valueForHTTPHeaderField:(NSString*):NSString*">
				<signature>NSURLRequest.-valueForHTTPHeaderField:(NSString*):NSString*</signature>
			</method>
		</class>
		<class name="NSSet+NSSortDescriptorSorting" uniqueID="NSSet+NSSortDescriptorSorting">
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingDescriptors:" uniqueID="-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*">
				<signature>NSSet+NSSortDescriptorSorting.-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableURLRequest+NSMutableHTTPURLRequest" uniqueID="NSMutableURLRequest+NSMutableHTTPURLRequest">
			<method accessibility="Public" methodKind="Member" name="-HTTPBody" uniqueID="-HTTPBody():NSData*">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-HTTPBody():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPBodyStream" uniqueID="-HTTPBodyStream():NSInputStream*">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-HTTPBodyStream():NSInputStream*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPMethod" uniqueID="-HTTPMethod():NSString*">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-HTTPMethod():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldHandleCookies" uniqueID="-HTTPShouldHandleCookies():BOOL">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-HTTPShouldHandleCookies():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldUsePipelining" uniqueID="-HTTPShouldUsePipelining():BOOL">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-HTTPShouldUsePipelining():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addValue:forHTTPHeaderField:" uniqueID="-addValue:forHTTPHeaderField:(NSString*;NSString*):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-addValue:forHTTPHeaderField:(NSString*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allHTTPHeaderFields" uniqueID="-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllHTTPHeaderFields:" uniqueID="-setAllHTTPHeaderFields:(NSDictionary&lt;NSString *,NSString *&gt;*):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setAllHTTPHeaderFields:(NSDictionary&lt;NSString *,NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPBody:" uniqueID="-setHTTPBody:(NSData*):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setHTTPBody:(NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPBodyStream:" uniqueID="-setHTTPBodyStream:(NSInputStream*):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setHTTPBodyStream:(NSInputStream*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPMethod:" uniqueID="-setHTTPMethod:(NSString*):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setHTTPMethod:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPShouldHandleCookies:" uniqueID="-setHTTPShouldHandleCookies:(BOOL):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setHTTPShouldHandleCookies:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHTTPShouldUsePipelining:" uniqueID="-setHTTPShouldUsePipelining:(BOOL):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setHTTPShouldUsePipelining:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forHTTPHeaderField:" uniqueID="-setValue:forHTTPHeaderField:(NSString*;NSString*):void">
				<signature>NSMutableURLRequest+NSMutableHTTPURLRequest.-setValue:forHTTPHeaderField:(NSString*;NSString*):void</signature>
			</method>
		</class>
		<class name="NSMutableDictionary+NSMutableDictionaryCreation" uniqueID="NSMutableDictionary+NSMutableDictionaryCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSMutableDictionary+NSMutableDictionaryCreation.-initWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSMutableDictionary+NSMutableDictionaryCreation.-initWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableDictionary+NSExtendedMutableDictionary" uniqueID="NSMutableDictionary+NSExtendedMutableDictionary">
			<method accessibility="Public" methodKind="Member" name="-addEntriesFromDictionary:" uniqueID="-addEntriesFromDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void">
				<signature>NSMutableDictionary+NSExtendedMutableDictionary.-addEntriesFromDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllObjects" uniqueID="-removeAllObjects():void">
				<signature>NSMutableDictionary+NSExtendedMutableDictionary.-removeAllObjects():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsForKeys:" uniqueID="-removeObjectsForKeys:(NSArray&lt;KeyType&gt;*):void">
				<signature>NSMutableDictionary+NSExtendedMutableDictionary.-removeObjectsForKeys:(NSArray&lt;KeyType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDictionary:" uniqueID="-setDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void">
				<signature>NSMutableDictionary+NSExtendedMutableDictionary.-setDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKeyedSubscript:" uniqueID="-setObject:forKeyedSubscript:(ObjectType _Nullable;objc_object&lt;NSCopying&gt;*):void">
				<signature>NSMutableDictionary+NSExtendedMutableDictionary.-setObject:forKeyedSubscript:(ObjectType _Nullable;objc_object&lt;NSCopying&gt;*):void</signature>
			</method>
		</class>
		<class name="^(NSFileHandle*):void" uniqueID="^(NSFileHandle*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSFileHandle*):void">
				<signature>^(NSFileHandle*):void.-block(NSFileHandle*):void</signature>
			</method>
		</class>
		<class name="NSMutableData+NSExtendedMutableData" uniqueID="NSMutableData+NSExtendedMutableData">
			<method accessibility="Public" methodKind="Member" name="-appendBytes:length:" uniqueID="-appendBytes:length:(const void*;NSUInteger):void">
				<signature>NSMutableData+NSExtendedMutableData.-appendBytes:length:(const void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-appendData:" uniqueID="-appendData:(NSData*):void">
				<signature>NSMutableData+NSExtendedMutableData.-appendData:(NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-increaseLengthBy:" uniqueID="-increaseLengthBy:(NSUInteger):void">
				<signature>NSMutableData+NSExtendedMutableData.-increaseLengthBy:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceBytesInRange:withBytes:" uniqueID="-replaceBytesInRange:withBytes:(NSRange;const void*):void">
				<signature>NSMutableData+NSExtendedMutableData.-replaceBytesInRange:withBytes:(NSRange;const void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceBytesInRange:withBytes:length:" uniqueID="-replaceBytesInRange:withBytes:length:(NSRange;const void*;NSUInteger):void">
				<signature>NSMutableData+NSExtendedMutableData.-replaceBytesInRange:withBytes:length:(NSRange;const void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resetBytesInRange:" uniqueID="-resetBytesInRange:(NSRange):void">
				<signature>NSMutableData+NSExtendedMutableData.-resetBytesInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setData:" uniqueID="-setData:(NSData*):void">
				<signature>NSMutableData+NSExtendedMutableData.-setData:(NSData*):void</signature>
			</method>
		</class>
		<class name="NSMutableAttributedString+NSExtendedMutableAttributedString" uniqueID="NSMutableAttributedString+NSExtendedMutableAttributedString">
			<method accessibility="Public" methodKind="Member" name="-addAttribute:value:range:" uniqueID="-addAttribute:value:range:(NSString*;id _Nonnull;NSRange):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-addAttribute:value:range:(NSString*;id _Nonnull;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addAttributes:range:" uniqueID="-addAttributes:range:(NSDictionary&lt;NSString *,id&gt;*;NSRange):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-addAttributes:range:(NSDictionary&lt;NSString *,id&gt;*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-appendAttributedString:" uniqueID="-appendAttributedString:(NSAttributedString*):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-appendAttributedString:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginEditing" uniqueID="-beginEditing():void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-beginEditing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteCharactersInRange:" uniqueID="-deleteCharactersInRange:(NSRange):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-deleteCharactersInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endEditing" uniqueID="-endEditing():void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-endEditing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertAttributedString:atIndex:" uniqueID="-insertAttributedString:atIndex:(NSAttributedString*;NSUInteger):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-insertAttributedString:atIndex:(NSAttributedString*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableString" uniqueID="-mutableString():NSMutableString*">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-mutableString():NSMutableString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAttribute:range:" uniqueID="-removeAttribute:range:(NSString*;NSRange):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-removeAttribute:range:(NSString*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceCharactersInRange:withAttributedString:" uniqueID="-replaceCharactersInRange:withAttributedString:(NSRange;NSAttributedString*):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-replaceCharactersInRange:withAttributedString:(NSRange;NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedString:" uniqueID="-setAttributedString:(NSAttributedString*):void">
				<signature>NSMutableAttributedString+NSExtendedMutableAttributedString.-setAttributedString:(NSAttributedString*):void</signature>
			</method>
		</class>
		<class name="NSMutableAttributedString+NSAttributedStringAttributeFixing" uniqueID="NSMutableAttributedString+NSAttributedStringAttributeFixing">
			<method accessibility="Public" methodKind="Member" name="-fixAttributesInRange:" uniqueID="-fixAttributesInRange:(NSRange):void">
				<signature>NSMutableAttributedString+NSAttributedStringAttributeFixing.-fixAttributesInRange:(NSRange):void</signature>
			</method>
		</class>
		<class name="NSMutableArray" uniqueID="NSMutableArray">
			<method accessibility="Public" methodKind="Member" name="-addObject:" uniqueID="-addObject:(ObjectType _Nonnull):void">
				<signature>NSMutableArray.-addObject:(ObjectType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addObjectsFromArray:" uniqueID="-addObjectsFromArray:(NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray.-addObjectsFromArray:(NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeObjectAtIndex:withObjectAtIndex:" uniqueID="-exchangeObjectAtIndex:withObjectAtIndex:(NSUInteger;NSUInteger):void">
				<signature>NSMutableArray.-exchangeObjectAtIndex:withObjectAtIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filterUsingPredicate:" uniqueID="-filterUsingPredicate:(NSPredicate*):void">
				<signature>NSMutableArray.-filterUsingPredicate:(NSPredicate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSMutableArray.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCapacity:" uniqueID="-initWithCapacity:(NSUInteger):instancetype _Nonnull">
				<signature>NSMutableArray.-initWithCapacity:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSMutableArray.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>NSMutableArray.-initWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>NSMutableArray.-initWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertObject:atIndex:" uniqueID="-insertObject:atIndex:(ObjectType _Nonnull;NSUInteger):void">
				<signature>NSMutableArray.-insertObject:atIndex:(ObjectType _Nonnull;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertObjects:atIndexes:" uniqueID="-insertObjects:atIndexes:(NSArray&lt;ObjectType&gt;*;NSIndexSet*):void">
				<signature>NSMutableArray.-insertObjects:atIndexes:(NSArray&lt;ObjectType&gt;*;NSIndexSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllObjects" uniqueID="-removeAllObjects():void">
				<signature>NSMutableArray.-removeAllObjects():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeLastObject" uniqueID="-removeLastObject():void">
				<signature>NSMutableArray.-removeLastObject():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObject:" uniqueID="-removeObject:(ObjectType _Nonnull):void">
				<signature>NSMutableArray.-removeObject:(ObjectType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObject:inRange:" uniqueID="-removeObject:inRange:(ObjectType _Nonnull;NSRange):void">
				<signature>NSMutableArray.-removeObject:inRange:(ObjectType _Nonnull;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectAtIndex:" uniqueID="-removeObjectAtIndex:(NSUInteger):void">
				<signature>NSMutableArray.-removeObjectAtIndex:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectIdenticalTo:" uniqueID="-removeObjectIdenticalTo:(ObjectType _Nonnull):void">
				<signature>NSMutableArray.-removeObjectIdenticalTo:(ObjectType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectIdenticalTo:inRange:" uniqueID="-removeObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):void">
				<signature>NSMutableArray.-removeObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsAtIndexes:" uniqueID="-removeObjectsAtIndexes:(NSIndexSet*):void">
				<signature>NSMutableArray.-removeObjectsAtIndexes:(NSIndexSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsFromIndices:numIndices:" uniqueID="-removeObjectsFromIndices:numIndices:(NSUInteger*;NSUInteger):void">
				<signature>NSMutableArray.-removeObjectsFromIndices:numIndices:(NSUInteger*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsInArray:" uniqueID="-removeObjectsInArray:(NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray.-removeObjectsInArray:(NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsInRange:" uniqueID="-removeObjectsInRange:(NSRange):void">
				<signature>NSMutableArray.-removeObjectsInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectAtIndex:withObject:" uniqueID="-replaceObjectAtIndex:withObject:(NSUInteger;ObjectType _Nonnull):void">
				<signature>NSMutableArray.-replaceObjectAtIndex:withObject:(NSUInteger;ObjectType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectsAtIndexes:withObjects:" uniqueID="-replaceObjectsAtIndexes:withObjects:(NSIndexSet*;NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray.-replaceObjectsAtIndexes:withObjects:(NSIndexSet*;NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectsInRange:withObjectsFromArray:" uniqueID="-replaceObjectsInRange:withObjectsFromArray:(NSRange;NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray.-replaceObjectsInRange:withObjectsFromArray:(NSRange;NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectsInRange:withObjectsFromArray:range:" uniqueID="-replaceObjectsInRange:withObjectsFromArray:range:(NSRange;NSArray&lt;ObjectType&gt;*;NSRange):void">
				<signature>NSMutableArray.-replaceObjectsInRange:withObjectsFromArray:range:(NSRange;NSArray&lt;ObjectType&gt;*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setArray:" uniqueID="-setArray:(NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray.-setArray:(NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:atIndexedSubscript:" uniqueID="-setObject:atIndexedSubscript:(ObjectType _Nonnull;NSUInteger):void">
				<signature>NSMutableArray.-setObject:atIndexedSubscript:(ObjectType _Nonnull;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingComparator:" uniqueID="-sortUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):void">
				<signature>NSMutableArray.-sortUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingDescriptors:" uniqueID="-sortUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):void">
				<signature>NSMutableArray.-sortUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingFunction:context:" uniqueID="-sortUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):void">
				<signature>NSMutableArray.-sortUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingSelector:" uniqueID="-sortUsingSelector:(SEL _Nonnull):void">
				<signature>NSMutableArray.-sortUsingSelector:(SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortWithOptions:usingComparator:" uniqueID="-sortWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):void">
				<signature>NSMutableArray.-sortWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):void</signature>
			</method>
		</class>
		<class name="NSMutableArray+NSSortDescriptorSorting" uniqueID="NSMutableArray+NSSortDescriptorSorting">
			<method accessibility="Public" methodKind="Member" name="-sortUsingDescriptors:" uniqueID="-sortUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):void">
				<signature>NSMutableArray+NSSortDescriptorSorting.-sortUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):void</signature>
			</method>
		</class>
		<class name="NSMutableArray+NSPredicateSupport" uniqueID="NSMutableArray+NSPredicateSupport">
			<method accessibility="Public" methodKind="Member" name="-filterUsingPredicate:" uniqueID="-filterUsingPredicate:(NSPredicate*):void">
				<signature>NSMutableArray+NSPredicateSupport.-filterUsingPredicate:(NSPredicate*):void</signature>
			</method>
		</class>
		<class name="NSMutableArray+NSMutableArrayCreation" uniqueID="NSMutableArray+NSMutableArrayCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>NSMutableArray+NSMutableArrayCreation.-initWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>NSMutableArray+NSMutableArrayCreation.-initWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableArray+NSExtendedMutableArray" uniqueID="NSMutableArray+NSExtendedMutableArray">
			<method accessibility="Public" methodKind="Member" name="-addObjectsFromArray:" uniqueID="-addObjectsFromArray:(NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-addObjectsFromArray:(NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeObjectAtIndex:withObjectAtIndex:" uniqueID="-exchangeObjectAtIndex:withObjectAtIndex:(NSUInteger;NSUInteger):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-exchangeObjectAtIndex:withObjectAtIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertObjects:atIndexes:" uniqueID="-insertObjects:atIndexes:(NSArray&lt;ObjectType&gt;*;NSIndexSet*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-insertObjects:atIndexes:(NSArray&lt;ObjectType&gt;*;NSIndexSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllObjects" uniqueID="-removeAllObjects():void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeAllObjects():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObject:" uniqueID="-removeObject:(ObjectType _Nonnull):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObject:(ObjectType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObject:inRange:" uniqueID="-removeObject:inRange:(ObjectType _Nonnull;NSRange):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObject:inRange:(ObjectType _Nonnull;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectIdenticalTo:" uniqueID="-removeObjectIdenticalTo:(ObjectType _Nonnull):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObjectIdenticalTo:(ObjectType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectIdenticalTo:inRange:" uniqueID="-removeObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsAtIndexes:" uniqueID="-removeObjectsAtIndexes:(NSIndexSet*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObjectsAtIndexes:(NSIndexSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsFromIndices:numIndices:" uniqueID="-removeObjectsFromIndices:numIndices:(NSUInteger*;NSUInteger):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObjectsFromIndices:numIndices:(NSUInteger*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsInArray:" uniqueID="-removeObjectsInArray:(NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObjectsInArray:(NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsInRange:" uniqueID="-removeObjectsInRange:(NSRange):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-removeObjectsInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectsAtIndexes:withObjects:" uniqueID="-replaceObjectsAtIndexes:withObjects:(NSIndexSet*;NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-replaceObjectsAtIndexes:withObjects:(NSIndexSet*;NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectsInRange:withObjectsFromArray:" uniqueID="-replaceObjectsInRange:withObjectsFromArray:(NSRange;NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-replaceObjectsInRange:withObjectsFromArray:(NSRange;NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceObjectsInRange:withObjectsFromArray:range:" uniqueID="-replaceObjectsInRange:withObjectsFromArray:range:(NSRange;NSArray&lt;ObjectType&gt;*;NSRange):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-replaceObjectsInRange:withObjectsFromArray:range:(NSRange;NSArray&lt;ObjectType&gt;*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setArray:" uniqueID="-setArray:(NSArray&lt;ObjectType&gt;*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-setArray:(NSArray&lt;ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:atIndexedSubscript:" uniqueID="-setObject:atIndexedSubscript:(ObjectType _Nonnull;NSUInteger):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-setObject:atIndexedSubscript:(ObjectType _Nonnull;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingComparator:" uniqueID="-sortUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-sortUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingFunction:context:" uniqueID="-sortUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-sortUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortUsingSelector:" uniqueID="-sortUsingSelector:(SEL _Nonnull):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-sortUsingSelector:(SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortWithOptions:usingComparator:" uniqueID="-sortWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):void">
				<signature>NSMutableArray+NSExtendedMutableArray.-sortWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):void</signature>
			</method>
		</class>
		<class name="UIGestureRecognizer" uniqueID="UIGestureRecognizer">
			<method accessibility="Public" methodKind="Member" name="-addTarget:action:" uniqueID="-addTarget:action:(id _Nonnull;SEL _Nonnull):void">
				<signature>UIGestureRecognizer.-addTarget:action:(id _Nonnull;SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowedPressTypes" uniqueID="-allowedPressTypes():NSArray&lt;NSNumber *&gt;*">
				<signature>UIGestureRecognizer.-allowedPressTypes():NSArray&lt;NSNumber *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowedTouchTypes" uniqueID="-allowedTouchTypes():NSArray&lt;NSNumber *&gt;*">
				<signature>UIGestureRecognizer.-allowedTouchTypes():NSArray&lt;NSNumber *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canBePreventedByGestureRecognizer:" uniqueID="-canBePreventedByGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer.-canBePreventedByGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canPreventGestureRecognizer:" uniqueID="-canPreventGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer.-canPreventGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelsTouchesInView" uniqueID="-cancelsTouchesInView():BOOL">
				<signature>UIGestureRecognizer.-cancelsTouchesInView():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delaysTouchesBegan" uniqueID="-delaysTouchesBegan():BOOL">
				<signature>UIGestureRecognizer.-delaysTouchesBegan():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delaysTouchesEnded" uniqueID="-delaysTouchesEnded():BOOL">
				<signature>UIGestureRecognizer.-delaysTouchesEnded():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UIGestureRecognizerDelegate&gt;*">
				<signature>UIGestureRecognizer.-delegate():objc_object&lt;UIGestureRecognizerDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ignorePress:forEvent:" uniqueID="-ignorePress:forEvent:(UIPress*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer.-ignorePress:forEvent:(UIPress*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ignoreTouch:forEvent:" uniqueID="-ignoreTouch:forEvent:(UITouch*;UIEvent*):void">
				<signature>UIGestureRecognizer.-ignoreTouch:forEvent:(UITouch*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTarget:action:" uniqueID="-initWithTarget:action:(id _Nullable;SEL _Nullable):instancetype _Nonnull">
				<signature>UIGestureRecognizer.-initWithTarget:action:(id _Nullable;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEnabled" uniqueID="-isEnabled():BOOL">
				<signature>UIGestureRecognizer.-isEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationInView:" uniqueID="-locationInView:(UIView*):CGPoint">
				<signature>UIGestureRecognizer.-locationInView:(UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationOfTouch:inView:" uniqueID="-locationOfTouch:inView:(NSUInteger;UIView*):CGPoint">
				<signature>UIGestureRecognizer.-locationOfTouch:inView:(NSUInteger;UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfTouches" uniqueID="-numberOfTouches():NSUInteger">
				<signature>UIGestureRecognizer.-numberOfTouches():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesBegan:withEvent:" uniqueID="-pressesBegan:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer.-pressesBegan:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesCancelled:withEvent:" uniqueID="-pressesCancelled:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer.-pressesCancelled:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesChanged:withEvent:" uniqueID="-pressesChanged:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer.-pressesChanged:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesEnded:withEvent:" uniqueID="-pressesEnded:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIGestureRecognizer.-pressesEnded:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeTarget:action:" uniqueID="-removeTarget:action:(id _Nullable;SEL _Nullable):void">
				<signature>UIGestureRecognizer.-removeTarget:action:(id _Nullable;SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requireGestureRecognizerToFail:" uniqueID="-requireGestureRecognizerToFail:(UIGestureRecognizer*):void">
				<signature>UIGestureRecognizer.-requireGestureRecognizerToFail:(UIGestureRecognizer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reset" uniqueID="-reset():void">
				<signature>UIGestureRecognizer.-reset():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowedPressTypes:" uniqueID="-setAllowedPressTypes:(NSArray&lt;NSNumber *&gt;*):void">
				<signature>UIGestureRecognizer.-setAllowedPressTypes:(NSArray&lt;NSNumber *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowedTouchTypes:" uniqueID="-setAllowedTouchTypes:(NSArray&lt;NSNumber *&gt;*):void">
				<signature>UIGestureRecognizer.-setAllowedTouchTypes:(NSArray&lt;NSNumber *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCancelsTouchesInView:" uniqueID="-setCancelsTouchesInView:(BOOL):void">
				<signature>UIGestureRecognizer.-setCancelsTouchesInView:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelaysTouchesBegan:" uniqueID="-setDelaysTouchesBegan:(BOOL):void">
				<signature>UIGestureRecognizer.-setDelaysTouchesBegan:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelaysTouchesEnded:" uniqueID="-setDelaysTouchesEnded:(BOOL):void">
				<signature>UIGestureRecognizer.-setDelaysTouchesEnded:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UIGestureRecognizerDelegate&gt;*):void">
				<signature>UIGestureRecognizer.-setDelegate:(objc_object&lt;UIGestureRecognizerDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEnabled:" uniqueID="-setEnabled:(BOOL):void">
				<signature>UIGestureRecognizer.-setEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setState:" uniqueID="-setState:(UIGestureRecognizerState):void">
				<signature>UIGestureRecognizer.-setState:(UIGestureRecognizerState):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldBeRequiredToFailByGestureRecognizer:" uniqueID="-shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer.-shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldRequireFailureOfGestureRecognizer:" uniqueID="-shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer*):BOOL">
				<signature>UIGestureRecognizer.-shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-state" uniqueID="-state():UIGestureRecognizerState">
				<signature>UIGestureRecognizer.-state():UIGestureRecognizerState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesBegan:withEvent:" uniqueID="-touchesBegan:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer.-touchesBegan:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesCancelled:withEvent:" uniqueID="-touchesCancelled:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer.-touchesCancelled:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesEnded:withEvent:" uniqueID="-touchesEnded:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer.-touchesEnded:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesEstimatedPropertiesUpdated:" uniqueID="-touchesEstimatedPropertiesUpdated:(NSSet*):void">
				<signature>UIGestureRecognizer.-touchesEstimatedPropertiesUpdated:(NSSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesMoved:withEvent:" uniqueID="-touchesMoved:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIGestureRecognizer.-touchesMoved:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-view" uniqueID="-view():UIView*">
				<signature>UIGestureRecognizer.-view():UIView*</signature>
			</method>
		</class>
		<class name="NSLocale+NSLocaleCreation" uniqueID="NSLocale+NSLocaleCreation">
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSLocale+NSLocaleCreation.-init():instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSLayoutManager" uniqueID="NSLayoutManager">
			<method accessibility="Public" methodKind="Member" name="-CGGlyphAtIndex:" uniqueID="-CGGlyphAtIndex:(NSUInteger):CGGlyph">
				<signature>NSLayoutManager.-CGGlyphAtIndex:(NSUInteger):CGGlyph</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGGlyphAtIndex:isValidIndex:" uniqueID="-CGGlyphAtIndex:isValidIndex:(NSUInteger;BOOL*):CGGlyph">
				<signature>NSLayoutManager.-CGGlyphAtIndex:isValidIndex:(NSUInteger;BOOL*):CGGlyph</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addTextContainer:" uniqueID="-addTextContainer:(NSTextContainer*):void">
				<signature>NSLayoutManager.-addTextContainer:(NSTextContainer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsNonContiguousLayout" uniqueID="-allowsNonContiguousLayout():BOOL">
				<signature>NSLayoutManager.-allowsNonContiguousLayout():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attachmentSizeForGlyphAtIndex:" uniqueID="-attachmentSizeForGlyphAtIndex:(NSUInteger):CGSize">
				<signature>NSLayoutManager.-attachmentSizeForGlyphAtIndex:(NSUInteger):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-boundingRectForGlyphRange:inTextContainer:" uniqueID="-boundingRectForGlyphRange:inTextContainer:(NSRange;NSTextContainer*):CGRect">
				<signature>NSLayoutManager.-boundingRectForGlyphRange:inTextContainer:(NSRange;NSTextContainer*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterIndexForGlyphAtIndex:" uniqueID="-characterIndexForGlyphAtIndex:(NSUInteger):NSUInteger">
				<signature>NSLayoutManager.-characterIndexForGlyphAtIndex:(NSUInteger):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:" uniqueID="-characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:(CGPoint;NSTextContainer*;CGFloat*):NSUInteger">
				<signature>NSLayoutManager.-characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:(CGPoint;NSTextContainer*;CGFloat*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterRangeForGlyphRange:actualGlyphRange:" uniqueID="-characterRangeForGlyphRange:actualGlyphRange:(NSRange;NSRange*):NSRange">
				<signature>NSLayoutManager.-characterRangeForGlyphRange:actualGlyphRange:(NSRange;NSRange*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;NSLayoutManagerDelegate&gt;*">
				<signature>NSLayoutManager.-delegate():objc_object&lt;NSLayoutManagerDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawBackgroundForGlyphRange:atPoint:" uniqueID="-drawBackgroundForGlyphRange:atPoint:(NSRange;CGPoint):void">
				<signature>NSLayoutManager.-drawBackgroundForGlyphRange:atPoint:(NSRange;CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawGlyphsForGlyphRange:atPoint:" uniqueID="-drawGlyphsForGlyphRange:atPoint:(NSRange;CGPoint):void">
				<signature>NSLayoutManager.-drawGlyphsForGlyphRange:atPoint:(NSRange;CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" uniqueID="-drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGFloat;CGRect;NSRange;CGPoint):void">
				<signature>NSLayoutManager.-drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGFloat;CGRect;NSRange;CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" uniqueID="-drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGFloat;CGRect;NSRange;CGPoint):void">
				<signature>NSLayoutManager.-drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGFloat;CGRect;NSRange;CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawsOutsideLineFragmentForGlyphAtIndex:" uniqueID="-drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger):BOOL">
				<signature>NSLayoutManager.-drawsOutsideLineFragmentForGlyphAtIndex:(NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureGlyphsForCharacterRange:" uniqueID="-ensureGlyphsForCharacterRange:(NSRange):void">
				<signature>NSLayoutManager.-ensureGlyphsForCharacterRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureGlyphsForGlyphRange:" uniqueID="-ensureGlyphsForGlyphRange:(NSRange):void">
				<signature>NSLayoutManager.-ensureGlyphsForGlyphRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureLayoutForBoundingRect:inTextContainer:" uniqueID="-ensureLayoutForBoundingRect:inTextContainer:(CGRect;NSTextContainer*):void">
				<signature>NSLayoutManager.-ensureLayoutForBoundingRect:inTextContainer:(CGRect;NSTextContainer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureLayoutForCharacterRange:" uniqueID="-ensureLayoutForCharacterRange:(NSRange):void">
				<signature>NSLayoutManager.-ensureLayoutForCharacterRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureLayoutForGlyphRange:" uniqueID="-ensureLayoutForGlyphRange:(NSRange):void">
				<signature>NSLayoutManager.-ensureLayoutForGlyphRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureLayoutForTextContainer:" uniqueID="-ensureLayoutForTextContainer:(NSTextContainer*):void">
				<signature>NSLayoutManager.-ensureLayoutForTextContainer:(NSTextContainer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:" uniqueID="-enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:(NSRange;NSRange;NSTextContainer*;(^)(CGRect;BOOL*):void):void">
				<signature>NSLayoutManager.-enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:(NSRange;NSRange;NSTextContainer*;(^)(CGRect;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateLineFragmentsForGlyphRange:usingBlock:" uniqueID="-enumerateLineFragmentsForGlyphRange:usingBlock:(NSRange;(^)(CGRect;CGRect;NSTextContainer*;NSRange;BOOL*):void):void">
				<signature>NSLayoutManager.-enumerateLineFragmentsForGlyphRange:usingBlock:(NSRange;(^)(CGRect;CGRect;NSTextContainer*;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extraLineFragmentRect" uniqueID="-extraLineFragmentRect():CGRect">
				<signature>NSLayoutManager.-extraLineFragmentRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extraLineFragmentTextContainer" uniqueID="-extraLineFragmentTextContainer():NSTextContainer*">
				<signature>NSLayoutManager.-extraLineFragmentTextContainer():NSTextContainer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extraLineFragmentUsedRect" uniqueID="-extraLineFragmentUsedRect():CGRect">
				<signature>NSLayoutManager.-extraLineFragmentUsedRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fillBackgroundRectArray:count:forCharacterRange:color:" uniqueID="-fillBackgroundRectArray:count:forCharacterRange:color:(const CGRect*;NSUInteger;NSRange;UIColor*):void">
				<signature>NSLayoutManager.-fillBackgroundRectArray:count:forCharacterRange:color:(const CGRect*;NSUInteger;NSRange;UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstUnlaidCharacterIndex" uniqueID="-firstUnlaidCharacterIndex():NSUInteger">
				<signature>NSLayoutManager.-firstUnlaidCharacterIndex():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstUnlaidGlyphIndex" uniqueID="-firstUnlaidGlyphIndex():NSUInteger">
				<signature>NSLayoutManager.-firstUnlaidGlyphIndex():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fractionOfDistanceThroughGlyphForPoint:inTextContainer:" uniqueID="-fractionOfDistanceThroughGlyphForPoint:inTextContainer:(CGPoint;NSTextContainer*):CGFloat">
				<signature>NSLayoutManager.-fractionOfDistanceThroughGlyphForPoint:inTextContainer:(CGPoint;NSTextContainer*):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getFirstUnlaidCharacterIndex:glyphIndex:" uniqueID="-getFirstUnlaidCharacterIndex:glyphIndex:(NSUInteger*;NSUInteger*):void">
				<signature>NSLayoutManager.-getFirstUnlaidCharacterIndex:glyphIndex:(NSUInteger*;NSUInteger*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:" uniqueID="-getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:(NSRange;CGGlyph*;NSGlyphProperty*;NSUInteger*;unsigned char*):NSUInteger">
				<signature>NSLayoutManager.-getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:(NSRange;CGGlyph*;NSGlyphProperty*;NSUInteger*;unsigned char*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:" uniqueID="-getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:(NSUInteger;BOOL;BOOL;CGFloat*;NSUInteger*):NSUInteger">
				<signature>NSLayoutManager.-getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:(NSUInteger;BOOL;BOOL;CGFloat*;NSUInteger*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphAtIndex:" uniqueID="-glyphAtIndex:(NSUInteger):CGGlyph">
				<signature>NSLayoutManager.-glyphAtIndex:(NSUInteger):CGGlyph</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphAtIndex:isValidIndex:" uniqueID="-glyphAtIndex:isValidIndex:(NSUInteger;BOOL*):CGGlyph">
				<signature>NSLayoutManager.-glyphAtIndex:isValidIndex:(NSUInteger;BOOL*):CGGlyph</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphIndexForCharacterAtIndex:" uniqueID="-glyphIndexForCharacterAtIndex:(NSUInteger):NSUInteger">
				<signature>NSLayoutManager.-glyphIndexForCharacterAtIndex:(NSUInteger):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphIndexForPoint:inTextContainer:" uniqueID="-glyphIndexForPoint:inTextContainer:(CGPoint;NSTextContainer*):NSUInteger">
				<signature>NSLayoutManager.-glyphIndexForPoint:inTextContainer:(CGPoint;NSTextContainer*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:" uniqueID="-glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:(CGPoint;NSTextContainer*;CGFloat*):NSUInteger">
				<signature>NSLayoutManager.-glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:(CGPoint;NSTextContainer*;CGFloat*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphRangeForBoundingRect:inTextContainer:" uniqueID="-glyphRangeForBoundingRect:inTextContainer:(CGRect;NSTextContainer*):NSRange">
				<signature>NSLayoutManager.-glyphRangeForBoundingRect:inTextContainer:(CGRect;NSTextContainer*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:" uniqueID="-glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:(CGRect;NSTextContainer*):NSRange">
				<signature>NSLayoutManager.-glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:(CGRect;NSTextContainer*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphRangeForCharacterRange:actualCharacterRange:" uniqueID="-glyphRangeForCharacterRange:actualCharacterRange:(NSRange;NSRange*):NSRange">
				<signature>NSLayoutManager.-glyphRangeForCharacterRange:actualCharacterRange:(NSRange;NSRange*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphRangeForTextContainer:" uniqueID="-glyphRangeForTextContainer:(NSTextContainer*):NSRange">
				<signature>NSLayoutManager.-glyphRangeForTextContainer:(NSTextContainer*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasNonContiguousLayout" uniqueID="-hasNonContiguousLayout():BOOL">
				<signature>NSLayoutManager.-hasNonContiguousLayout():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hyphenationFactor" uniqueID="-hyphenationFactor():CGFloat">
				<signature>NSLayoutManager.-hyphenationFactor():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSLayoutManager.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSLayoutManager.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertTextContainer:atIndex:" uniqueID="-insertTextContainer:atIndex:(NSTextContainer*;NSUInteger):void">
				<signature>NSLayoutManager.-insertTextContainer:atIndex:(NSTextContainer*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateDisplayForCharacterRange:" uniqueID="-invalidateDisplayForCharacterRange:(NSRange):void">
				<signature>NSLayoutManager.-invalidateDisplayForCharacterRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateDisplayForGlyphRange:" uniqueID="-invalidateDisplayForGlyphRange:(NSRange):void">
				<signature>NSLayoutManager.-invalidateDisplayForGlyphRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:" uniqueID="-invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:(NSRange;NSInteger;NSRange*):void">
				<signature>NSLayoutManager.-invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:(NSRange;NSInteger;NSRange*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateLayoutForCharacterRange:actualCharacterRange:" uniqueID="-invalidateLayoutForCharacterRange:actualCharacterRange:(NSRange;NSRange*):void">
				<signature>NSLayoutManager.-invalidateLayoutForCharacterRange:actualCharacterRange:(NSRange;NSRange*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isValidGlyphIndex:" uniqueID="-isValidGlyphIndex:(NSUInteger):BOOL">
				<signature>NSLayoutManager.-isValidGlyphIndex:(NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineFragmentRectForGlyphAtIndex:effectiveRange:" uniqueID="-lineFragmentRectForGlyphAtIndex:effectiveRange:(NSUInteger;NSRange*):CGRect">
				<signature>NSLayoutManager.-lineFragmentRectForGlyphAtIndex:effectiveRange:(NSUInteger;NSRange*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" uniqueID="-lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:(NSUInteger;NSRange*;BOOL):CGRect">
				<signature>NSLayoutManager.-lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:(NSUInteger;NSRange*;BOOL):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:" uniqueID="-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:(NSUInteger;NSRange*):CGRect">
				<signature>NSLayoutManager.-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:(NSUInteger;NSRange*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" uniqueID="-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:(NSUInteger;NSRange*;BOOL):CGRect">
				<signature>NSLayoutManager.-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:(NSUInteger;NSRange*;BOOL):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationForGlyphAtIndex:" uniqueID="-locationForGlyphAtIndex:(NSUInteger):CGPoint">
				<signature>NSLayoutManager.-locationForGlyphAtIndex:(NSUInteger):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-notShownAttributeForGlyphAtIndex:" uniqueID="-notShownAttributeForGlyphAtIndex:(NSUInteger):BOOL">
				<signature>NSLayoutManager.-notShownAttributeForGlyphAtIndex:(NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfGlyphs" uniqueID="-numberOfGlyphs():NSUInteger">
				<signature>NSLayoutManager.-numberOfGlyphs():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:" uniqueID="-processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:(NSTextStorage*;NSTextStorageEditActions;NSRange;NSInteger;NSRange):void">
				<signature>NSLayoutManager.-processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:(NSTextStorage*;NSTextStorageEditActions;NSRange;NSInteger;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-propertyForGlyphAtIndex:" uniqueID="-propertyForGlyphAtIndex:(NSUInteger):NSGlyphProperty">
				<signature>NSLayoutManager.-propertyForGlyphAtIndex:(NSUInteger):NSGlyphProperty</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfNominallySpacedGlyphsContainingIndex:" uniqueID="-rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger):NSRange">
				<signature>NSLayoutManager.-rangeOfNominallySpacedGlyphsContainingIndex:(NSUInteger):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeTextContainerAtIndex:" uniqueID="-removeTextContainerAtIndex:(NSUInteger):void">
				<signature>NSLayoutManager.-removeTextContainerAtIndex:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsNonContiguousLayout:" uniqueID="-setAllowsNonContiguousLayout:(BOOL):void">
				<signature>NSLayoutManager.-setAllowsNonContiguousLayout:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttachmentSize:forGlyphRange:" uniqueID="-setAttachmentSize:forGlyphRange:(CGSize;NSRange):void">
				<signature>NSLayoutManager.-setAttachmentSize:forGlyphRange:(CGSize;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;NSLayoutManagerDelegate&gt;*):void">
				<signature>NSLayoutManager.-setDelegate:(objc_object&lt;NSLayoutManagerDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDrawsOutsideLineFragment:forGlyphAtIndex:" uniqueID="-setDrawsOutsideLineFragment:forGlyphAtIndex:(BOOL;NSUInteger):void">
				<signature>NSLayoutManager.-setDrawsOutsideLineFragment:forGlyphAtIndex:(BOOL;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setExtraLineFragmentRect:usedRect:textContainer:" uniqueID="-setExtraLineFragmentRect:usedRect:textContainer:(CGRect;CGRect;NSTextContainer*):void">
				<signature>NSLayoutManager.-setExtraLineFragmentRect:usedRect:textContainer:(CGRect;CGRect;NSTextContainer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGlyphs:properties:characterIndexes:font:forGlyphRange:" uniqueID="-setGlyphs:properties:characterIndexes:font:forGlyphRange:(const CGGlyph*;const NSGlyphProperty*;const NSUInteger*;UIFont*;NSRange):void">
				<signature>NSLayoutManager.-setGlyphs:properties:characterIndexes:font:forGlyphRange:(const CGGlyph*;const NSGlyphProperty*;const NSUInteger*;UIFont*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHyphenationFactor:" uniqueID="-setHyphenationFactor:(CGFloat):void">
				<signature>NSLayoutManager.-setHyphenationFactor:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLineFragmentRect:forGlyphRange:usedRect:" uniqueID="-setLineFragmentRect:forGlyphRange:usedRect:(CGRect;NSRange;CGRect):void">
				<signature>NSLayoutManager.-setLineFragmentRect:forGlyphRange:usedRect:(CGRect;NSRange;CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLocation:forStartOfGlyphRange:" uniqueID="-setLocation:forStartOfGlyphRange:(CGPoint;NSRange):void">
				<signature>NSLayoutManager.-setLocation:forStartOfGlyphRange:(CGPoint;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNotShownAttribute:forGlyphAtIndex:" uniqueID="-setNotShownAttribute:forGlyphAtIndex:(BOOL;NSUInteger):void">
				<signature>NSLayoutManager.-setNotShownAttribute:forGlyphAtIndex:(BOOL;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsControlCharacters:" uniqueID="-setShowsControlCharacters:(BOOL):void">
				<signature>NSLayoutManager.-setShowsControlCharacters:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsInvisibleCharacters:" uniqueID="-setShowsInvisibleCharacters:(BOOL):void">
				<signature>NSLayoutManager.-setShowsInvisibleCharacters:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextContainer:forGlyphRange:" uniqueID="-setTextContainer:forGlyphRange:(NSTextContainer*;NSRange):void">
				<signature>NSLayoutManager.-setTextContainer:forGlyphRange:(NSTextContainer*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextStorage:" uniqueID="-setTextStorage:(NSTextStorage*):void">
				<signature>NSLayoutManager.-setTextStorage:(NSTextStorage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUsesFontLeading:" uniqueID="-setUsesFontLeading:(BOOL):void">
				<signature>NSLayoutManager.-setUsesFontLeading:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showCGGlyphs:positions:count:font:matrix:attributes:inContext:" uniqueID="-showCGGlyphs:positions:count:font:matrix:attributes:inContext:(const CGGlyph*;const CGPoint*;NSUInteger;UIFont*;CGAffineTransform;NSDictionary&lt;NSString *,id&gt;*;struct CGContext*):void">
				<signature>NSLayoutManager.-showCGGlyphs:positions:count:font:matrix:attributes:inContext:(const CGGlyph*;const CGPoint*;NSUInteger;UIFont*;CGAffineTransform;NSDictionary&lt;NSString *,id&gt;*;struct CGContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsControlCharacters" uniqueID="-showsControlCharacters():BOOL">
				<signature>NSLayoutManager.-showsControlCharacters():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsInvisibleCharacters" uniqueID="-showsInvisibleCharacters():BOOL">
				<signature>NSLayoutManager.-showsInvisibleCharacters():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" uniqueID="-strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGRect;NSRange;CGPoint):void">
				<signature>NSLayoutManager.-strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGRect;NSRange;CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textContainerChangedGeometry:" uniqueID="-textContainerChangedGeometry:(NSTextContainer*):void">
				<signature>NSLayoutManager.-textContainerChangedGeometry:(NSTextContainer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textContainerForGlyphAtIndex:effectiveRange:" uniqueID="-textContainerForGlyphAtIndex:effectiveRange:(NSUInteger;NSRange*):NSTextContainer*">
				<signature>NSLayoutManager.-textContainerForGlyphAtIndex:effectiveRange:(NSUInteger;NSRange*):NSTextContainer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:" uniqueID="-textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:(NSUInteger;NSRange*;BOOL):NSTextContainer*">
				<signature>NSLayoutManager.-textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:(NSUInteger;NSRange*;BOOL):NSTextContainer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textContainers" uniqueID="-textContainers():NSArray&lt;NSTextContainer *&gt;*">
				<signature>NSLayoutManager.-textContainers():NSArray&lt;NSTextContainer *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textStorage" uniqueID="-textStorage():NSTextStorage*">
				<signature>NSLayoutManager.-textStorage():NSTextStorage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-truncatedGlyphRangeInLineFragmentForGlyphAtIndex:" uniqueID="-truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(NSUInteger):NSRange">
				<signature>NSLayoutManager.-truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(NSUInteger):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:" uniqueID="-underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGRect;NSRange;CGPoint):void">
				<signature>NSLayoutManager.-underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:(NSRange;NSUnderlineStyle;CGRect;NSRange;CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-usedRectForTextContainer:" uniqueID="-usedRectForTextContainer:(NSTextContainer*):CGRect">
				<signature>NSLayoutManager.-usedRectForTextContainer:(NSTextContainer*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-usesFontLeading" uniqueID="-usesFontLeading():BOOL">
				<signature>NSLayoutManager.-usesFontLeading():BOOL</signature>
			</method>
		</class>
		<class name="^(NSURL*;NSError*):char" uniqueID="^(NSURL*;NSError*):char">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSURL*;NSError*):char">
				<signature>^(NSURL*;NSError*):char.-block(NSURL*;NSError*):char</signature>
			</method>
		</class>
		<class name="^(NSDate*;char;char*):void" uniqueID="^(NSDate*;char;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSDate*;char;char*):void">
				<signature>^(NSDate*;char;char*):void.-block(NSDate*;char;char*):void</signature>
			</method>
		</class>
		<class name="NSLayoutManager+NSLayoutManagerDeprecated" uniqueID="NSLayoutManager+NSLayoutManagerDeprecated">
			<method accessibility="Public" methodKind="Member" name="-glyphAtIndex:" uniqueID="-glyphAtIndex:(NSUInteger):CGGlyph">
				<signature>NSLayoutManager+NSLayoutManagerDeprecated.-glyphAtIndex:(NSUInteger):CGGlyph</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-glyphAtIndex:isValidIndex:" uniqueID="-glyphAtIndex:isValidIndex:(NSUInteger;BOOL*):CGGlyph">
				<signature>NSLayoutManager+NSLayoutManagerDeprecated.-glyphAtIndex:isValidIndex:(NSUInteger;BOOL*):CGGlyph</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void" uniqueID="^(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void">
				<signature>^(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void.-block(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void</signature>
			</method>
		</class>
		<class name="^(NSError*;NSString*):id" uniqueID="^(NSError*;NSString*):id">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSError*;NSString*):id">
				<signature>^(NSError*;NSString*):id.-block(NSError*;NSString*):id</signature>
			</method>
		</class>
		<class name="NSLayoutDimension" uniqueID="NSLayoutDimension">
			<method accessibility="Public" methodKind="Member" name="-constraintEqualToAnchor:multiplier:" uniqueID="-constraintEqualToAnchor:multiplier:(NSLayoutDimension*;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintEqualToAnchor:multiplier:(NSLayoutDimension*;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintEqualToAnchor:multiplier:constant:" uniqueID="-constraintEqualToAnchor:multiplier:constant:(NSLayoutDimension*;CGFloat;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintEqualToAnchor:multiplier:constant:(NSLayoutDimension*;CGFloat;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintEqualToConstant:" uniqueID="-constraintEqualToConstant:(CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintEqualToConstant:(CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintGreaterThanOrEqualToAnchor:multiplier:" uniqueID="-constraintGreaterThanOrEqualToAnchor:multiplier:(NSLayoutDimension*;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintGreaterThanOrEqualToAnchor:multiplier:(NSLayoutDimension*;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintGreaterThanOrEqualToAnchor:multiplier:constant:" uniqueID="-constraintGreaterThanOrEqualToAnchor:multiplier:constant:(NSLayoutDimension*;CGFloat;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintGreaterThanOrEqualToAnchor:multiplier:constant:(NSLayoutDimension*;CGFloat;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintGreaterThanOrEqualToConstant:" uniqueID="-constraintGreaterThanOrEqualToConstant:(CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintGreaterThanOrEqualToConstant:(CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintLessThanOrEqualToAnchor:multiplier:" uniqueID="-constraintLessThanOrEqualToAnchor:multiplier:(NSLayoutDimension*;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintLessThanOrEqualToAnchor:multiplier:(NSLayoutDimension*;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintLessThanOrEqualToAnchor:multiplier:constant:" uniqueID="-constraintLessThanOrEqualToAnchor:multiplier:constant:(NSLayoutDimension*;CGFloat;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintLessThanOrEqualToAnchor:multiplier:constant:(NSLayoutDimension*;CGFloat;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintLessThanOrEqualToConstant:" uniqueID="-constraintLessThanOrEqualToConstant:(CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutDimension.-constraintLessThanOrEqualToConstant:(CGFloat):NSLayoutConstraint*</signature>
			</method>
		</class>
		<class name="UIView+UILayoutGuideSupport" uniqueID="UIView+UILayoutGuideSupport">
			<method accessibility="Public" methodKind="Member" name="-addLayoutGuide:" uniqueID="-addLayoutGuide:(UILayoutGuide*):void">
				<signature>UIView+UILayoutGuideSupport.-addLayoutGuide:(UILayoutGuide*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutGuides" uniqueID="-layoutGuides():NSArray&lt;__kindof UILayoutGuide *&gt;*">
				<signature>UIView+UILayoutGuideSupport.-layoutGuides():NSArray&lt;__kindof UILayoutGuide *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeLayoutGuide:" uniqueID="-removeLayoutGuide:(UILayoutGuide*):void">
				<signature>UIView+UILayoutGuideSupport.-removeLayoutGuide:(UILayoutGuide*):void</signature>
			</method>
		</class>
		<class name="NSIndexPath+UITableView" uniqueID="NSIndexPath+UITableView">
			<method accessibility="Public" methodKind="Member" name="-row" uniqueID="-row():NSInteger">
				<signature>NSIndexPath+UITableView.-row():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-section" uniqueID="-section():NSInteger">
				<signature>NSIndexPath+UITableView.-section():NSInteger</signature>
			</method>
		</class>
		<class name="NSIndexPath+NSDeprecated" uniqueID="NSIndexPath+NSDeprecated">
			<method accessibility="Public" methodKind="Member" name="-getIndexes:" uniqueID="-getIndexes:(NSUInteger*):void">
				<signature>NSIndexPath+NSDeprecated.-getIndexes:(NSUInteger*):void</signature>
			</method>
		</class>
		<class name="NSMutableAttributedString+NSMutableAttributedStringDocumentFormats" uniqueID="NSMutableAttributedString+NSMutableAttributedStringDocumentFormats">
			<method accessibility="Public" methodKind="Member" name="-readFromData:options:documentAttributes:error:" uniqueID="-readFromData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL">
				<signature>NSMutableAttributedString+NSMutableAttributedStringDocumentFormats.-readFromData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readFromURL:options:documentAttributes:error:" uniqueID="-readFromURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL">
				<signature>NSMutableAttributedString+NSMutableAttributedStringDocumentFormats.-readFromURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="NSHTTPCookieStorage" uniqueID="NSHTTPCookieStorage">
			<method accessibility="Public" methodKind="Member" name="-cookieAcceptPolicy" uniqueID="-cookieAcceptPolicy():NSHTTPCookieAcceptPolicy">
				<signature>NSHTTPCookieStorage.-cookieAcceptPolicy():NSHTTPCookieAcceptPolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cookies" uniqueID="-cookies():NSArray&lt;NSHTTPCookie *&gt;*">
				<signature>NSHTTPCookieStorage.-cookies():NSArray&lt;NSHTTPCookie *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cookiesForURL:" uniqueID="-cookiesForURL:(NSURL*):NSArray&lt;NSHTTPCookie *&gt;*">
				<signature>NSHTTPCookieStorage.-cookiesForURL:(NSURL*):NSArray&lt;NSHTTPCookie *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteCookie:" uniqueID="-deleteCookie:(NSHTTPCookie*):void">
				<signature>NSHTTPCookieStorage.-deleteCookie:(NSHTTPCookie*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCookiesForTask:completionHandler:" uniqueID="-getCookiesForTask:completionHandler:(NSURLSessionTask*;(^)(NSArray&lt;NSHTTPCookie *&gt;*):void):void">
				<signature>NSHTTPCookieStorage.-getCookiesForTask:completionHandler:(NSURLSessionTask*;(^)(NSArray&lt;NSHTTPCookie *&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCookiesSinceDate:" uniqueID="-removeCookiesSinceDate:(NSDate*):void">
				<signature>NSHTTPCookieStorage.-removeCookiesSinceDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCookie:" uniqueID="-setCookie:(NSHTTPCookie*):void">
				<signature>NSHTTPCookieStorage.-setCookie:(NSHTTPCookie*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCookieAcceptPolicy:" uniqueID="-setCookieAcceptPolicy:(NSHTTPCookieAcceptPolicy):void">
				<signature>NSHTTPCookieStorage.-setCookieAcceptPolicy:(NSHTTPCookieAcceptPolicy):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCookies:forURL:mainDocumentURL:" uniqueID="-setCookies:forURL:mainDocumentURL:(NSArray&lt;NSHTTPCookie *&gt;*;NSURL*;NSURL*):void">
				<signature>NSHTTPCookieStorage.-setCookies:forURL:mainDocumentURL:(NSArray&lt;NSHTTPCookie *&gt;*;NSURL*;NSURL*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedCookiesUsingDescriptors:" uniqueID="-sortedCookiesUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;NSHTTPCookie *&gt;*">
				<signature>NSHTTPCookieStorage.-sortedCookiesUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;NSHTTPCookie *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storeCookies:forTask:" uniqueID="-storeCookies:forTask:(NSArray&lt;NSHTTPCookie *&gt;*;NSURLSessionTask*):void">
				<signature>NSHTTPCookieStorage.-storeCookies:forTask:(NSArray&lt;NSHTTPCookie *&gt;*;NSURLSessionTask*):void</signature>
			</method>
		</class>
		<class name="^(id;id;char*):char" uniqueID="^(id;id;char*):char">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;id;char*):char">
				<signature>^(id;id;char*):char.-block(id;id;char*):char</signature>
			</method>
		</class>
		<class name="NSRegularExpression+NSMatching" uniqueID="NSRegularExpression+NSMatching">
			<method accessibility="Public" methodKind="Member" name="-enumerateMatchesInString:options:range:usingBlock:" uniqueID="-enumerateMatchesInString:options:range:usingBlock:(NSString*;NSMatchingOptions;NSRange;(^)(NSTextCheckingResult*;NSMatchingFlags;BOOL*):void):void">
				<signature>NSRegularExpression+NSMatching.-enumerateMatchesInString:options:range:usingBlock:(NSString*;NSMatchingOptions;NSRange;(^)(NSTextCheckingResult*;NSMatchingFlags;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstMatchInString:options:range:" uniqueID="-firstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSTextCheckingResult*">
				<signature>NSRegularExpression+NSMatching.-firstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSTextCheckingResult*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-matchesInString:options:range:" uniqueID="-matchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSArray&lt;NSTextCheckingResult *&gt;*">
				<signature>NSRegularExpression+NSMatching.-matchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSArray&lt;NSTextCheckingResult *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfMatchesInString:options:range:" uniqueID="-numberOfMatchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSUInteger">
				<signature>NSRegularExpression+NSMatching.-numberOfMatchesInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfFirstMatchInString:options:range:" uniqueID="-rangeOfFirstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSRange">
				<signature>NSRegularExpression+NSMatching.-rangeOfFirstMatchInString:options:range:(NSString*;NSMatchingOptions;NSRange):NSRange</signature>
			</method>
		</class>
		<class name="UIViewController+UIKeyCommand" uniqueID="UIViewController+UIKeyCommand">
			<method accessibility="Public" methodKind="Member" name="-addKeyCommand:" uniqueID="-addKeyCommand:(UIKeyCommand*):void">
				<signature>UIViewController+UIKeyCommand.-addKeyCommand:(UIKeyCommand*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeKeyCommand:" uniqueID="-removeKeyCommand:(UIKeyCommand*):void">
				<signature>UIViewController+UIKeyCommand.-removeKeyCommand:(UIKeyCommand*):void</signature>
			</method>
		</class>
		<class name="NSFileManager" uniqueID="NSFileManager">
			<method accessibility="Public" methodKind="Member" name="-URLForDirectory:inDomain:appropriateForURL:create:error:" uniqueID="-URLForDirectory:inDomain:appropriateForURL:create:error:(NSSearchPathDirectory;NSSearchPathDomainMask;NSURL*;BOOL;NSError**):NSURL*">
				<signature>NSFileManager.-URLForDirectory:inDomain:appropriateForURL:create:error:(NSSearchPathDirectory;NSSearchPathDomainMask;NSURL*;BOOL;NSError**):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLForPublishingUbiquitousItemAtURL:expirationDate:error:" uniqueID="-URLForPublishingUbiquitousItemAtURL:expirationDate:error:(NSURL*;NSDate**;NSError**):NSURL*">
				<signature>NSFileManager.-URLForPublishingUbiquitousItemAtURL:expirationDate:error:(NSURL*;NSDate**;NSError**):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLForUbiquityContainerIdentifier:" uniqueID="-URLForUbiquityContainerIdentifier:(NSString*):NSURL*">
				<signature>NSFileManager.-URLForUbiquityContainerIdentifier:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLsForDirectory:inDomains:" uniqueID="-URLsForDirectory:inDomains:(NSSearchPathDirectory;NSSearchPathDomainMask):NSArray&lt;NSURL *&gt;*">
				<signature>NSFileManager.-URLsForDirectory:inDomains:(NSSearchPathDirectory;NSSearchPathDomainMask):NSArray&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributesOfFileSystemForPath:error:" uniqueID="-attributesOfFileSystemForPath:error:(NSString*;NSError**):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSFileManager.-attributesOfFileSystemForPath:error:(NSString*;NSError**):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributesOfItemAtPath:error:" uniqueID="-attributesOfItemAtPath:error:(NSString*;NSError**):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSFileManager.-attributesOfItemAtPath:error:(NSString*;NSError**):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-changeCurrentDirectoryPath:" uniqueID="-changeCurrentDirectoryPath:(NSString*):BOOL">
				<signature>NSFileManager.-changeCurrentDirectoryPath:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-changeFileAttributes:atPath:" uniqueID="-changeFileAttributes:atPath:(NSDictionary*;NSString*):BOOL">
				<signature>NSFileManager.-changeFileAttributes:atPath:(NSDictionary*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsToDisplayForPath:" uniqueID="-componentsToDisplayForPath:(NSString*):NSArray&lt;NSString *&gt;*">
				<signature>NSFileManager.-componentsToDisplayForPath:(NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containerURLForSecurityApplicationGroupIdentifier:" uniqueID="-containerURLForSecurityApplicationGroupIdentifier:(NSString*):NSURL*">
				<signature>NSFileManager.-containerURLForSecurityApplicationGroupIdentifier:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsAtPath:" uniqueID="-contentsAtPath:(NSString*):NSData*">
				<signature>NSFileManager.-contentsAtPath:(NSString*):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsEqualAtPath:andPath:" uniqueID="-contentsEqualAtPath:andPath:(NSString*;NSString*):BOOL">
				<signature>NSFileManager.-contentsEqualAtPath:andPath:(NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsOfDirectoryAtPath:error:" uniqueID="-contentsOfDirectoryAtPath:error:(NSString*;NSError**):NSArray&lt;NSString *&gt;*">
				<signature>NSFileManager.-contentsOfDirectoryAtPath:error:(NSString*;NSError**):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:" uniqueID="-contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:(NSURL*;NSArray&lt;NSString *&gt;*;NSDirectoryEnumerationOptions;NSError**):NSArray&lt;NSURL *&gt;*">
				<signature>NSFileManager.-contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:(NSURL*;NSArray&lt;NSString *&gt;*;NSDirectoryEnumerationOptions;NSError**):NSArray&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyItemAtPath:toPath:error:" uniqueID="-copyItemAtPath:toPath:error:(NSString*;NSString*;NSError**):BOOL">
				<signature>NSFileManager.-copyItemAtPath:toPath:error:(NSString*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyItemAtURL:toURL:error:" uniqueID="-copyItemAtURL:toURL:error:(NSURL*;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-copyItemAtURL:toURL:error:(NSURL*;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createDirectoryAtPath:attributes:" uniqueID="-createDirectoryAtPath:attributes:(NSString*;NSDictionary*):BOOL">
				<signature>NSFileManager.-createDirectoryAtPath:attributes:(NSString*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createDirectoryAtPath:withIntermediateDirectories:attributes:error:" uniqueID="-createDirectoryAtPath:withIntermediateDirectories:attributes:error:(NSString*;BOOL;NSDictionary&lt;NSString *,id&gt;*;NSError**):BOOL">
				<signature>NSFileManager.-createDirectoryAtPath:withIntermediateDirectories:attributes:error:(NSString*;BOOL;NSDictionary&lt;NSString *,id&gt;*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createDirectoryAtURL:withIntermediateDirectories:attributes:error:" uniqueID="-createDirectoryAtURL:withIntermediateDirectories:attributes:error:(NSURL*;BOOL;NSDictionary&lt;NSString *,id&gt;*;NSError**):BOOL">
				<signature>NSFileManager.-createDirectoryAtURL:withIntermediateDirectories:attributes:error:(NSURL*;BOOL;NSDictionary&lt;NSString *,id&gt;*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createFileAtPath:contents:attributes:" uniqueID="-createFileAtPath:contents:attributes:(NSString*;NSData*;NSDictionary&lt;NSString *,id&gt;*):BOOL">
				<signature>NSFileManager.-createFileAtPath:contents:attributes:(NSString*;NSData*;NSDictionary&lt;NSString *,id&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createSymbolicLinkAtPath:pathContent:" uniqueID="-createSymbolicLinkAtPath:pathContent:(NSString*;NSString*):BOOL">
				<signature>NSFileManager.-createSymbolicLinkAtPath:pathContent:(NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createSymbolicLinkAtPath:withDestinationPath:error:" uniqueID="-createSymbolicLinkAtPath:withDestinationPath:error:(NSString*;NSString*;NSError**):BOOL">
				<signature>NSFileManager.-createSymbolicLinkAtPath:withDestinationPath:error:(NSString*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-createSymbolicLinkAtURL:withDestinationURL:error:" uniqueID="-createSymbolicLinkAtURL:withDestinationURL:error:(NSURL*;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-createSymbolicLinkAtURL:withDestinationURL:error:(NSURL*;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentDirectoryPath" uniqueID="-currentDirectoryPath():NSString*">
				<signature>NSFileManager.-currentDirectoryPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;NSFileManagerDelegate&gt;*">
				<signature>NSFileManager.-delegate():objc_object&lt;NSFileManagerDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-destinationOfSymbolicLinkAtPath:error:" uniqueID="-destinationOfSymbolicLinkAtPath:error:(NSString*;NSError**):NSString*">
				<signature>NSFileManager.-destinationOfSymbolicLinkAtPath:error:(NSString*;NSError**):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-directoryContentsAtPath:" uniqueID="-directoryContentsAtPath:(NSString*):NSArray*">
				<signature>NSFileManager.-directoryContentsAtPath:(NSString*):NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-displayNameAtPath:" uniqueID="-displayNameAtPath:(NSString*):NSString*">
				<signature>NSFileManager.-displayNameAtPath:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumeratorAtPath:" uniqueID="-enumeratorAtPath:(NSString*):NSDirectoryEnumerator&lt;NSString *&gt;*">
				<signature>NSFileManager.-enumeratorAtPath:(NSString*):NSDirectoryEnumerator&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:" uniqueID="-enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:(NSURL*;NSArray&lt;NSString *&gt;*;NSDirectoryEnumerationOptions;(^)(NSURL*;NSError*):BOOL):NSDirectoryEnumerator&lt;NSURL *&gt;*">
				<signature>NSFileManager.-enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:(NSURL*;NSArray&lt;NSString *&gt;*;NSDirectoryEnumerationOptions;(^)(NSURL*;NSError*):BOOL):NSDirectoryEnumerator&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-evictUbiquitousItemAtURL:error:" uniqueID="-evictUbiquitousItemAtURL:error:(NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-evictUbiquitousItemAtURL:error:(NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileAttributesAtPath:traverseLink:" uniqueID="-fileAttributesAtPath:traverseLink:(NSString*;BOOL):NSDictionary*">
				<signature>NSFileManager.-fileAttributesAtPath:traverseLink:(NSString*;BOOL):NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileExistsAtPath:" uniqueID="-fileExistsAtPath:(NSString*):BOOL">
				<signature>NSFileManager.-fileExistsAtPath:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileExistsAtPath:isDirectory:" uniqueID="-fileExistsAtPath:isDirectory:(NSString*;BOOL*):BOOL">
				<signature>NSFileManager.-fileExistsAtPath:isDirectory:(NSString*;BOOL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemAttributesAtPath:" uniqueID="-fileSystemAttributesAtPath:(NSString*):NSDictionary*">
				<signature>NSFileManager.-fileSystemAttributesAtPath:(NSString*):NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemRepresentationWithPath:" uniqueID="-fileSystemRepresentationWithPath:(NSString*):const char*">
				<signature>NSFileManager.-fileSystemRepresentationWithPath:(NSString*):const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getRelationship:ofDirectory:inDomain:toItemAtURL:error:" uniqueID="-getRelationship:ofDirectory:inDomain:toItemAtURL:error:(NSURLRelationship*;NSSearchPathDirectory;NSSearchPathDomainMask;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-getRelationship:ofDirectory:inDomain:toItemAtURL:error:(NSURLRelationship*;NSSearchPathDirectory;NSSearchPathDomainMask;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getRelationship:ofDirectoryAtURL:toItemAtURL:error:" uniqueID="-getRelationship:ofDirectoryAtURL:toItemAtURL:error:(NSURLRelationship*;NSURL*;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-getRelationship:ofDirectoryAtURL:toItemAtURL:error:(NSURLRelationship*;NSURL*;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDeletableFileAtPath:" uniqueID="-isDeletableFileAtPath:(NSString*):BOOL">
				<signature>NSFileManager.-isDeletableFileAtPath:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isExecutableFileAtPath:" uniqueID="-isExecutableFileAtPath:(NSString*):BOOL">
				<signature>NSFileManager.-isExecutableFileAtPath:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isReadableFileAtPath:" uniqueID="-isReadableFileAtPath:(NSString*):BOOL">
				<signature>NSFileManager.-isReadableFileAtPath:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUbiquitousItemAtURL:" uniqueID="-isUbiquitousItemAtURL:(NSURL*):BOOL">
				<signature>NSFileManager.-isUbiquitousItemAtURL:(NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isWritableFileAtPath:" uniqueID="-isWritableFileAtPath:(NSString*):BOOL">
				<signature>NSFileManager.-isWritableFileAtPath:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-linkItemAtPath:toPath:error:" uniqueID="-linkItemAtPath:toPath:error:(NSString*;NSString*;NSError**):BOOL">
				<signature>NSFileManager.-linkItemAtPath:toPath:error:(NSString*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-linkItemAtURL:toURL:error:" uniqueID="-linkItemAtURL:toURL:error:(NSURL*;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-linkItemAtURL:toURL:error:(NSURL*;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mountedVolumeURLsIncludingResourceValuesForKeys:options:" uniqueID="-mountedVolumeURLsIncludingResourceValuesForKeys:options:(NSArray&lt;NSString *&gt;*;NSVolumeEnumerationOptions):NSArray&lt;NSURL *&gt;*">
				<signature>NSFileManager.-mountedVolumeURLsIncludingResourceValuesForKeys:options:(NSArray&lt;NSString *&gt;*;NSVolumeEnumerationOptions):NSArray&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-moveItemAtPath:toPath:error:" uniqueID="-moveItemAtPath:toPath:error:(NSString*;NSString*;NSError**):BOOL">
				<signature>NSFileManager.-moveItemAtPath:toPath:error:(NSString*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-moveItemAtURL:toURL:error:" uniqueID="-moveItemAtURL:toURL:error:(NSURL*;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-moveItemAtURL:toURL:error:(NSURL*;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathContentOfSymbolicLinkAtPath:" uniqueID="-pathContentOfSymbolicLinkAtPath:(NSString*):NSString*">
				<signature>NSFileManager.-pathContentOfSymbolicLinkAtPath:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeItemAtPath:error:" uniqueID="-removeItemAtPath:error:(NSString*;NSError**):BOOL">
				<signature>NSFileManager.-removeItemAtPath:error:(NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeItemAtURL:error:" uniqueID="-removeItemAtURL:error:(NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-removeItemAtURL:error:(NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:" uniqueID="-replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:(NSURL*;NSURL*;NSString*;NSFileManagerItemReplacementOptions;NSURL**;NSError**):BOOL">
				<signature>NSFileManager.-replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:(NSURL*;NSURL*;NSString*;NSFileManagerItemReplacementOptions;NSURL**;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributes:ofItemAtPath:error:" uniqueID="-setAttributes:ofItemAtPath:error:(NSDictionary&lt;NSString *,id&gt;*;NSString*;NSError**):BOOL">
				<signature>NSFileManager.-setAttributes:ofItemAtPath:error:(NSDictionary&lt;NSString *,id&gt;*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;NSFileManagerDelegate&gt;*):void">
				<signature>NSFileManager.-setDelegate:(objc_object&lt;NSFileManagerDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUbiquitous:itemAtURL:destinationURL:error:" uniqueID="-setUbiquitous:itemAtURL:destinationURL:error:(BOOL;NSURL*;NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-setUbiquitous:itemAtURL:destinationURL:error:(BOOL;NSURL*;NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startDownloadingUbiquitousItemAtURL:error:" uniqueID="-startDownloadingUbiquitousItemAtURL:error:(NSURL*;NSError**):BOOL">
				<signature>NSFileManager.-startDownloadingUbiquitousItemAtURL:error:(NSURL*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringWithFileSystemRepresentation:length:" uniqueID="-stringWithFileSystemRepresentation:length:(const char*;NSUInteger):NSString*">
				<signature>NSFileManager.-stringWithFileSystemRepresentation:length:(const char*;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subpathsAtPath:" uniqueID="-subpathsAtPath:(NSString*):NSArray&lt;NSString *&gt;*">
				<signature>NSFileManager.-subpathsAtPath:(NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subpathsOfDirectoryAtPath:error:" uniqueID="-subpathsOfDirectoryAtPath:error:(NSString*;NSError**):NSArray&lt;NSString *&gt;*">
				<signature>NSFileManager.-subpathsOfDirectoryAtPath:error:(NSString*;NSError**):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-trashItemAtURL:resultingItemURL:error:" uniqueID="-trashItemAtURL:resultingItemURL:error:(NSURL*;NSURL**;NSError**):BOOL">
				<signature>NSFileManager.-trashItemAtURL:resultingItemURL:error:(NSURL*;NSURL**;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ubiquityIdentityToken" uniqueID="-ubiquityIdentityToken():objc_object&lt;NSObject,NSCopying,NSCoding&gt;*">
				<signature>NSFileManager.-ubiquityIdentityToken():objc_object&lt;NSObject,NSCopying,NSCoding&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unmountVolumeAtURL:options:completionHandler:" uniqueID="-unmountVolumeAtURL:options:completionHandler:(NSURL*;NSFileManagerUnmountOptions;(^)(NSError*):void):void">
				<signature>NSFileManager.-unmountVolumeAtURL:options:completionHandler:(NSURL*;NSFileManagerUnmountOptions;(^)(NSError*):void):void</signature>
			</method>
		</class>
		<class name="NSTextStorage" uniqueID="NSTextStorage">
			<method accessibility="Public" methodKind="Member" name="-addLayoutManager:" uniqueID="-addLayoutManager:(NSLayoutManager*):void">
				<signature>NSTextStorage.-addLayoutManager:(NSLayoutManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-changeInLength" uniqueID="-changeInLength():NSInteger">
				<signature>NSTextStorage.-changeInLength():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;NSTextStorageDelegate&gt;*">
				<signature>NSTextStorage.-delegate():objc_object&lt;NSTextStorageDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-edited:range:changeInLength:" uniqueID="-edited:range:changeInLength:(NSTextStorageEditActions;NSRange;NSInteger):void">
				<signature>NSTextStorage.-edited:range:changeInLength:(NSTextStorageEditActions;NSRange;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editedMask" uniqueID="-editedMask():NSTextStorageEditActions">
				<signature>NSTextStorage.-editedMask():NSTextStorageEditActions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editedRange" uniqueID="-editedRange():NSRange">
				<signature>NSTextStorage.-editedRange():NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ensureAttributesAreFixedInRange:" uniqueID="-ensureAttributesAreFixedInRange:(NSRange):void">
				<signature>NSTextStorage.-ensureAttributesAreFixedInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fixesAttributesLazily" uniqueID="-fixesAttributesLazily():BOOL">
				<signature>NSTextStorage.-fixesAttributesLazily():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateAttributesInRange:" uniqueID="-invalidateAttributesInRange:(NSRange):void">
				<signature>NSTextStorage.-invalidateAttributesInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManagers" uniqueID="-layoutManagers():NSArray&lt;NSLayoutManager *&gt;*">
				<signature>NSTextStorage.-layoutManagers():NSArray&lt;NSLayoutManager *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-processEditing" uniqueID="-processEditing():void">
				<signature>NSTextStorage.-processEditing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeLayoutManager:" uniqueID="-removeLayoutManager:(NSLayoutManager*):void">
				<signature>NSTextStorage.-removeLayoutManager:(NSLayoutManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;NSTextStorageDelegate&gt;*):void">
				<signature>NSTextStorage.-setDelegate:(objc_object&lt;NSTextStorageDelegate&gt;*):void</signature>
			</method>
		</class>
		<class name="NSFileHandle" uniqueID="NSFileHandle">
			<method accessibility="Public" methodKind="Member" name="-acceptConnectionInBackgroundAndNotify" uniqueID="-acceptConnectionInBackgroundAndNotify():void">
				<signature>NSFileHandle.-acceptConnectionInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-acceptConnectionInBackgroundAndNotifyForModes:" uniqueID="-acceptConnectionInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle.-acceptConnectionInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-availableData" uniqueID="-availableData():NSData*">
				<signature>NSFileHandle.-availableData():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-closeFile" uniqueID="-closeFile():void">
				<signature>NSFileHandle.-closeFile():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileDescriptor" uniqueID="-fileDescriptor():int">
				<signature>NSFileHandle.-fileDescriptor():int</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSFileHandle.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFileDescriptor:" uniqueID="-initWithFileDescriptor:(int):instancetype _Nonnull">
				<signature>NSFileHandle.-initWithFileDescriptor:(int):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFileDescriptor:closeOnDealloc:" uniqueID="-initWithFileDescriptor:closeOnDealloc:(int;BOOL):instancetype _Nonnull">
				<signature>NSFileHandle.-initWithFileDescriptor:closeOnDealloc:(int;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-offsetInFile" uniqueID="-offsetInFile():unsigned long long">
				<signature>NSFileHandle.-offsetInFile():unsigned long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readDataOfLength:" uniqueID="-readDataOfLength:(NSUInteger):NSData*">
				<signature>NSFileHandle.-readDataOfLength:(NSUInteger):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readDataToEndOfFile" uniqueID="-readDataToEndOfFile():NSData*">
				<signature>NSFileHandle.-readDataToEndOfFile():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readInBackgroundAndNotify" uniqueID="-readInBackgroundAndNotify():void">
				<signature>NSFileHandle.-readInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readInBackgroundAndNotifyForModes:" uniqueID="-readInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle.-readInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readToEndOfFileInBackgroundAndNotify" uniqueID="-readToEndOfFileInBackgroundAndNotify():void">
				<signature>NSFileHandle.-readToEndOfFileInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readToEndOfFileInBackgroundAndNotifyForModes:" uniqueID="-readToEndOfFileInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle.-readToEndOfFileInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readabilityHandler" uniqueID="-readabilityHandler():(^)(NSFileHandle*):void">
				<signature>NSFileHandle.-readabilityHandler():(^)(NSFileHandle*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-seekToEndOfFile" uniqueID="-seekToEndOfFile():unsigned long long">
				<signature>NSFileHandle.-seekToEndOfFile():unsigned long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-seekToFileOffset:" uniqueID="-seekToFileOffset:(unsigned long long):void">
				<signature>NSFileHandle.-seekToFileOffset:(unsigned long long):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setReadabilityHandler:" uniqueID="-setReadabilityHandler:((^)(NSFileHandle*):void):void">
				<signature>NSFileHandle.-setReadabilityHandler:((^)(NSFileHandle*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWriteabilityHandler:" uniqueID="-setWriteabilityHandler:((^)(NSFileHandle*):void):void">
				<signature>NSFileHandle.-setWriteabilityHandler:((^)(NSFileHandle*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-synchronizeFile" uniqueID="-synchronizeFile():void">
				<signature>NSFileHandle.-synchronizeFile():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-truncateFileAtOffset:" uniqueID="-truncateFileAtOffset:(unsigned long long):void">
				<signature>NSFileHandle.-truncateFileAtOffset:(unsigned long long):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitForDataInBackgroundAndNotify" uniqueID="-waitForDataInBackgroundAndNotify():void">
				<signature>NSFileHandle.-waitForDataInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitForDataInBackgroundAndNotifyForModes:" uniqueID="-waitForDataInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle.-waitForDataInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeData:" uniqueID="-writeData:(NSData*):void">
				<signature>NSFileHandle.-writeData:(NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeabilityHandler" uniqueID="-writeabilityHandler():(^)(NSFileHandle*):void">
				<signature>NSFileHandle.-writeabilityHandler():(^)(NSFileHandle*):void</signature>
			</method>
		</class>
		<class name="NSSet+NSKeyValueObserverRegistration" uniqueID="NSSet+NSKeyValueObserverRegistration">
			<method accessibility="Public" methodKind="Member" name="-addObserver:forKeyPath:options:context:" uniqueID="-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSSet+NSKeyValueObserverRegistration.-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:" uniqueID="-removeObserver:forKeyPath:(NSObject*;NSString*):void">
				<signature>NSSet+NSKeyValueObserverRegistration.-removeObserver:forKeyPath:(NSObject*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:context:" uniqueID="-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void">
				<signature>NSSet+NSKeyValueObserverRegistration.-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void</signature>
			</method>
		</class>
		<class name="NSFileHandle+NSFileHandlePlatformSpecific" uniqueID="NSFileHandle+NSFileHandlePlatformSpecific">
			<method accessibility="Public" methodKind="Member" name="-fileDescriptor" uniqueID="-fileDescriptor():int">
				<signature>NSFileHandle+NSFileHandlePlatformSpecific.-fileDescriptor():int</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFileDescriptor:" uniqueID="-initWithFileDescriptor:(int):instancetype _Nonnull">
				<signature>NSFileHandle+NSFileHandlePlatformSpecific.-initWithFileDescriptor:(int):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSURLCache" uniqueID="NSURLCache">
			<method accessibility="Public" methodKind="Member" name="-cachedResponseForRequest:" uniqueID="-cachedResponseForRequest:(NSURLRequest*):NSCachedURLResponse*">
				<signature>NSURLCache.-cachedResponseForRequest:(NSURLRequest*):NSCachedURLResponse*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentDiskUsage" uniqueID="-currentDiskUsage():NSUInteger">
				<signature>NSURLCache.-currentDiskUsage():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentMemoryUsage" uniqueID="-currentMemoryUsage():NSUInteger">
				<signature>NSURLCache.-currentMemoryUsage():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-diskCapacity" uniqueID="-diskCapacity():NSUInteger">
				<signature>NSURLCache.-diskCapacity():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCachedResponseForDataTask:completionHandler:" uniqueID="-getCachedResponseForDataTask:completionHandler:(NSURLSessionDataTask*;(^)(NSCachedURLResponse*):void):void">
				<signature>NSURLCache.-getCachedResponseForDataTask:completionHandler:(NSURLSessionDataTask*;(^)(NSCachedURLResponse*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithMemoryCapacity:diskCapacity:diskPath:" uniqueID="-initWithMemoryCapacity:diskCapacity:diskPath:(NSUInteger;NSUInteger;NSString*):instancetype _Nonnull">
				<signature>NSURLCache.-initWithMemoryCapacity:diskCapacity:diskPath:(NSUInteger;NSUInteger;NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-memoryCapacity" uniqueID="-memoryCapacity():NSUInteger">
				<signature>NSURLCache.-memoryCapacity():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllCachedResponses" uniqueID="-removeAllCachedResponses():void">
				<signature>NSURLCache.-removeAllCachedResponses():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCachedResponseForDataTask:" uniqueID="-removeCachedResponseForDataTask:(NSURLSessionDataTask*):void">
				<signature>NSURLCache.-removeCachedResponseForDataTask:(NSURLSessionDataTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCachedResponseForRequest:" uniqueID="-removeCachedResponseForRequest:(NSURLRequest*):void">
				<signature>NSURLCache.-removeCachedResponseForRequest:(NSURLRequest*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCachedResponsesSinceDate:" uniqueID="-removeCachedResponsesSinceDate:(NSDate*):void">
				<signature>NSURLCache.-removeCachedResponsesSinceDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDiskCapacity:" uniqueID="-setDiskCapacity:(NSUInteger):void">
				<signature>NSURLCache.-setDiskCapacity:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMemoryCapacity:" uniqueID="-setMemoryCapacity:(NSUInteger):void">
				<signature>NSURLCache.-setMemoryCapacity:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storeCachedResponse:forDataTask:" uniqueID="-storeCachedResponse:forDataTask:(NSCachedURLResponse*;NSURLSessionDataTask*):void">
				<signature>NSURLCache.-storeCachedResponse:forDataTask:(NSCachedURLResponse*;NSURLSessionDataTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storeCachedResponse:forRequest:" uniqueID="-storeCachedResponse:forRequest:(NSCachedURLResponse*;NSURLRequest*):void">
				<signature>NSURLCache.-storeCachedResponse:forRequest:(NSCachedURLResponse*;NSURLRequest*):void</signature>
			</method>
		</class>
		<class name="NSException" uniqueID="NSException">
			<method accessibility="Public" methodKind="Member" name="-callStackReturnAddresses" uniqueID="-callStackReturnAddresses():NSArray&lt;NSNumber *&gt;*">
				<signature>NSException.-callStackReturnAddresses():NSArray&lt;NSNumber *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-callStackSymbols" uniqueID="-callStackSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSException.-callStackSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithName:reason:userInfo:" uniqueID="-initWithName:reason:userInfo:(NSString*;NSString*;NSDictionary*):instancetype _Nonnull">
				<signature>NSException.-initWithName:reason:userInfo:(NSString*;NSString*;NSDictionary*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>NSException.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-raise" uniqueID="-raise():void">
				<signature>NSException.-raise():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reason" uniqueID="-reason():NSString*">
				<signature>NSException.-reason():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInfo" uniqueID="-userInfo():NSDictionary*">
				<signature>NSException.-userInfo():NSDictionary*</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_56_155" uniqueID="Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_56_155">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSURLResponse*;NSData*;NSError*):void">
				<signature>Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_56_155.-block(NSURLResponse*;NSData*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init(const AddedVulnerabilities*):void">
				<signature>Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_56_155.-init(const AddedVulnerabilities*):void</signature>
			</method>
		</class>
		<class name="NSCachedURLResponse" uniqueID="NSCachedURLResponse">
			<method accessibility="Public" methodKind="Member" name="-data" uniqueID="-data():NSData*">
				<signature>NSCachedURLResponse.-data():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithResponse:data:" uniqueID="-initWithResponse:data:(NSURLResponse*;NSData*):instancetype _Nonnull">
				<signature>NSCachedURLResponse.-initWithResponse:data:(NSURLResponse*;NSData*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithResponse:data:userInfo:storagePolicy:" uniqueID="-initWithResponse:data:userInfo:storagePolicy:(NSURLResponse*;NSData*;NSDictionary*;NSURLCacheStoragePolicy):instancetype _Nonnull">
				<signature>NSCachedURLResponse.-initWithResponse:data:userInfo:storagePolicy:(NSURLResponse*;NSData*;NSDictionary*;NSURLCacheStoragePolicy):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-response" uniqueID="-response():NSURLResponse*">
				<signature>NSCachedURLResponse.-response():NSURLResponse*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storagePolicy" uniqueID="-storagePolicy():NSURLCacheStoragePolicy">
				<signature>NSCachedURLResponse.-storagePolicy():NSURLCacheStoragePolicy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInfo" uniqueID="-userInfo():NSDictionary*">
				<signature>NSCachedURLResponse.-userInfo():NSDictionary*</signature>
			</method>
		</class>
		<class name="NSDictionary+NSExtendedDictionary" uniqueID="NSDictionary+NSExtendedDictionary">
			<method accessibility="Public" methodKind="Member" name="-allKeys" uniqueID="-allKeys():NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-allKeys():NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allKeysForObject:" uniqueID="-allKeysForObject:(ObjectType _Nonnull):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-allKeysForObject:(ObjectType _Nonnull):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allValues" uniqueID="-allValues():NSArray&lt;ObjectType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-allValues():NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSDictionary+NSExtendedDictionary.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionInStringsFileFormat" uniqueID="-descriptionInStringsFileFormat():NSString*">
				<signature>NSDictionary+NSExtendedDictionary.-descriptionInStringsFileFormat():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSDictionary+NSExtendedDictionary.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:indent:" uniqueID="-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*">
				<signature>NSDictionary+NSExtendedDictionary.-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateKeysAndObjectsUsingBlock:" uniqueID="-enumerateKeysAndObjectsUsingBlock:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSDictionary+NSExtendedDictionary.-enumerateKeysAndObjectsUsingBlock:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateKeysAndObjectsWithOptions:usingBlock:" uniqueID="-enumerateKeysAndObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSDictionary+NSExtendedDictionary.-enumerateKeysAndObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjects:andKeys:count:" uniqueID="-getObjects:andKeys:count:(ObjectType*;KeyType*;NSUInteger):void">
				<signature>NSDictionary+NSExtendedDictionary.-getObjects:andKeys:count:(ObjectType*;KeyType*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToDictionary:" uniqueID="-isEqualToDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):BOOL">
				<signature>NSDictionary+NSExtendedDictionary.-isEqualToDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysOfEntriesPassingTest:" uniqueID="-keysOfEntriesPassingTest:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-keysOfEntriesPassingTest:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysOfEntriesWithOptions:passingTest:" uniqueID="-keysOfEntriesWithOptions:passingTest:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-keysOfEntriesWithOptions:passingTest:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysSortedByValueUsingComparator:" uniqueID="-keysSortedByValueUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-keysSortedByValueUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysSortedByValueUsingSelector:" uniqueID="-keysSortedByValueUsingSelector:(SEL _Nonnull):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-keysSortedByValueUsingSelector:(SEL _Nonnull):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysSortedByValueWithOptions:usingComparator:" uniqueID="-keysSortedByValueWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-keysSortedByValueWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectEnumerator" uniqueID="-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKeyedSubscript:" uniqueID="-objectForKeyedSubscript:(KeyType _Nonnull):ObjectType _Nullable">
				<signature>NSDictionary+NSExtendedDictionary.-objectForKeyedSubscript:(KeyType _Nonnull):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsForKeys:notFoundMarker:" uniqueID="-objectsForKeys:notFoundMarker:(NSArray&lt;KeyType&gt;*;ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*">
				<signature>NSDictionary+NSExtendedDictionary.-objectsForKeys:notFoundMarker:(NSArray&lt;KeyType&gt;*;ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSDictionary+NSExtendedDictionary.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSDictionary+NSExtendedDictionary.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
		</class>
		<class name="NSLocale" uniqueID="NSLocale">
			<method accessibility="Public" methodKind="Member" name="-displayNameForKey:value:" uniqueID="-displayNameForKey:value:(id _Nonnull;id _Nonnull):NSString*">
				<signature>NSLocale.-displayNameForKey:value:(id _Nonnull;id _Nonnull):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSLocale.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSLocale.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLocaleIdentifier:" uniqueID="-initWithLocaleIdentifier:(NSString*):instancetype _Nonnull">
				<signature>NSLocale.-initWithLocaleIdentifier:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localeIdentifier" uniqueID="-localeIdentifier():NSString*">
				<signature>NSLocale.-localeIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKey:" uniqueID="-objectForKey:(id _Nonnull):id _Nullable">
				<signature>NSLocale.-objectForKey:(id _Nonnull):id _Nullable</signature>
			</method>
		</class>
		<class name="NSDictionary+NSDictionaryCreation" uniqueID="NSDictionary+NSDictionaryCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSDictionary+NSDictionaryCreation.-initWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSDictionary+NSDictionaryCreation.-initWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDictionary:" uniqueID="-initWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSDictionary+NSDictionaryCreation.-initWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDictionary:copyItems:" uniqueID="-initWithDictionary:copyItems:(NSDictionary&lt;KeyType,ObjectType&gt;*;BOOL):instancetype _Nonnull">
				<signature>NSDictionary+NSDictionaryCreation.-initWithDictionary:copyItems:(NSDictionary&lt;KeyType,ObjectType&gt;*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:forKeys:" uniqueID="-initWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull">
				<signature>NSDictionary+NSDictionaryCreation.-initWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjectsAndKeys:" uniqueID="-initWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull">
				<signature>NSDictionary+NSDictionaryCreation.-initWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="UITableView" uniqueID="UITableView">
			<method accessibility="Public" methodKind="Member" name="-allowsMultipleSelection" uniqueID="-allowsMultipleSelection():BOOL">
				<signature>UITableView.-allowsMultipleSelection():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsMultipleSelectionDuringEditing" uniqueID="-allowsMultipleSelectionDuringEditing():BOOL">
				<signature>UITableView.-allowsMultipleSelectionDuringEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsSelection" uniqueID="-allowsSelection():BOOL">
				<signature>UITableView.-allowsSelection():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsSelectionDuringEditing" uniqueID="-allowsSelectionDuringEditing():BOOL">
				<signature>UITableView.-allowsSelectionDuringEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundView" uniqueID="-backgroundView():UIView*">
				<signature>UITableView.-backgroundView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginUpdates" uniqueID="-beginUpdates():void">
				<signature>UITableView.-beginUpdates():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cellForRowAtIndexPath:" uniqueID="-cellForRowAtIndexPath:(NSIndexPath*):__kindof UITableViewCell*">
				<signature>UITableView.-cellForRowAtIndexPath:(NSIndexPath*):__kindof UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cellLayoutMarginsFollowReadableWidth" uniqueID="-cellLayoutMarginsFollowReadableWidth():BOOL">
				<signature>UITableView.-cellLayoutMarginsFollowReadableWidth():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataSource" uniqueID="-dataSource():objc_object&lt;UITableViewDataSource&gt;*">
				<signature>UITableView.-dataSource():objc_object&lt;UITableViewDataSource&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UITableViewDelegate&gt;*">
				<signature>UITableView.-delegate():objc_object&lt;UITableViewDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteRowsAtIndexPaths:withRowAnimation:" uniqueID="-deleteRowsAtIndexPaths:withRowAnimation:(NSArray&lt;NSIndexPath *&gt;*;UITableViewRowAnimation):void">
				<signature>UITableView.-deleteRowsAtIndexPaths:withRowAnimation:(NSArray&lt;NSIndexPath *&gt;*;UITableViewRowAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteSections:withRowAnimation:" uniqueID="-deleteSections:withRowAnimation:(NSIndexSet*;UITableViewRowAnimation):void">
				<signature>UITableView.-deleteSections:withRowAnimation:(NSIndexSet*;UITableViewRowAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dequeueReusableCellWithIdentifier:" uniqueID="-dequeueReusableCellWithIdentifier:(NSString*):__kindof UITableViewCell*">
				<signature>UITableView.-dequeueReusableCellWithIdentifier:(NSString*):__kindof UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dequeueReusableCellWithIdentifier:forIndexPath:" uniqueID="-dequeueReusableCellWithIdentifier:forIndexPath:(NSString*;NSIndexPath*):__kindof UITableViewCell*">
				<signature>UITableView.-dequeueReusableCellWithIdentifier:forIndexPath:(NSString*;NSIndexPath*):__kindof UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dequeueReusableHeaderFooterViewWithIdentifier:" uniqueID="-dequeueReusableHeaderFooterViewWithIdentifier:(NSString*):__kindof UITableViewHeaderFooterView*">
				<signature>UITableView.-dequeueReusableHeaderFooterViewWithIdentifier:(NSString*):__kindof UITableViewHeaderFooterView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deselectRowAtIndexPath:animated:" uniqueID="-deselectRowAtIndexPath:animated:(NSIndexPath*;BOOL):void">
				<signature>UITableView.-deselectRowAtIndexPath:animated:(NSIndexPath*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endUpdates" uniqueID="-endUpdates():void">
				<signature>UITableView.-endUpdates():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-estimatedRowHeight" uniqueID="-estimatedRowHeight():CGFloat">
				<signature>UITableView.-estimatedRowHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-estimatedSectionFooterHeight" uniqueID="-estimatedSectionFooterHeight():CGFloat">
				<signature>UITableView.-estimatedSectionFooterHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-estimatedSectionHeaderHeight" uniqueID="-estimatedSectionHeaderHeight():CGFloat">
				<signature>UITableView.-estimatedSectionHeaderHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-footerViewForSection:" uniqueID="-footerViewForSection:(NSInteger):UITableViewHeaderFooterView*">
				<signature>UITableView.-footerViewForSection:(NSInteger):UITableViewHeaderFooterView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-headerViewForSection:" uniqueID="-headerViewForSection:(NSInteger):UITableViewHeaderFooterView*">
				<signature>UITableView.-headerViewForSection:(NSInteger):UITableViewHeaderFooterView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathForCell:" uniqueID="-indexPathForCell:(UITableViewCell*):NSIndexPath*">
				<signature>UITableView.-indexPathForCell:(UITableViewCell*):NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathForRowAtPoint:" uniqueID="-indexPathForRowAtPoint:(CGPoint):NSIndexPath*">
				<signature>UITableView.-indexPathForRowAtPoint:(CGPoint):NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathForSelectedRow" uniqueID="-indexPathForSelectedRow():NSIndexPath*">
				<signature>UITableView.-indexPathForSelectedRow():NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathsForRowsInRect:" uniqueID="-indexPathsForRowsInRect:(CGRect):NSArray&lt;NSIndexPath *&gt;*">
				<signature>UITableView.-indexPathsForRowsInRect:(CGRect):NSArray&lt;NSIndexPath *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathsForSelectedRows" uniqueID="-indexPathsForSelectedRows():NSArray&lt;NSIndexPath *&gt;*">
				<signature>UITableView.-indexPathsForSelectedRows():NSArray&lt;NSIndexPath *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathsForVisibleRows" uniqueID="-indexPathsForVisibleRows():NSArray&lt;NSIndexPath *&gt;*">
				<signature>UITableView.-indexPathsForVisibleRows():NSArray&lt;NSIndexPath *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UITableView.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFrame:style:" uniqueID="-initWithFrame:style:(CGRect;UITableViewStyle):instancetype _Nonnull">
				<signature>UITableView.-initWithFrame:style:(CGRect;UITableViewStyle):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertRowsAtIndexPaths:withRowAnimation:" uniqueID="-insertRowsAtIndexPaths:withRowAnimation:(NSArray&lt;NSIndexPath *&gt;*;UITableViewRowAnimation):void">
				<signature>UITableView.-insertRowsAtIndexPaths:withRowAnimation:(NSArray&lt;NSIndexPath *&gt;*;UITableViewRowAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSections:withRowAnimation:" uniqueID="-insertSections:withRowAnimation:(NSIndexSet*;UITableViewRowAnimation):void">
				<signature>UITableView.-insertSections:withRowAnimation:(NSIndexSet*;UITableViewRowAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEditing" uniqueID="-isEditing():BOOL">
				<signature>UITableView.-isEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-moveRowAtIndexPath:toIndexPath:" uniqueID="-moveRowAtIndexPath:toIndexPath:(NSIndexPath*;NSIndexPath*):void">
				<signature>UITableView.-moveRowAtIndexPath:toIndexPath:(NSIndexPath*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-moveSection:toSection:" uniqueID="-moveSection:toSection:(NSInteger;NSInteger):void">
				<signature>UITableView.-moveSection:toSection:(NSInteger;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfRowsInSection:" uniqueID="-numberOfRowsInSection:(NSInteger):NSInteger">
				<signature>UITableView.-numberOfRowsInSection:(NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfSections" uniqueID="-numberOfSections():NSInteger">
				<signature>UITableView.-numberOfSections():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rectForFooterInSection:" uniqueID="-rectForFooterInSection:(NSInteger):CGRect">
				<signature>UITableView.-rectForFooterInSection:(NSInteger):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rectForHeaderInSection:" uniqueID="-rectForHeaderInSection:(NSInteger):CGRect">
				<signature>UITableView.-rectForHeaderInSection:(NSInteger):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rectForRowAtIndexPath:" uniqueID="-rectForRowAtIndexPath:(NSIndexPath*):CGRect">
				<signature>UITableView.-rectForRowAtIndexPath:(NSIndexPath*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rectForSection:" uniqueID="-rectForSection:(NSInteger):CGRect">
				<signature>UITableView.-rectForSection:(NSInteger):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerClass:forCellReuseIdentifier:" uniqueID="-registerClass:forCellReuseIdentifier:(Class*;NSString*):void">
				<signature>UITableView.-registerClass:forCellReuseIdentifier:(Class*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerClass:forHeaderFooterViewReuseIdentifier:" uniqueID="-registerClass:forHeaderFooterViewReuseIdentifier:(Class*;NSString*):void">
				<signature>UITableView.-registerClass:forHeaderFooterViewReuseIdentifier:(Class*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerNib:forCellReuseIdentifier:" uniqueID="-registerNib:forCellReuseIdentifier:(UINib*;NSString*):void">
				<signature>UITableView.-registerNib:forCellReuseIdentifier:(UINib*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerNib:forHeaderFooterViewReuseIdentifier:" uniqueID="-registerNib:forHeaderFooterViewReuseIdentifier:(UINib*;NSString*):void">
				<signature>UITableView.-registerNib:forHeaderFooterViewReuseIdentifier:(UINib*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reloadData" uniqueID="-reloadData():void">
				<signature>UITableView.-reloadData():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reloadRowsAtIndexPaths:withRowAnimation:" uniqueID="-reloadRowsAtIndexPaths:withRowAnimation:(NSArray&lt;NSIndexPath *&gt;*;UITableViewRowAnimation):void">
				<signature>UITableView.-reloadRowsAtIndexPaths:withRowAnimation:(NSArray&lt;NSIndexPath *&gt;*;UITableViewRowAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reloadSectionIndexTitles" uniqueID="-reloadSectionIndexTitles():void">
				<signature>UITableView.-reloadSectionIndexTitles():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reloadSections:withRowAnimation:" uniqueID="-reloadSections:withRowAnimation:(NSIndexSet*;UITableViewRowAnimation):void">
				<signature>UITableView.-reloadSections:withRowAnimation:(NSIndexSet*;UITableViewRowAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-remembersLastFocusedIndexPath" uniqueID="-remembersLastFocusedIndexPath():BOOL">
				<signature>UITableView.-remembersLastFocusedIndexPath():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rowHeight" uniqueID="-rowHeight():CGFloat">
				<signature>UITableView.-rowHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollToNearestSelectedRowAtScrollPosition:animated:" uniqueID="-scrollToNearestSelectedRowAtScrollPosition:animated:(UITableViewScrollPosition;BOOL):void">
				<signature>UITableView.-scrollToNearestSelectedRowAtScrollPosition:animated:(UITableViewScrollPosition;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollToRowAtIndexPath:atScrollPosition:animated:" uniqueID="-scrollToRowAtIndexPath:atScrollPosition:animated:(NSIndexPath*;UITableViewScrollPosition;BOOL):void">
				<signature>UITableView.-scrollToRowAtIndexPath:atScrollPosition:animated:(NSIndexPath*;UITableViewScrollPosition;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionFooterHeight" uniqueID="-sectionFooterHeight():CGFloat">
				<signature>UITableView.-sectionFooterHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionHeaderHeight" uniqueID="-sectionHeaderHeight():CGFloat">
				<signature>UITableView.-sectionHeaderHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionIndexBackgroundColor" uniqueID="-sectionIndexBackgroundColor():UIColor*">
				<signature>UITableView.-sectionIndexBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionIndexColor" uniqueID="-sectionIndexColor():UIColor*">
				<signature>UITableView.-sectionIndexColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionIndexMinimumDisplayRowCount" uniqueID="-sectionIndexMinimumDisplayRowCount():NSInteger">
				<signature>UITableView.-sectionIndexMinimumDisplayRowCount():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionIndexTrackingBackgroundColor" uniqueID="-sectionIndexTrackingBackgroundColor():UIColor*">
				<signature>UITableView.-sectionIndexTrackingBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectRowAtIndexPath:animated:scrollPosition:" uniqueID="-selectRowAtIndexPath:animated:scrollPosition:(NSIndexPath*;BOOL;UITableViewScrollPosition):void">
				<signature>UITableView.-selectRowAtIndexPath:animated:scrollPosition:(NSIndexPath*;BOOL;UITableViewScrollPosition):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separatorColor" uniqueID="-separatorColor():UIColor*">
				<signature>UITableView.-separatorColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separatorEffect" uniqueID="-separatorEffect():UIVisualEffect*">
				<signature>UITableView.-separatorEffect():UIVisualEffect*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separatorInset" uniqueID="-separatorInset():UIEdgeInsets">
				<signature>UITableView.-separatorInset():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separatorStyle" uniqueID="-separatorStyle():UITableViewCellSeparatorStyle">
				<signature>UITableView.-separatorStyle():UITableViewCellSeparatorStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsMultipleSelection:" uniqueID="-setAllowsMultipleSelection:(BOOL):void">
				<signature>UITableView.-setAllowsMultipleSelection:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsMultipleSelectionDuringEditing:" uniqueID="-setAllowsMultipleSelectionDuringEditing:(BOOL):void">
				<signature>UITableView.-setAllowsMultipleSelectionDuringEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsSelection:" uniqueID="-setAllowsSelection:(BOOL):void">
				<signature>UITableView.-setAllowsSelection:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsSelectionDuringEditing:" uniqueID="-setAllowsSelectionDuringEditing:(BOOL):void">
				<signature>UITableView.-setAllowsSelectionDuringEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundView:" uniqueID="-setBackgroundView:(UIView*):void">
				<signature>UITableView.-setBackgroundView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCellLayoutMarginsFollowReadableWidth:" uniqueID="-setCellLayoutMarginsFollowReadableWidth:(BOOL):void">
				<signature>UITableView.-setCellLayoutMarginsFollowReadableWidth:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDataSource:" uniqueID="-setDataSource:(objc_object&lt;UITableViewDataSource&gt;*):void">
				<signature>UITableView.-setDataSource:(objc_object&lt;UITableViewDataSource&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UITableViewDelegate&gt;*):void">
				<signature>UITableView.-setDelegate:(objc_object&lt;UITableViewDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:" uniqueID="-setEditing:(BOOL):void">
				<signature>UITableView.-setEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:animated:" uniqueID="-setEditing:animated:(BOOL;BOOL):void">
				<signature>UITableView.-setEditing:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEstimatedRowHeight:" uniqueID="-setEstimatedRowHeight:(CGFloat):void">
				<signature>UITableView.-setEstimatedRowHeight:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEstimatedSectionFooterHeight:" uniqueID="-setEstimatedSectionFooterHeight:(CGFloat):void">
				<signature>UITableView.-setEstimatedSectionFooterHeight:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEstimatedSectionHeaderHeight:" uniqueID="-setEstimatedSectionHeaderHeight:(CGFloat):void">
				<signature>UITableView.-setEstimatedSectionHeaderHeight:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRemembersLastFocusedIndexPath:" uniqueID="-setRemembersLastFocusedIndexPath:(BOOL):void">
				<signature>UITableView.-setRemembersLastFocusedIndexPath:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRowHeight:" uniqueID="-setRowHeight:(CGFloat):void">
				<signature>UITableView.-setRowHeight:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSectionFooterHeight:" uniqueID="-setSectionFooterHeight:(CGFloat):void">
				<signature>UITableView.-setSectionFooterHeight:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSectionHeaderHeight:" uniqueID="-setSectionHeaderHeight:(CGFloat):void">
				<signature>UITableView.-setSectionHeaderHeight:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSectionIndexBackgroundColor:" uniqueID="-setSectionIndexBackgroundColor:(UIColor*):void">
				<signature>UITableView.-setSectionIndexBackgroundColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSectionIndexColor:" uniqueID="-setSectionIndexColor:(UIColor*):void">
				<signature>UITableView.-setSectionIndexColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSectionIndexMinimumDisplayRowCount:" uniqueID="-setSectionIndexMinimumDisplayRowCount:(NSInteger):void">
				<signature>UITableView.-setSectionIndexMinimumDisplayRowCount:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSectionIndexTrackingBackgroundColor:" uniqueID="-setSectionIndexTrackingBackgroundColor:(UIColor*):void">
				<signature>UITableView.-setSectionIndexTrackingBackgroundColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSeparatorColor:" uniqueID="-setSeparatorColor:(UIColor*):void">
				<signature>UITableView.-setSeparatorColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSeparatorEffect:" uniqueID="-setSeparatorEffect:(UIVisualEffect*):void">
				<signature>UITableView.-setSeparatorEffect:(UIVisualEffect*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSeparatorInset:" uniqueID="-setSeparatorInset:(UIEdgeInsets):void">
				<signature>UITableView.-setSeparatorInset:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSeparatorStyle:" uniqueID="-setSeparatorStyle:(UITableViewCellSeparatorStyle):void">
				<signature>UITableView.-setSeparatorStyle:(UITableViewCellSeparatorStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTableFooterView:" uniqueID="-setTableFooterView:(UIView*):void">
				<signature>UITableView.-setTableFooterView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTableHeaderView:" uniqueID="-setTableHeaderView:(UIView*):void">
				<signature>UITableView.-setTableHeaderView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-style" uniqueID="-style():UITableViewStyle">
				<signature>UITableView.-style():UITableViewStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableFooterView" uniqueID="-tableFooterView():UIView*">
				<signature>UITableView.-tableFooterView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableHeaderView" uniqueID="-tableHeaderView():UIView*">
				<signature>UITableView.-tableHeaderView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-visibleCells" uniqueID="-visibleCells():NSArray&lt;__kindof UITableViewCell *&gt;*">
				<signature>UITableView.-visibleCells():NSArray&lt;__kindof UITableViewCell *&gt;*</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_AppDelegate_m_248_97" uniqueID="Closure_@___x_AcmeAirlines_AppDelegate_m_248_97">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSData*;NSURLResponse*;NSError*):void">
				<signature>Closure_@___x_AcmeAirlines_AppDelegate_m_248_97.-block(NSData*;NSURLResponse*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():void">
				<signature>Closure_@___x_AcmeAirlines_AppDelegate_m_248_97.-init():void</signature>
			</method>
		</class>
		<class name="NSFormatter" uniqueID="NSFormatter">
			<method accessibility="Public" methodKind="Member" name="-attributedStringForObjectValue:withDefaultAttributes:" uniqueID="-attributedStringForObjectValue:withDefaultAttributes:(id _Nonnull;NSDictionary&lt;NSString *,id&gt;*):NSAttributedString*">
				<signature>NSFormatter.-attributedStringForObjectValue:withDefaultAttributes:(id _Nonnull;NSDictionary&lt;NSString *,id&gt;*):NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editingStringForObjectValue:" uniqueID="-editingStringForObjectValue:(id _Nonnull):NSString*">
				<signature>NSFormatter.-editingStringForObjectValue:(id _Nonnull):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjectValue:forString:errorDescription:" uniqueID="-getObjectValue:forString:errorDescription:(id _Nullable*;NSString*;NSString**):BOOL">
				<signature>NSFormatter.-getObjectValue:forString:errorDescription:(id _Nullable*;NSString*;NSString**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isPartialStringValid:newEditingString:errorDescription:" uniqueID="-isPartialStringValid:newEditingString:errorDescription:(NSString*;NSString**;NSString**):BOOL">
				<signature>NSFormatter.-isPartialStringValid:newEditingString:errorDescription:(NSString*;NSString**;NSString**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:" uniqueID="-isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:(NSString**;NSRange*;NSString*;NSRange;NSString**):BOOL">
				<signature>NSFormatter.-isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:(NSString**;NSRange*;NSString*;NSRange;NSString**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringForObjectValue:" uniqueID="-stringForObjectValue:(id _Nonnull):NSString*">
				<signature>NSFormatter.-stringForObjectValue:(id _Nonnull):NSString*</signature>
			</method>
		</class>
		<class name="NSData+NSDeprecated" uniqueID="NSData+NSDeprecated">
			<method accessibility="Public" methodKind="Member" name="-base64Encoding" uniqueID="-base64Encoding():NSString*">
				<signature>NSData+NSDeprecated.-base64Encoding():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:" uniqueID="-getBytes:(void*):void">
				<signature>NSData+NSDeprecated.-getBytes:(void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBase64Encoding:" uniqueID="-initWithBase64Encoding:(NSString*):id _Nullable">
				<signature>NSData+NSDeprecated.-initWithBase64Encoding:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfMappedFile:" uniqueID="-initWithContentsOfMappedFile:(NSString*):id _Nullable">
				<signature>NSData+NSDeprecated.-initWithContentsOfMappedFile:(NSString*):id _Nullable</signature>
			</method>
		</class>
		<class name="NSData+NSDataCreation" uniqueID="NSData+NSDataCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithBytes:length:" uniqueID="-initWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull">
				<signature>NSData+NSDataCreation.-initWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:" uniqueID="-initWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull">
				<signature>NSData+NSDataCreation.-initWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:deallocator:" uniqueID="-initWithBytesNoCopy:length:deallocator:(void*;NSUInteger;(^)(void*;NSUInteger):void):instancetype _Nonnull">
				<signature>NSData+NSDataCreation.-initWithBytesNoCopy:length:deallocator:(void*;NSUInteger;(^)(void*;NSUInteger):void):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:freeWhenDone:" uniqueID="-initWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull">
				<signature>NSData+NSDataCreation.-initWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):instancetype _Nullable">
				<signature>NSData+NSDataCreation.-initWithContentsOfFile:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:options:error:" uniqueID="-initWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>NSData+NSDataCreation.-initWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):instancetype _Nullable">
				<signature>NSData+NSDataCreation.-initWithContentsOfURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:options:error:" uniqueID="-initWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>NSData+NSDataCreation.-initWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:" uniqueID="-initWithData:(NSData*):instancetype _Nonnull">
				<signature>NSData+NSDataCreation.-initWithData:(NSData*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSDate+NSDateCreation" uniqueID="NSDate+NSDateCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithTimeInterval:sinceDate:" uniqueID="-initWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull">
				<signature>NSDate+NSDateCreation.-initWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTimeIntervalSince1970:" uniqueID="-initWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate+NSDateCreation.-initWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTimeIntervalSinceNow:" uniqueID="-initWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate+NSDateCreation.-initWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSData+NSDataBase64Encoding" uniqueID="NSData+NSDataBase64Encoding">
			<method accessibility="Public" methodKind="Member" name="-base64EncodedDataWithOptions:" uniqueID="-base64EncodedDataWithOptions:(NSDataBase64EncodingOptions):NSData*">
				<signature>NSData+NSDataBase64Encoding.-base64EncodedDataWithOptions:(NSDataBase64EncodingOptions):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-base64EncodedStringWithOptions:" uniqueID="-base64EncodedStringWithOptions:(NSDataBase64EncodingOptions):NSString*">
				<signature>NSData+NSDataBase64Encoding.-base64EncodedStringWithOptions:(NSDataBase64EncodingOptions):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBase64EncodedData:options:" uniqueID="-initWithBase64EncodedData:options:(NSData*;NSDataBase64DecodingOptions):instancetype _Nullable">
				<signature>NSData+NSDataBase64Encoding.-initWithBase64EncodedData:options:(NSData*;NSDataBase64DecodingOptions):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBase64EncodedString:options:" uniqueID="-initWithBase64EncodedString:options:(NSString*;NSDataBase64DecodingOptions):instancetype _Nullable">
				<signature>NSData+NSDataBase64Encoding.-initWithBase64EncodedString:options:(NSString*;NSDataBase64DecodingOptions):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSRunLoop+NSOrderedPerform" uniqueID="NSRunLoop+NSOrderedPerform">
			<method accessibility="Public" methodKind="Member" name="-cancelPerformSelector:target:argument:" uniqueID="-cancelPerformSelector:target:argument:(SEL _Nonnull;id _Nonnull;id _Nullable):void">
				<signature>NSRunLoop+NSOrderedPerform.-cancelPerformSelector:target:argument:(SEL _Nonnull;id _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelPerformSelectorsWithTarget:" uniqueID="-cancelPerformSelectorsWithTarget:(id _Nonnull):void">
				<signature>NSRunLoop+NSOrderedPerform.-cancelPerformSelectorsWithTarget:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:target:argument:order:modes:" uniqueID="-performSelector:target:argument:order:modes:(SEL _Nonnull;id _Nonnull;id _Nullable;NSUInteger;NSArray&lt;NSString *&gt;*):void">
				<signature>NSRunLoop+NSOrderedPerform.-performSelector:target:argument:order:modes:(SEL _Nonnull;id _Nonnull;id _Nullable;NSUInteger;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
		</class>
		<class name="NSCalendar" uniqueID="NSCalendar">
			<method accessibility="Public" methodKind="Member" name="-AMSymbol" uniqueID="-AMSymbol():NSString*">
				<signature>NSCalendar.-AMSymbol():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-PMSymbol" uniqueID="-PMSymbol():NSString*">
				<signature>NSCalendar.-PMSymbol():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendarIdentifier" uniqueID="-calendarIdentifier():NSString*">
				<signature>NSCalendar.-calendarIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compareDate:toDate:toUnitGranularity:" uniqueID="-compareDate:toDate:toUnitGranularity:(NSDate*;NSDate*;NSCalendarUnit):NSComparisonResult">
				<signature>NSCalendar.-compareDate:toDate:toUnitGranularity:(NSDate*;NSDate*;NSCalendarUnit):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-component:fromDate:" uniqueID="-component:fromDate:(NSCalendarUnit;NSDate*):NSInteger">
				<signature>NSCalendar.-component:fromDate:(NSCalendarUnit;NSDate*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-components:fromDate:" uniqueID="-components:fromDate:(NSCalendarUnit;NSDate*):NSDateComponents*">
				<signature>NSCalendar.-components:fromDate:(NSCalendarUnit;NSDate*):NSDateComponents*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-components:fromDate:toDate:options:" uniqueID="-components:fromDate:toDate:options:(NSCalendarUnit;NSDate*;NSDate*;NSCalendarOptions):NSDateComponents*">
				<signature>NSCalendar.-components:fromDate:toDate:options:(NSCalendarUnit;NSDate*;NSDate*;NSCalendarOptions):NSDateComponents*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-components:fromDateComponents:toDateComponents:options:" uniqueID="-components:fromDateComponents:toDateComponents:options:(NSCalendarUnit;NSDateComponents*;NSDateComponents*;NSCalendarOptions):NSDateComponents*">
				<signature>NSCalendar.-components:fromDateComponents:toDateComponents:options:(NSCalendarUnit;NSDateComponents*;NSDateComponents*;NSCalendarOptions):NSDateComponents*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsInTimeZone:fromDate:" uniqueID="-componentsInTimeZone:fromDate:(NSTimeZone*;NSDate*):NSDateComponents*">
				<signature>NSCalendar.-componentsInTimeZone:fromDate:(NSTimeZone*;NSDate*):NSDateComponents*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-date:matchesComponents:" uniqueID="-date:matchesComponents:(NSDate*;NSDateComponents*):BOOL">
				<signature>NSCalendar.-date:matchesComponents:(NSDate*;NSDateComponents*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateByAddingComponents:toDate:options:" uniqueID="-dateByAddingComponents:toDate:options:(NSDateComponents*;NSDate*;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-dateByAddingComponents:toDate:options:(NSDateComponents*;NSDate*;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateByAddingUnit:value:toDate:options:" uniqueID="-dateByAddingUnit:value:toDate:options:(NSCalendarUnit;NSInteger;NSDate*;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-dateByAddingUnit:value:toDate:options:(NSCalendarUnit;NSInteger;NSDate*;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateBySettingHour:minute:second:ofDate:options:" uniqueID="-dateBySettingHour:minute:second:ofDate:options:(NSInteger;NSInteger;NSInteger;NSDate*;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-dateBySettingHour:minute:second:ofDate:options:(NSInteger;NSInteger;NSInteger;NSDate*;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateBySettingUnit:value:ofDate:options:" uniqueID="-dateBySettingUnit:value:ofDate:options:(NSCalendarUnit;NSInteger;NSDate*;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-dateBySettingUnit:value:ofDate:options:(NSCalendarUnit;NSInteger;NSDate*;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateFromComponents:" uniqueID="-dateFromComponents:(NSDateComponents*):NSDate*">
				<signature>NSCalendar.-dateFromComponents:(NSDateComponents*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateWithEra:year:month:day:hour:minute:second:nanosecond:" uniqueID="-dateWithEra:year:month:day:hour:minute:second:nanosecond:(NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger):NSDate*">
				<signature>NSCalendar.-dateWithEra:year:month:day:hour:minute:second:nanosecond:(NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateWithEra:yearForWeekOfYear:weekOfYear:weekday:hour:minute:second:nanosecond:" uniqueID="-dateWithEra:yearForWeekOfYear:weekOfYear:weekday:hour:minute:second:nanosecond:(NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger):NSDate*">
				<signature>NSCalendar.-dateWithEra:yearForWeekOfYear:weekOfYear:weekday:hour:minute:second:nanosecond:(NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger;NSInteger):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:" uniqueID="-enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:(NSDate*;NSDateComponents*;NSCalendarOptions;(^)(NSDate*;BOOL;BOOL*):void):void">
				<signature>NSCalendar.-enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:(NSDate*;NSDateComponents*;NSCalendarOptions;(^)(NSDate*;BOOL;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-eraSymbols" uniqueID="-eraSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-eraSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstWeekday" uniqueID="-firstWeekday():NSUInteger">
				<signature>NSCalendar.-firstWeekday():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getEra:year:month:day:fromDate:" uniqueID="-getEra:year:month:day:fromDate:(NSInteger*;NSInteger*;NSInteger*;NSInteger*;NSDate*):void">
				<signature>NSCalendar.-getEra:year:month:day:fromDate:(NSInteger*;NSInteger*;NSInteger*;NSInteger*;NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getEra:yearForWeekOfYear:weekOfYear:weekday:fromDate:" uniqueID="-getEra:yearForWeekOfYear:weekOfYear:weekday:fromDate:(NSInteger*;NSInteger*;NSInteger*;NSInteger*;NSDate*):void">
				<signature>NSCalendar.-getEra:yearForWeekOfYear:weekOfYear:weekday:fromDate:(NSInteger*;NSInteger*;NSInteger*;NSInteger*;NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getHour:minute:second:nanosecond:fromDate:" uniqueID="-getHour:minute:second:nanosecond:fromDate:(NSInteger*;NSInteger*;NSInteger*;NSInteger*;NSDate*):void">
				<signature>NSCalendar.-getHour:minute:second:nanosecond:fromDate:(NSInteger*;NSInteger*;NSInteger*;NSInteger*;NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSCalendar.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCalendarIdentifier:" uniqueID="-initWithCalendarIdentifier:(NSString*):id _Nullable">
				<signature>NSCalendar.-initWithCalendarIdentifier:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDate:equalToDate:toUnitGranularity:" uniqueID="-isDate:equalToDate:toUnitGranularity:(NSDate*;NSDate*;NSCalendarUnit):BOOL">
				<signature>NSCalendar.-isDate:equalToDate:toUnitGranularity:(NSDate*;NSDate*;NSCalendarUnit):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDate:inSameDayAsDate:" uniqueID="-isDate:inSameDayAsDate:(NSDate*;NSDate*):BOOL">
				<signature>NSCalendar.-isDate:inSameDayAsDate:(NSDate*;NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDateInToday:" uniqueID="-isDateInToday:(NSDate*):BOOL">
				<signature>NSCalendar.-isDateInToday:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDateInTomorrow:" uniqueID="-isDateInTomorrow:(NSDate*):BOOL">
				<signature>NSCalendar.-isDateInTomorrow:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDateInWeekend:" uniqueID="-isDateInWeekend:(NSDate*):BOOL">
				<signature>NSCalendar.-isDateInWeekend:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDateInYesterday:" uniqueID="-isDateInYesterday:(NSDate*):BOOL">
				<signature>NSCalendar.-isDateInYesterday:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locale" uniqueID="-locale():NSLocale*">
				<signature>NSCalendar.-locale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-longEraSymbols" uniqueID="-longEraSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-longEraSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumRangeOfUnit:" uniqueID="-maximumRangeOfUnit:(NSCalendarUnit):NSRange">
				<signature>NSCalendar.-maximumRangeOfUnit:(NSCalendarUnit):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumDaysInFirstWeek" uniqueID="-minimumDaysInFirstWeek():NSUInteger">
				<signature>NSCalendar.-minimumDaysInFirstWeek():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumRangeOfUnit:" uniqueID="-minimumRangeOfUnit:(NSCalendarUnit):NSRange">
				<signature>NSCalendar.-minimumRangeOfUnit:(NSCalendarUnit):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-monthSymbols" uniqueID="-monthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-monthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextDateAfterDate:matchingComponents:options:" uniqueID="-nextDateAfterDate:matchingComponents:options:(NSDate*;NSDateComponents*;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-nextDateAfterDate:matchingComponents:options:(NSDate*;NSDateComponents*;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextDateAfterDate:matchingHour:minute:second:options:" uniqueID="-nextDateAfterDate:matchingHour:minute:second:options:(NSDate*;NSInteger;NSInteger;NSInteger;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-nextDateAfterDate:matchingHour:minute:second:options:(NSDate*;NSInteger;NSInteger;NSInteger;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextDateAfterDate:matchingUnit:value:options:" uniqueID="-nextDateAfterDate:matchingUnit:value:options:(NSDate*;NSCalendarUnit;NSInteger;NSCalendarOptions):NSDate*">
				<signature>NSCalendar.-nextDateAfterDate:matchingUnit:value:options:(NSDate*;NSCalendarUnit;NSInteger;NSCalendarOptions):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextWeekendStartDate:interval:options:afterDate:" uniqueID="-nextWeekendStartDate:interval:options:afterDate:(NSDate**;NSTimeInterval*;NSCalendarOptions;NSDate*):BOOL">
				<signature>NSCalendar.-nextWeekendStartDate:interval:options:afterDate:(NSDate**;NSTimeInterval*;NSCalendarOptions;NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ordinalityOfUnit:inUnit:forDate:" uniqueID="-ordinalityOfUnit:inUnit:forDate:(NSCalendarUnit;NSCalendarUnit;NSDate*):NSUInteger">
				<signature>NSCalendar.-ordinalityOfUnit:inUnit:forDate:(NSCalendarUnit;NSCalendarUnit;NSDate*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-quarterSymbols" uniqueID="-quarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-quarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfUnit:inUnit:forDate:" uniqueID="-rangeOfUnit:inUnit:forDate:(NSCalendarUnit;NSCalendarUnit;NSDate*):NSRange">
				<signature>NSCalendar.-rangeOfUnit:inUnit:forDate:(NSCalendarUnit;NSCalendarUnit;NSDate*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfUnit:startDate:interval:forDate:" uniqueID="-rangeOfUnit:startDate:interval:forDate:(NSCalendarUnit;NSDate**;NSTimeInterval*;NSDate*):BOOL">
				<signature>NSCalendar.-rangeOfUnit:startDate:interval:forDate:(NSCalendarUnit;NSDate**;NSTimeInterval*;NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfWeekendStartDate:interval:containingDate:" uniqueID="-rangeOfWeekendStartDate:interval:containingDate:(NSDate**;NSTimeInterval*;NSDate*):BOOL">
				<signature>NSCalendar.-rangeOfWeekendStartDate:interval:containingDate:(NSDate**;NSTimeInterval*;NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFirstWeekday:" uniqueID="-setFirstWeekday:(NSUInteger):void">
				<signature>NSCalendar.-setFirstWeekday:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLocale:" uniqueID="-setLocale:(NSLocale*):void">
				<signature>NSCalendar.-setLocale:(NSLocale*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumDaysInFirstWeek:" uniqueID="-setMinimumDaysInFirstWeek:(NSUInteger):void">
				<signature>NSCalendar.-setMinimumDaysInFirstWeek:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeZone:" uniqueID="-setTimeZone:(NSTimeZone*):void">
				<signature>NSCalendar.-setTimeZone:(NSTimeZone*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortMonthSymbols" uniqueID="-shortMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-shortMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortQuarterSymbols" uniqueID="-shortQuarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-shortQuarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortStandaloneMonthSymbols" uniqueID="-shortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-shortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortStandaloneQuarterSymbols" uniqueID="-shortStandaloneQuarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-shortStandaloneQuarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortStandaloneWeekdaySymbols" uniqueID="-shortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-shortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortWeekdaySymbols" uniqueID="-shortWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-shortWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standaloneMonthSymbols" uniqueID="-standaloneMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-standaloneMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standaloneQuarterSymbols" uniqueID="-standaloneQuarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-standaloneQuarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standaloneWeekdaySymbols" uniqueID="-standaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-standaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startOfDayForDate:" uniqueID="-startOfDayForDate:(NSDate*):NSDate*">
				<signature>NSCalendar.-startOfDayForDate:(NSDate*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeZone" uniqueID="-timeZone():NSTimeZone*">
				<signature>NSCalendar.-timeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortMonthSymbols" uniqueID="-veryShortMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-veryShortMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortStandaloneMonthSymbols" uniqueID="-veryShortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-veryShortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortStandaloneWeekdaySymbols" uniqueID="-veryShortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-veryShortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortWeekdaySymbols" uniqueID="-veryShortWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-veryShortWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-weekdaySymbols" uniqueID="-weekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSCalendar.-weekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="^(id;id):NSComparisonResult" uniqueID="^(id;id):NSComparisonResult">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;id):NSComparisonResult">
				<signature>^(id;id):NSComparisonResult.-block(id;id):NSComparisonResult</signature>
			</method>
		</class>
		<class name="NSString+NSStringExtensionMethods" uniqueID="NSString+NSStringExtensionMethods">
			<method accessibility="Public" methodKind="Member" name="-UTF8String" uniqueID="-UTF8String():const char*">
				<signature>NSString+NSStringExtensionMethods.-UTF8String():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-boolValue" uniqueID="-boolValue():BOOL">
				<signature>NSString+NSStringExtensionMethods.-boolValue():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cStringUsingEncoding:" uniqueID="-cStringUsingEncoding:(NSStringEncoding):const char*">
				<signature>NSString+NSStringExtensionMethods.-cStringUsingEncoding:(NSStringEncoding):const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canBeConvertedToEncoding:" uniqueID="-canBeConvertedToEncoding:(NSStringEncoding):BOOL">
				<signature>NSString+NSStringExtensionMethods.-canBeConvertedToEncoding:(NSStringEncoding):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-capitalizedString" uniqueID="-capitalizedString():NSString*">
				<signature>NSString+NSStringExtensionMethods.-capitalizedString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-capitalizedStringWithLocale:" uniqueID="-capitalizedStringWithLocale:(NSLocale*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-capitalizedStringWithLocale:(NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-caseInsensitiveCompare:" uniqueID="-caseInsensitiveCompare:(NSString*):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-caseInsensitiveCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-commonPrefixWithString:options:" uniqueID="-commonPrefixWithString:options:(NSString*;NSStringCompareOptions):NSString*">
				<signature>NSString+NSStringExtensionMethods.-commonPrefixWithString:options:(NSString*;NSStringCompareOptions):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:" uniqueID="-compare:(NSString*):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-compare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:options:" uniqueID="-compare:options:(NSString*;NSStringCompareOptions):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-compare:options:(NSString*;NSStringCompareOptions):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:options:range:" uniqueID="-compare:options:range:(NSString*;NSStringCompareOptions;NSRange):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-compare:options:range:(NSString*;NSStringCompareOptions;NSRange):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:options:range:locale:" uniqueID="-compare:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;id _Nullable):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-compare:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;id _Nullable):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsSeparatedByCharactersInSet:" uniqueID="-componentsSeparatedByCharactersInSet:(NSCharacterSet*):NSArray&lt;NSString *&gt;*">
				<signature>NSString+NSStringExtensionMethods.-componentsSeparatedByCharactersInSet:(NSCharacterSet*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsSeparatedByString:" uniqueID="-componentsSeparatedByString:(NSString*):NSArray&lt;NSString *&gt;*">
				<signature>NSString+NSStringExtensionMethods.-componentsSeparatedByString:(NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsString:" uniqueID="-containsString:(NSString*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-containsString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataUsingEncoding:" uniqueID="-dataUsingEncoding:(NSStringEncoding):NSData*">
				<signature>NSString+NSStringExtensionMethods.-dataUsingEncoding:(NSStringEncoding):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataUsingEncoding:allowLossyConversion:" uniqueID="-dataUsingEncoding:allowLossyConversion:(NSStringEncoding;BOOL):NSData*">
				<signature>NSString+NSStringExtensionMethods.-dataUsingEncoding:allowLossyConversion:(NSStringEncoding;BOOL):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decomposedStringWithCanonicalMapping" uniqueID="-decomposedStringWithCanonicalMapping():NSString*">
				<signature>NSString+NSStringExtensionMethods.-decomposedStringWithCanonicalMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decomposedStringWithCompatibilityMapping" uniqueID="-decomposedStringWithCompatibilityMapping():NSString*">
				<signature>NSString+NSStringExtensionMethods.-decomposedStringWithCompatibilityMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSString+NSStringExtensionMethods.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-doubleValue" uniqueID="-doubleValue():double">
				<signature>NSString+NSStringExtensionMethods.-doubleValue():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateLinesUsingBlock:" uniqueID="-enumerateLinesUsingBlock:((^)(NSString*;BOOL*):void):void">
				<signature>NSString+NSStringExtensionMethods.-enumerateLinesUsingBlock:((^)(NSString*;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateSubstringsInRange:options:usingBlock:" uniqueID="-enumerateSubstringsInRange:options:usingBlock:(NSRange;NSStringEnumerationOptions;(^)(NSString*;NSRange;NSRange;BOOL*):void):void">
				<signature>NSString+NSStringExtensionMethods.-enumerateSubstringsInRange:options:usingBlock:(NSRange;NSStringEnumerationOptions;(^)(NSString*;NSRange;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fastestEncoding" uniqueID="-fastestEncoding():NSStringEncoding">
				<signature>NSString+NSStringExtensionMethods.-fastestEncoding():NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-floatValue" uniqueID="-floatValue():float">
				<signature>NSString+NSStringExtensionMethods.-floatValue():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:maxLength:usedLength:encoding:options:range:remainingRange:" uniqueID="-getBytes:maxLength:usedLength:encoding:options:range:remainingRange:(void*;NSUInteger;NSUInteger*;NSStringEncoding;NSStringEncodingConversionOptions;NSRange;NSRange*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-getBytes:maxLength:usedLength:encoding:options:range:remainingRange:(void*;NSUInteger;NSUInteger*;NSStringEncoding;NSStringEncodingConversionOptions;NSRange;NSRange*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:maxLength:encoding:" uniqueID="-getCString:maxLength:encoding:(char*;NSUInteger;NSStringEncoding):BOOL">
				<signature>NSString+NSStringExtensionMethods.-getCString:maxLength:encoding:(char*;NSUInteger;NSStringEncoding):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCharacters:range:" uniqueID="-getCharacters:range:(unichar*;NSRange):void">
				<signature>NSString+NSStringExtensionMethods.-getCharacters:range:(unichar*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getLineStart:end:contentsEnd:forRange:" uniqueID="-getLineStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void">
				<signature>NSString+NSStringExtensionMethods.-getLineStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getParagraphStart:end:contentsEnd:forRange:" uniqueID="-getParagraphStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void">
				<signature>NSString+NSStringExtensionMethods.-getParagraphStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasPrefix:" uniqueID="-hasPrefix:(NSString*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-hasPrefix:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasSuffix:" uniqueID="-hasSuffix:(NSString*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-hasSuffix:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hash" uniqueID="-hash():NSUInteger">
				<signature>NSString+NSStringExtensionMethods.-hash():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytes:length:encoding:" uniqueID="-initWithBytes:length:encoding:(const void*;NSUInteger;NSStringEncoding):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithBytes:length:encoding:(const void*;NSUInteger;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:encoding:freeWhenDone:" uniqueID="-initWithBytesNoCopy:length:encoding:freeWhenDone:(void*;NSUInteger;NSStringEncoding;BOOL):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithBytesNoCopy:length:encoding:freeWhenDone:(void*;NSUInteger;NSStringEncoding;BOOL):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCString:encoding:" uniqueID="-initWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCharacters:length:" uniqueID="-initWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCharactersNoCopy:length:freeWhenDone:" uniqueID="-initWithCharactersNoCopy:length:freeWhenDone:(unichar*;NSUInteger;BOOL):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithCharactersNoCopy:length:freeWhenDone:(unichar*;NSUInteger;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:encoding:error:" uniqueID="-initWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:usedEncoding:error:" uniqueID="-initWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:encoding:error:" uniqueID="-initWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:usedEncoding:error:" uniqueID="-initWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:encoding:" uniqueID="-initWithData:encoding:(NSData*;NSStringEncoding):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithData:encoding:(NSData*;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:" uniqueID="-initWithFormat:(NSString*;...):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithFormat:(NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:arguments:" uniqueID="-initWithFormat:arguments:(NSString*;void*):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithFormat:arguments:(NSString*;void*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:locale:" uniqueID="-initWithFormat:locale:(NSString*;id _Nullable;...):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithFormat:locale:(NSString*;id _Nullable;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:locale:arguments:" uniqueID="-initWithFormat:locale:arguments:(NSString*;id _Nullable;void*):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithFormat:locale:arguments:(NSString*;id _Nullable;void*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:" uniqueID="-initWithString:(NSString*):instancetype _Nonnull">
				<signature>NSString+NSStringExtensionMethods.-initWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUTF8String:" uniqueID="-initWithUTF8String:(const char*):instancetype _Nullable">
				<signature>NSString+NSStringExtensionMethods.-initWithUTF8String:(const char*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intValue" uniqueID="-intValue():int">
				<signature>NSString+NSStringExtensionMethods.-intValue():int</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-integerValue" uniqueID="-integerValue():NSInteger">
				<signature>NSString+NSStringExtensionMethods.-integerValue():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToString:" uniqueID="-isEqualToString:(NSString*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-isEqualToString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lengthOfBytesUsingEncoding:" uniqueID="-lengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger">
				<signature>NSString+NSStringExtensionMethods.-lengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineRangeForRange:" uniqueID="-lineRangeForRange:(NSRange):NSRange">
				<signature>NSString+NSStringExtensionMethods.-lineRangeForRange:(NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCapitalizedString" uniqueID="-localizedCapitalizedString():NSString*">
				<signature>NSString+NSStringExtensionMethods.-localizedCapitalizedString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCaseInsensitiveCompare:" uniqueID="-localizedCaseInsensitiveCompare:(NSString*):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-localizedCaseInsensitiveCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCaseInsensitiveContainsString:" uniqueID="-localizedCaseInsensitiveContainsString:(NSString*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-localizedCaseInsensitiveContainsString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCompare:" uniqueID="-localizedCompare:(NSString*):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-localizedCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedLowercaseString" uniqueID="-localizedLowercaseString():NSString*">
				<signature>NSString+NSStringExtensionMethods.-localizedLowercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStandardCompare:" uniqueID="-localizedStandardCompare:(NSString*):NSComparisonResult">
				<signature>NSString+NSStringExtensionMethods.-localizedStandardCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStandardContainsString:" uniqueID="-localizedStandardContainsString:(NSString*):BOOL">
				<signature>NSString+NSStringExtensionMethods.-localizedStandardContainsString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStandardRangeOfString:" uniqueID="-localizedStandardRangeOfString:(NSString*):NSRange">
				<signature>NSString+NSStringExtensionMethods.-localizedStandardRangeOfString:(NSString*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedUppercaseString" uniqueID="-localizedUppercaseString():NSString*">
				<signature>NSString+NSStringExtensionMethods.-localizedUppercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-longLongValue" uniqueID="-longLongValue():long long">
				<signature>NSString+NSStringExtensionMethods.-longLongValue():long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lowercaseString" uniqueID="-lowercaseString():NSString*">
				<signature>NSString+NSStringExtensionMethods.-lowercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lowercaseStringWithLocale:" uniqueID="-lowercaseStringWithLocale:(NSLocale*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-lowercaseStringWithLocale:(NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumLengthOfBytesUsingEncoding:" uniqueID="-maximumLengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger">
				<signature>NSString+NSStringExtensionMethods.-maximumLengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-paragraphRangeForRange:" uniqueID="-paragraphRangeForRange:(NSRange):NSRange">
				<signature>NSString+NSStringExtensionMethods.-paragraphRangeForRange:(NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-precomposedStringWithCanonicalMapping" uniqueID="-precomposedStringWithCanonicalMapping():NSString*">
				<signature>NSString+NSStringExtensionMethods.-precomposedStringWithCanonicalMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-precomposedStringWithCompatibilityMapping" uniqueID="-precomposedStringWithCompatibilityMapping():NSString*">
				<signature>NSString+NSStringExtensionMethods.-precomposedStringWithCompatibilityMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfCharacterFromSet:" uniqueID="-rangeOfCharacterFromSet:(NSCharacterSet*):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfCharacterFromSet:(NSCharacterSet*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfCharacterFromSet:options:" uniqueID="-rangeOfCharacterFromSet:options:(NSCharacterSet*;NSStringCompareOptions):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfCharacterFromSet:options:(NSCharacterSet*;NSStringCompareOptions):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfCharacterFromSet:options:range:" uniqueID="-rangeOfCharacterFromSet:options:range:(NSCharacterSet*;NSStringCompareOptions;NSRange):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfCharacterFromSet:options:range:(NSCharacterSet*;NSStringCompareOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfComposedCharacterSequenceAtIndex:" uniqueID="-rangeOfComposedCharacterSequenceAtIndex:(NSUInteger):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfComposedCharacterSequenceAtIndex:(NSUInteger):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfComposedCharacterSequencesForRange:" uniqueID="-rangeOfComposedCharacterSequencesForRange:(NSRange):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfComposedCharacterSequencesForRange:(NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:" uniqueID="-rangeOfString:(NSString*):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfString:(NSString*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:options:" uniqueID="-rangeOfString:options:(NSString*;NSStringCompareOptions):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfString:options:(NSString*;NSStringCompareOptions):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:options:range:" uniqueID="-rangeOfString:options:range:(NSString*;NSStringCompareOptions;NSRange):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfString:options:range:(NSString*;NSStringCompareOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:options:range:locale:" uniqueID="-rangeOfString:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;NSLocale*):NSRange">
				<signature>NSString+NSStringExtensionMethods.-rangeOfString:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;NSLocale*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-smallestEncoding" uniqueID="-smallestEncoding():NSStringEncoding">
				<signature>NSString+NSStringExtensionMethods.-smallestEncoding():NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingFormat:" uniqueID="-stringByAppendingFormat:(NSString*;...):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByAppendingFormat:(NSString*;...):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingString:" uniqueID="-stringByAppendingString:(NSString*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByAppendingString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByApplyingTransform:reverse:" uniqueID="-stringByApplyingTransform:reverse:(NSString*;BOOL):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByApplyingTransform:reverse:(NSString*;BOOL):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByFoldingWithOptions:locale:" uniqueID="-stringByFoldingWithOptions:locale:(NSStringCompareOptions;NSLocale*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByFoldingWithOptions:locale:(NSStringCompareOptions;NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByPaddingToLength:withString:startingAtIndex:" uniqueID="-stringByPaddingToLength:withString:startingAtIndex:(NSUInteger;NSString*;NSUInteger):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByPaddingToLength:withString:startingAtIndex:(NSUInteger;NSString*;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingCharactersInRange:withString:" uniqueID="-stringByReplacingCharactersInRange:withString:(NSRange;NSString*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByReplacingCharactersInRange:withString:(NSRange;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingOccurrencesOfString:withString:" uniqueID="-stringByReplacingOccurrencesOfString:withString:(NSString*;NSString*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByReplacingOccurrencesOfString:withString:(NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingOccurrencesOfString:withString:options:range:" uniqueID="-stringByReplacingOccurrencesOfString:withString:options:range:(NSString*;NSString*;NSStringCompareOptions;NSRange):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByReplacingOccurrencesOfString:withString:options:range:(NSString*;NSString*;NSStringCompareOptions;NSRange):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByTrimmingCharactersInSet:" uniqueID="-stringByTrimmingCharactersInSet:(NSCharacterSet*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-stringByTrimmingCharactersInSet:(NSCharacterSet*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-substringFromIndex:" uniqueID="-substringFromIndex:(NSUInteger):NSString*">
				<signature>NSString+NSStringExtensionMethods.-substringFromIndex:(NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-substringToIndex:" uniqueID="-substringToIndex:(NSUInteger):NSString*">
				<signature>NSString+NSStringExtensionMethods.-substringToIndex:(NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-substringWithRange:" uniqueID="-substringWithRange:(NSRange):NSString*">
				<signature>NSString+NSStringExtensionMethods.-substringWithRange:(NSRange):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uppercaseString" uniqueID="-uppercaseString():NSString*">
				<signature>NSString+NSStringExtensionMethods.-uppercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uppercaseStringWithLocale:" uniqueID="-uppercaseStringWithLocale:(NSLocale*):NSString*">
				<signature>NSString+NSStringExtensionMethods.-uppercaseStringWithLocale:(NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:encoding:error:" uniqueID="-writeToFile:atomically:encoding:error:(NSString*;BOOL;NSStringEncoding;NSError**):BOOL">
				<signature>NSString+NSStringExtensionMethods.-writeToFile:atomically:encoding:error:(NSString*;BOOL;NSStringEncoding;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:encoding:error:" uniqueID="-writeToURL:atomically:encoding:error:(NSURL*;BOOL;NSStringEncoding;NSError**):BOOL">
				<signature>NSString+NSStringExtensionMethods.-writeToURL:atomically:encoding:error:(NSURL*;BOOL;NSStringEncoding;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="UIView+UITextField" uniqueID="UIView+UITextField">
			<method accessibility="Public" methodKind="Member" name="-endEditing:" uniqueID="-endEditing:(BOOL):BOOL">
				<signature>UIView+UITextField.-endEditing:(BOOL):BOOL</signature>
			</method>
		</class>
		<class name="UIView" uniqueID="UIView">
			<method accessibility="Public" methodKind="Member" name="-addConstraint:" uniqueID="-addConstraint:(NSLayoutConstraint*):void">
				<signature>UIView.-addConstraint:(NSLayoutConstraint*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addConstraints:" uniqueID="-addConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void">
				<signature>UIView.-addConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addGestureRecognizer:" uniqueID="-addGestureRecognizer:(UIGestureRecognizer*):void">
				<signature>UIView.-addGestureRecognizer:(UIGestureRecognizer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addLayoutGuide:" uniqueID="-addLayoutGuide:(UILayoutGuide*):void">
				<signature>UIView.-addLayoutGuide:(UILayoutGuide*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addMotionEffect:" uniqueID="-addMotionEffect:(UIMotionEffect*):void">
				<signature>UIView.-addMotionEffect:(UIMotionEffect*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addSubview:" uniqueID="-addSubview:(UIView*):void">
				<signature>UIView.-addSubview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alignmentRectForFrame:" uniqueID="-alignmentRectForFrame:(CGRect):CGRect">
				<signature>UIView.-alignmentRectForFrame:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alignmentRectInsets" uniqueID="-alignmentRectInsets():UIEdgeInsets">
				<signature>UIView.-alignmentRectInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alpha" uniqueID="-alpha():CGFloat">
				<signature>UIView.-alpha():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-autoresizesSubviews" uniqueID="-autoresizesSubviews():BOOL">
				<signature>UIView.-autoresizesSubviews():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-autoresizingMask" uniqueID="-autoresizingMask():UIViewAutoresizing">
				<signature>UIView.-autoresizingMask():UIViewAutoresizing</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundColor" uniqueID="-backgroundColor():UIColor*">
				<signature>UIView.-backgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bottomAnchor" uniqueID="-bottomAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView.-bottomAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bounds" uniqueID="-bounds():CGRect">
				<signature>UIView.-bounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bringSubviewToFront:" uniqueID="-bringSubviewToFront:(UIView*):void">
				<signature>UIView.-bringSubviewToFront:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canBecomeFocused" uniqueID="-canBecomeFocused():BOOL">
				<signature>UIView.-canBecomeFocused():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-center" uniqueID="-center():CGPoint">
				<signature>UIView.-center():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerXAnchor" uniqueID="-centerXAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView.-centerXAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerYAnchor" uniqueID="-centerYAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView.-centerYAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearsContextBeforeDrawing" uniqueID="-clearsContextBeforeDrawing():BOOL">
				<signature>UIView.-clearsContextBeforeDrawing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clipsToBounds" uniqueID="-clipsToBounds():BOOL">
				<signature>UIView.-clipsToBounds():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraints" uniqueID="-constraints():NSArray&lt;__kindof NSLayoutConstraint *&gt;*">
				<signature>UIView.-constraints():NSArray&lt;__kindof NSLayoutConstraint *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintsAffectingLayoutForAxis:" uniqueID="-constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis):NSArray&lt;__kindof NSLayoutConstraint *&gt;*">
				<signature>UIView.-constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis):NSArray&lt;__kindof NSLayoutConstraint *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentCompressionResistancePriorityForAxis:" uniqueID="-contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority">
				<signature>UIView.-contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentHuggingPriorityForAxis:" uniqueID="-contentHuggingPriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority">
				<signature>UIView.-contentHuggingPriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentMode" uniqueID="-contentMode():UIViewContentMode">
				<signature>UIView.-contentMode():UIViewContentMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentScaleFactor" uniqueID="-contentScaleFactor():CGFloat">
				<signature>UIView.-contentScaleFactor():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentStretch" uniqueID="-contentStretch():CGRect">
				<signature>UIView.-contentStretch():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:fromView:" uniqueID="-convertPoint:fromView:(CGPoint;UIView*):CGPoint">
				<signature>UIView.-convertPoint:fromView:(CGPoint;UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:toView:" uniqueID="-convertPoint:toView:(CGPoint;UIView*):CGPoint">
				<signature>UIView.-convertPoint:toView:(CGPoint;UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:fromView:" uniqueID="-convertRect:fromView:(CGRect;UIView*):CGRect">
				<signature>UIView.-convertRect:fromView:(CGRect;UIView*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:toView:" uniqueID="-convertRect:toView:(CGRect;UIView*):CGRect">
				<signature>UIView.-convertRect:toView:(CGRect;UIView*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decodeRestorableStateWithCoder:" uniqueID="-decodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIView.-decodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didAddSubview:" uniqueID="-didAddSubview:(UIView*):void">
				<signature>UIView.-didAddSubview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didMoveToSuperview" uniqueID="-didMoveToSuperview():void">
				<signature>UIView.-didMoveToSuperview():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didMoveToWindow" uniqueID="-didMoveToWindow():void">
				<signature>UIView.-didMoveToWindow():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawRect:" uniqueID="-drawRect:(CGRect):void">
				<signature>UIView.-drawRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawRect:forViewPrintFormatter:" uniqueID="-drawRect:forViewPrintFormatter:(CGRect;UIViewPrintFormatter*):void">
				<signature>UIView.-drawRect:forViewPrintFormatter:(CGRect;UIViewPrintFormatter*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawViewHierarchyInRect:afterScreenUpdates:" uniqueID="-drawViewHierarchyInRect:afterScreenUpdates:(CGRect;BOOL):BOOL">
				<signature>UIView.-drawViewHierarchyInRect:afterScreenUpdates:(CGRect;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-encodeRestorableStateWithCoder:" uniqueID="-encodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIView.-encodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endEditing:" uniqueID="-endEditing:(BOOL):BOOL">
				<signature>UIView.-endEditing:(BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeSubviewAtIndex:withSubviewAtIndex:" uniqueID="-exchangeSubviewAtIndex:withSubviewAtIndex:(NSInteger;NSInteger):void">
				<signature>UIView.-exchangeSubviewAtIndex:withSubviewAtIndex:(NSInteger;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exerciseAmbiguityInLayout" uniqueID="-exerciseAmbiguityInLayout():void">
				<signature>UIView.-exerciseAmbiguityInLayout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstBaselineAnchor" uniqueID="-firstBaselineAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView.-firstBaselineAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-frame" uniqueID="-frame():CGRect">
				<signature>UIView.-frame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-frameForAlignmentRect:" uniqueID="-frameForAlignmentRect:(CGRect):CGRect">
				<signature>UIView.-frameForAlignmentRect:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizerShouldBegin:" uniqueID="-gestureRecognizerShouldBegin:(UIGestureRecognizer*):BOOL">
				<signature>UIView.-gestureRecognizerShouldBegin:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizers" uniqueID="-gestureRecognizers():NSArray&lt;__kindof UIGestureRecognizer *&gt;*">
				<signature>UIView.-gestureRecognizers():NSArray&lt;__kindof UIGestureRecognizer *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasAmbiguousLayout" uniqueID="-hasAmbiguousLayout():BOOL">
				<signature>UIView.-hasAmbiguousLayout():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heightAnchor" uniqueID="-heightAnchor():NSLayoutDimension*">
				<signature>UIView.-heightAnchor():NSLayoutDimension*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hitTest:withEvent:" uniqueID="-hitTest:withEvent:(CGPoint;UIEvent*):UIView*">
				<signature>UIView.-hitTest:withEvent:(CGPoint;UIEvent*):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UIView.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFrame:" uniqueID="-initWithFrame:(CGRect):instancetype _Nonnull">
				<signature>UIView.-initWithFrame:(CGRect):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSubview:aboveSubview:" uniqueID="-insertSubview:aboveSubview:(UIView*;UIView*):void">
				<signature>UIView.-insertSubview:aboveSubview:(UIView*;UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSubview:atIndex:" uniqueID="-insertSubview:atIndex:(UIView*;NSInteger):void">
				<signature>UIView.-insertSubview:atIndex:(UIView*;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSubview:belowSubview:" uniqueID="-insertSubview:belowSubview:(UIView*;UIView*):void">
				<signature>UIView.-insertSubview:belowSubview:(UIView*;UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intrinsicContentSize" uniqueID="-intrinsicContentSize():CGSize">
				<signature>UIView.-intrinsicContentSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateIntrinsicContentSize" uniqueID="-invalidateIntrinsicContentSize():void">
				<signature>UIView.-invalidateIntrinsicContentSize():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDescendantOfView:" uniqueID="-isDescendantOfView:(UIView*):BOOL">
				<signature>UIView.-isDescendantOfView:(UIView*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isExclusiveTouch" uniqueID="-isExclusiveTouch():BOOL">
				<signature>UIView.-isExclusiveTouch():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isFocused" uniqueID="-isFocused():BOOL">
				<signature>UIView.-isFocused():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHidden" uniqueID="-isHidden():BOOL">
				<signature>UIView.-isHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMultipleTouchEnabled" uniqueID="-isMultipleTouchEnabled():BOOL">
				<signature>UIView.-isMultipleTouchEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isOpaque" uniqueID="-isOpaque():BOOL">
				<signature>UIView.-isOpaque():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUserInteractionEnabled" uniqueID="-isUserInteractionEnabled():BOOL">
				<signature>UIView.-isUserInteractionEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastBaselineAnchor" uniqueID="-lastBaselineAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView.-lastBaselineAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layer" uniqueID="-layer():CALayer*">
				<signature>UIView.-layer():CALayer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutGuides" uniqueID="-layoutGuides():NSArray&lt;__kindof UILayoutGuide *&gt;*">
				<signature>UIView.-layoutGuides():NSArray&lt;__kindof UILayoutGuide *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutIfNeeded" uniqueID="-layoutIfNeeded():void">
				<signature>UIView.-layoutIfNeeded():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutMargins" uniqueID="-layoutMargins():UIEdgeInsets">
				<signature>UIView.-layoutMargins():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutMarginsDidChange" uniqueID="-layoutMarginsDidChange():void">
				<signature>UIView.-layoutMarginsDidChange():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutMarginsGuide" uniqueID="-layoutMarginsGuide():UILayoutGuide*">
				<signature>UIView.-layoutMarginsGuide():UILayoutGuide*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutSubviews" uniqueID="-layoutSubviews():void">
				<signature>UIView.-layoutSubviews():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leadingAnchor" uniqueID="-leadingAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView.-leadingAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftAnchor" uniqueID="-leftAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView.-leftAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maskView" uniqueID="-maskView():UIView*">
				<signature>UIView.-maskView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-motionEffects" uniqueID="-motionEffects():NSArray&lt;__kindof UIMotionEffect *&gt;*">
				<signature>UIView.-motionEffects():NSArray&lt;__kindof UIMotionEffect *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-needsUpdateConstraints" uniqueID="-needsUpdateConstraints():BOOL">
				<signature>UIView.-needsUpdateConstraints():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pointInside:withEvent:" uniqueID="-pointInside:withEvent:(CGPoint;UIEvent*):BOOL">
				<signature>UIView.-pointInside:withEvent:(CGPoint;UIEvent*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preservesSuperviewLayoutMargins" uniqueID="-preservesSuperviewLayoutMargins():BOOL">
				<signature>UIView.-preservesSuperviewLayoutMargins():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readableContentGuide" uniqueID="-readableContentGuide():UILayoutGuide*">
				<signature>UIView.-readableContentGuide():UILayoutGuide*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeConstraint:" uniqueID="-removeConstraint:(NSLayoutConstraint*):void">
				<signature>UIView.-removeConstraint:(NSLayoutConstraint*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeConstraints:" uniqueID="-removeConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void">
				<signature>UIView.-removeConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeFromSuperview" uniqueID="-removeFromSuperview():void">
				<signature>UIView.-removeFromSuperview():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeGestureRecognizer:" uniqueID="-removeGestureRecognizer:(UIGestureRecognizer*):void">
				<signature>UIView.-removeGestureRecognizer:(UIGestureRecognizer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeLayoutGuide:" uniqueID="-removeLayoutGuide:(UILayoutGuide*):void">
				<signature>UIView.-removeLayoutGuide:(UILayoutGuide*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeMotionEffect:" uniqueID="-removeMotionEffect:(UIMotionEffect*):void">
				<signature>UIView.-removeMotionEffect:(UIMotionEffect*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:" uniqueID="-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:(CGRect;BOOL;UIEdgeInsets):UIView*">
				<signature>UIView.-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:(CGRect;BOOL;UIEdgeInsets):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationIdentifier" uniqueID="-restorationIdentifier():NSString*">
				<signature>UIView.-restorationIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rightAnchor" uniqueID="-rightAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView.-rightAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-semanticContentAttribute" uniqueID="-semanticContentAttribute():UISemanticContentAttribute">
				<signature>UIView.-semanticContentAttribute():UISemanticContentAttribute</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendSubviewToBack:" uniqueID="-sendSubviewToBack:(UIView*):void">
				<signature>UIView.-sendSubviewToBack:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAlpha:" uniqueID="-setAlpha:(CGFloat):void">
				<signature>UIView.-setAlpha:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutoresizesSubviews:" uniqueID="-setAutoresizesSubviews:(BOOL):void">
				<signature>UIView.-setAutoresizesSubviews:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutoresizingMask:" uniqueID="-setAutoresizingMask:(UIViewAutoresizing):void">
				<signature>UIView.-setAutoresizingMask:(UIViewAutoresizing):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundColor:" uniqueID="-setBackgroundColor:(UIColor*):void">
				<signature>UIView.-setBackgroundColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBounds:" uniqueID="-setBounds:(CGRect):void">
				<signature>UIView.-setBounds:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenter:" uniqueID="-setCenter:(CGPoint):void">
				<signature>UIView.-setCenter:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearsContextBeforeDrawing:" uniqueID="-setClearsContextBeforeDrawing:(BOOL):void">
				<signature>UIView.-setClearsContextBeforeDrawing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClipsToBounds:" uniqueID="-setClipsToBounds:(BOOL):void">
				<signature>UIView.-setClipsToBounds:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentCompressionResistancePriority:forAxis:" uniqueID="-setContentCompressionResistancePriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void">
				<signature>UIView.-setContentCompressionResistancePriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentHuggingPriority:forAxis:" uniqueID="-setContentHuggingPriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void">
				<signature>UIView.-setContentHuggingPriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentMode:" uniqueID="-setContentMode:(UIViewContentMode):void">
				<signature>UIView.-setContentMode:(UIViewContentMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentScaleFactor:" uniqueID="-setContentScaleFactor:(CGFloat):void">
				<signature>UIView.-setContentScaleFactor:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentStretch:" uniqueID="-setContentStretch:(CGRect):void">
				<signature>UIView.-setContentStretch:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setExclusiveTouch:" uniqueID="-setExclusiveTouch:(BOOL):void">
				<signature>UIView.-setExclusiveTouch:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFrame:" uniqueID="-setFrame:(CGRect):void">
				<signature>UIView.-setFrame:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGestureRecognizers:" uniqueID="-setGestureRecognizers:(NSArray&lt;__kindof UIGestureRecognizer *&gt;*):void">
				<signature>UIView.-setGestureRecognizers:(NSArray&lt;__kindof UIGestureRecognizer *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidden:" uniqueID="-setHidden:(BOOL):void">
				<signature>UIView.-setHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLayoutMargins:" uniqueID="-setLayoutMargins:(UIEdgeInsets):void">
				<signature>UIView.-setLayoutMargins:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaskView:" uniqueID="-setMaskView:(UIView*):void">
				<signature>UIView.-setMaskView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMotionEffects:" uniqueID="-setMotionEffects:(NSArray&lt;__kindof UIMotionEffect *&gt;*):void">
				<signature>UIView.-setMotionEffects:(NSArray&lt;__kindof UIMotionEffect *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMultipleTouchEnabled:" uniqueID="-setMultipleTouchEnabled:(BOOL):void">
				<signature>UIView.-setMultipleTouchEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplay" uniqueID="-setNeedsDisplay():void">
				<signature>UIView.-setNeedsDisplay():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplayInRect:" uniqueID="-setNeedsDisplayInRect:(CGRect):void">
				<signature>UIView.-setNeedsDisplayInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsLayout" uniqueID="-setNeedsLayout():void">
				<signature>UIView.-setNeedsLayout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsUpdateConstraints" uniqueID="-setNeedsUpdateConstraints():void">
				<signature>UIView.-setNeedsUpdateConstraints():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOpaque:" uniqueID="-setOpaque:(BOOL):void">
				<signature>UIView.-setOpaque:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreservesSuperviewLayoutMargins:" uniqueID="-setPreservesSuperviewLayoutMargins:(BOOL):void">
				<signature>UIView.-setPreservesSuperviewLayoutMargins:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRestorationIdentifier:" uniqueID="-setRestorationIdentifier:(NSString*):void">
				<signature>UIView.-setRestorationIdentifier:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSemanticContentAttribute:" uniqueID="-setSemanticContentAttribute:(UISemanticContentAttribute):void">
				<signature>UIView.-setSemanticContentAttribute:(UISemanticContentAttribute):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTag:" uniqueID="-setTag:(NSInteger):void">
				<signature>UIView.-setTag:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintAdjustmentMode:" uniqueID="-setTintAdjustmentMode:(UIViewTintAdjustmentMode):void">
				<signature>UIView.-setTintAdjustmentMode:(UIViewTintAdjustmentMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintColor:" uniqueID="-setTintColor:(UIColor*):void">
				<signature>UIView.-setTintColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTransform:" uniqueID="-setTransform:(CGAffineTransform):void">
				<signature>UIView.-setTransform:(CGAffineTransform):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTranslatesAutoresizingMaskIntoConstraints:" uniqueID="-setTranslatesAutoresizingMaskIntoConstraints:(BOOL):void">
				<signature>UIView.-setTranslatesAutoresizingMaskIntoConstraints:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserInteractionEnabled:" uniqueID="-setUserInteractionEnabled:(BOOL):void">
				<signature>UIView.-setUserInteractionEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeThatFits:" uniqueID="-sizeThatFits:(CGSize):CGSize">
				<signature>UIView.-sizeThatFits:(CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeToFit" uniqueID="-sizeToFit():void">
				<signature>UIView.-sizeToFit():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-snapshotViewAfterScreenUpdates:" uniqueID="-snapshotViewAfterScreenUpdates:(BOOL):UIView*">
				<signature>UIView.-snapshotViewAfterScreenUpdates:(BOOL):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subviews" uniqueID="-subviews():NSArray&lt;__kindof UIView *&gt;*">
				<signature>UIView.-subviews():NSArray&lt;__kindof UIView *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-superview" uniqueID="-superview():UIView*">
				<signature>UIView.-superview():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-systemLayoutSizeFittingSize:" uniqueID="-systemLayoutSizeFittingSize:(CGSize):CGSize">
				<signature>UIView.-systemLayoutSizeFittingSize:(CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:" uniqueID="-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:(CGSize;UILayoutPriority;UILayoutPriority):CGSize">
				<signature>UIView.-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:(CGSize;UILayoutPriority;UILayoutPriority):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tag" uniqueID="-tag():NSInteger">
				<signature>UIView.-tag():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintAdjustmentMode" uniqueID="-tintAdjustmentMode():UIViewTintAdjustmentMode">
				<signature>UIView.-tintAdjustmentMode():UIViewTintAdjustmentMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColor" uniqueID="-tintColor():UIColor*">
				<signature>UIView.-tintColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColorDidChange" uniqueID="-tintColorDidChange():void">
				<signature>UIView.-tintColorDidChange():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topAnchor" uniqueID="-topAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView.-topAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-trailingAnchor" uniqueID="-trailingAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView.-trailingAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transform" uniqueID="-transform():CGAffineTransform">
				<signature>UIView.-transform():CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-translatesAutoresizingMaskIntoConstraints" uniqueID="-translatesAutoresizingMaskIntoConstraints():BOOL">
				<signature>UIView.-translatesAutoresizingMaskIntoConstraints():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateConstraints" uniqueID="-updateConstraints():void">
				<signature>UIView.-updateConstraints():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateConstraintsIfNeeded" uniqueID="-updateConstraintsIfNeeded():void">
				<signature>UIView.-updateConstraintsIfNeeded():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForBaselineLayout" uniqueID="-viewForBaselineLayout():UIView*">
				<signature>UIView.-viewForBaselineLayout():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForFirstBaselineLayout" uniqueID="-viewForFirstBaselineLayout():UIView*">
				<signature>UIView.-viewForFirstBaselineLayout():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForLastBaselineLayout" uniqueID="-viewForLastBaselineLayout():UIView*">
				<signature>UIView.-viewForLastBaselineLayout():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewPrintFormatter" uniqueID="-viewPrintFormatter():UIViewPrintFormatter*">
				<signature>UIView.-viewPrintFormatter():UIViewPrintFormatter*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWithTag:" uniqueID="-viewWithTag:(NSInteger):__kindof UIView*">
				<signature>UIView.-viewWithTag:(NSInteger):__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-widthAnchor" uniqueID="-widthAnchor():NSLayoutDimension*">
				<signature>UIView.-widthAnchor():NSLayoutDimension*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willMoveToSuperview:" uniqueID="-willMoveToSuperview:(UIView*):void">
				<signature>UIView.-willMoveToSuperview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willMoveToWindow:" uniqueID="-willMoveToWindow:(UIWindow*):void">
				<signature>UIView.-willMoveToWindow:(UIWindow*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willRemoveSubview:" uniqueID="-willRemoveSubview:(UIView*):void">
				<signature>UIView.-willRemoveSubview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-window" uniqueID="-window():UIWindow*">
				<signature>UIView.-window():UIWindow*</signature>
			</method>
		</class>
		<class name="NSBundle+NSBundleResourceRequestAdditions" uniqueID="NSBundle+NSBundleResourceRequestAdditions">
			<method accessibility="Public" methodKind="Member" name="-preservationPriorityForTag:" uniqueID="-preservationPriorityForTag:(NSString*):double">
				<signature>NSBundle+NSBundleResourceRequestAdditions.-preservationPriorityForTag:(NSString*):double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreservationPriority:forTags:" uniqueID="-setPreservationPriority:forTags:(double;NSSet&lt;NSString *&gt;*):void">
				<signature>NSBundle+NSBundleResourceRequestAdditions.-setPreservationPriority:forTags:(double;NSSet&lt;NSString *&gt;*):void</signature>
			</method>
		</class>
		<class name="NSValue+CATransform3DAdditions" uniqueID="NSValue+CATransform3DAdditions">
			<method accessibility="Public" methodKind="Member" name="-CATransform3DValue" uniqueID="-CATransform3DValue():CATransform3D">
				<signature>NSValue+CATransform3DAdditions.-CATransform3DValue():CATransform3D</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSExtendedStringDrawing" uniqueID="NSAttributedString+NSExtendedStringDrawing">
			<method accessibility="Public" methodKind="Member" name="-boundingRectWithSize:options:context:" uniqueID="-boundingRectWithSize:options:context:(CGSize;NSStringDrawingOptions;NSStringDrawingContext*):CGRect">
				<signature>NSAttributedString+NSExtendedStringDrawing.-boundingRectWithSize:options:context:(CGSize;NSStringDrawingOptions;NSStringDrawingContext*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawWithRect:options:context:" uniqueID="-drawWithRect:options:context:(CGRect;NSStringDrawingOptions;NSStringDrawingContext*):void">
				<signature>NSAttributedString+NSExtendedStringDrawing.-drawWithRect:options:context:(CGRect;NSStringDrawingOptions;NSStringDrawingContext*):void</signature>
			</method>
		</class>
		<class name="^(id;id;char*):void" uniqueID="^(id;id;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;id;char*):void">
				<signature>^(id;id;char*):void.-block(id;id;char*):void</signature>
			</method>
		</class>
		<class name="AVAudioSessionDataSourceDescription" uniqueID="AVAudioSessionDataSourceDescription">
			<method accessibility="Public" methodKind="Member" name="-dataSourceID" uniqueID="-dataSourceID():NSNumber*">
				<signature>AVAudioSessionDataSourceDescription.-dataSourceID():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataSourceName" uniqueID="-dataSourceName():NSString*">
				<signature>AVAudioSessionDataSourceDescription.-dataSourceName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-location" uniqueID="-location():NSString*">
				<signature>AVAudioSessionDataSourceDescription.-location():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-orientation" uniqueID="-orientation():NSString*">
				<signature>AVAudioSessionDataSourceDescription.-orientation():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredPolarPattern" uniqueID="-preferredPolarPattern():NSString*">
				<signature>AVAudioSessionDataSourceDescription.-preferredPolarPattern():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedPolarPattern" uniqueID="-selectedPolarPattern():NSString*">
				<signature>AVAudioSessionDataSourceDescription.-selectedPolarPattern():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredPolarPattern:error:" uniqueID="-setPreferredPolarPattern:error:(NSString*;NSError**):BOOL">
				<signature>AVAudioSessionDataSourceDescription.-setPreferredPolarPattern:error:(NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportedPolarPatterns" uniqueID="-supportedPolarPatterns():NSArray&lt;NSString *&gt;*">
				<signature>AVAudioSessionDataSourceDescription.-supportedPolarPatterns():NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="NSArray+NSPredicateSupport" uniqueID="NSArray+NSPredicateSupport">
			<method accessibility="Public" methodKind="Member" name="-filteredArrayUsingPredicate:" uniqueID="-filteredArrayUsingPredicate:(NSPredicate*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSPredicateSupport.-filteredArrayUsingPredicate:(NSPredicate*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="UIApplication+UIApplicationDeprecated" uniqueID="UIApplication+UIApplicationDeprecated">
			<method accessibility="Public" methodKind="Member" name="-clearKeepAliveTimeout" uniqueID="-clearKeepAliveTimeout():void">
				<signature>UIApplication+UIApplicationDeprecated.-clearKeepAliveTimeout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isProximitySensingEnabled" uniqueID="-isProximitySensingEnabled():BOOL">
				<signature>UIApplication+UIApplicationDeprecated.-isProximitySensingEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isStatusBarHidden" uniqueID="-isStatusBarHidden():BOOL">
				<signature>UIApplication+UIApplicationDeprecated.-isStatusBarHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setKeepAliveTimeout:handler:" uniqueID="-setKeepAliveTimeout:handler:(NSTimeInterval;(^)():void):BOOL">
				<signature>UIApplication+UIApplicationDeprecated.-setKeepAliveTimeout:handler:(NSTimeInterval;(^)():void):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setProximitySensingEnabled:" uniqueID="-setProximitySensingEnabled:(BOOL):void">
				<signature>UIApplication+UIApplicationDeprecated.-setProximitySensingEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarHidden:" uniqueID="-setStatusBarHidden:(BOOL):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarHidden:animated:" uniqueID="-setStatusBarHidden:animated:(BOOL;BOOL):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarHidden:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarHidden:withAnimation:" uniqueID="-setStatusBarHidden:withAnimation:(BOOL;UIStatusBarAnimation):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarHidden:withAnimation:(BOOL;UIStatusBarAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarOrientation:" uniqueID="-setStatusBarOrientation:(UIInterfaceOrientation):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarOrientation:(UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarOrientation:animated:" uniqueID="-setStatusBarOrientation:animated:(UIInterfaceOrientation;BOOL):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarOrientation:animated:(UIInterfaceOrientation;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarStyle:" uniqueID="-setStatusBarStyle:(UIStatusBarStyle):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarStyle:(UIStatusBarStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarStyle:animated:" uniqueID="-setStatusBarStyle:animated:(UIStatusBarStyle;BOOL):void">
				<signature>UIApplication+UIApplicationDeprecated.-setStatusBarStyle:animated:(UIStatusBarStyle;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusBarOrientation" uniqueID="-statusBarOrientation():UIInterfaceOrientation">
				<signature>UIApplication+UIApplicationDeprecated.-statusBarOrientation():UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusBarStyle" uniqueID="-statusBarStyle():UIStatusBarStyle">
				<signature>UIApplication+UIApplicationDeprecated.-statusBarStyle():UIStatusBarStyle</signature>
			</method>
		</class>
		<class name="NSArray+NSKeyValueObserverRegistration" uniqueID="NSArray+NSKeyValueObserverRegistration">
			<method accessibility="Public" methodKind="Member" name="-addObserver:forKeyPath:options:context:" uniqueID="-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSArray+NSKeyValueObserverRegistration.-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addObserver:toObjectsAtIndexes:forKeyPath:options:context:" uniqueID="-addObserver:toObjectsAtIndexes:forKeyPath:options:context:(NSObject*;NSIndexSet*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSArray+NSKeyValueObserverRegistration.-addObserver:toObjectsAtIndexes:forKeyPath:options:context:(NSObject*;NSIndexSet*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:" uniqueID="-removeObserver:forKeyPath:(NSObject*;NSString*):void">
				<signature>NSArray+NSKeyValueObserverRegistration.-removeObserver:forKeyPath:(NSObject*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:context:" uniqueID="-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void">
				<signature>NSArray+NSKeyValueObserverRegistration.-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:fromObjectsAtIndexes:forKeyPath:" uniqueID="-removeObserver:fromObjectsAtIndexes:forKeyPath:(NSObject*;NSIndexSet*;NSString*):void">
				<signature>NSArray+NSKeyValueObserverRegistration.-removeObserver:fromObjectsAtIndexes:forKeyPath:(NSObject*;NSIndexSet*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:fromObjectsAtIndexes:forKeyPath:context:" uniqueID="-removeObserver:fromObjectsAtIndexes:forKeyPath:context:(NSObject*;NSIndexSet*;NSString*;void*):void">
				<signature>NSArray+NSKeyValueObserverRegistration.-removeObserver:fromObjectsAtIndexes:forKeyPath:context:(NSObject*;NSIndexSet*;NSString*;void*):void</signature>
			</method>
		</class>
		<class name="^(id;unsigned int;char*):void" uniqueID="^(id;unsigned int;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;unsigned int;char*):void">
				<signature>^(id;unsigned int;char*):void.-block(id;unsigned int;char*):void</signature>
			</method>
		</class>
		<class name="NSUndoManager" uniqueID="NSUndoManager">
			<method accessibility="Public" methodKind="Member" name="-beginUndoGrouping" uniqueID="-beginUndoGrouping():void">
				<signature>NSUndoManager.-beginUndoGrouping():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canRedo" uniqueID="-canRedo():BOOL">
				<signature>NSUndoManager.-canRedo():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canUndo" uniqueID="-canUndo():BOOL">
				<signature>NSUndoManager.-canUndo():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-disableUndoRegistration" uniqueID="-disableUndoRegistration():void">
				<signature>NSUndoManager.-disableUndoRegistration():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enableUndoRegistration" uniqueID="-enableUndoRegistration():void">
				<signature>NSUndoManager.-enableUndoRegistration():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endUndoGrouping" uniqueID="-endUndoGrouping():void">
				<signature>NSUndoManager.-endUndoGrouping():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-groupingLevel" uniqueID="-groupingLevel():NSInteger">
				<signature>NSUndoManager.-groupingLevel():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-groupsByEvent" uniqueID="-groupsByEvent():BOOL">
				<signature>NSUndoManager.-groupsByEvent():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isRedoing" uniqueID="-isRedoing():BOOL">
				<signature>NSUndoManager.-isRedoing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUndoRegistrationEnabled" uniqueID="-isUndoRegistrationEnabled():BOOL">
				<signature>NSUndoManager.-isUndoRegistrationEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUndoing" uniqueID="-isUndoing():BOOL">
				<signature>NSUndoManager.-isUndoing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-levelsOfUndo" uniqueID="-levelsOfUndo():NSUInteger">
				<signature>NSUndoManager.-levelsOfUndo():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareWithInvocationTarget:" uniqueID="-prepareWithInvocationTarget:(id _Nonnull):id _Nonnull">
				<signature>NSUndoManager.-prepareWithInvocationTarget:(id _Nonnull):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-redo" uniqueID="-redo():void">
				<signature>NSUndoManager.-redo():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-redoActionIsDiscardable" uniqueID="-redoActionIsDiscardable():BOOL">
				<signature>NSUndoManager.-redoActionIsDiscardable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-redoActionName" uniqueID="-redoActionName():NSString*">
				<signature>NSUndoManager.-redoActionName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-redoMenuItemTitle" uniqueID="-redoMenuItemTitle():NSString*">
				<signature>NSUndoManager.-redoMenuItemTitle():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-redoMenuTitleForUndoActionName:" uniqueID="-redoMenuTitleForUndoActionName:(NSString*):NSString*">
				<signature>NSUndoManager.-redoMenuTitleForUndoActionName:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerUndoWithTarget:handler:" uniqueID="-registerUndoWithTarget:handler:(id _Nonnull;(^)(id _Nonnull):void):void">
				<signature>NSUndoManager.-registerUndoWithTarget:handler:(id _Nonnull;(^)(id _Nonnull):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerUndoWithTarget:selector:object:" uniqueID="-registerUndoWithTarget:selector:object:(id _Nonnull;SEL _Nonnull;id _Nullable):void">
				<signature>NSUndoManager.-registerUndoWithTarget:selector:object:(id _Nonnull;SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllActions" uniqueID="-removeAllActions():void">
				<signature>NSUndoManager.-removeAllActions():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllActionsWithTarget:" uniqueID="-removeAllActionsWithTarget:(id _Nonnull):void">
				<signature>NSUndoManager.-removeAllActionsWithTarget:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-runLoopModes" uniqueID="-runLoopModes():NSArray&lt;NSString *&gt;*">
				<signature>NSUndoManager.-runLoopModes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActionIsDiscardable:" uniqueID="-setActionIsDiscardable:(BOOL):void">
				<signature>NSUndoManager.-setActionIsDiscardable:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActionName:" uniqueID="-setActionName:(NSString*):void">
				<signature>NSUndoManager.-setActionName:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGroupsByEvent:" uniqueID="-setGroupsByEvent:(BOOL):void">
				<signature>NSUndoManager.-setGroupsByEvent:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLevelsOfUndo:" uniqueID="-setLevelsOfUndo:(NSUInteger):void">
				<signature>NSUndoManager.-setLevelsOfUndo:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRunLoopModes:" uniqueID="-setRunLoopModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSUndoManager.-setRunLoopModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undo" uniqueID="-undo():void">
				<signature>NSUndoManager.-undo():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undoActionIsDiscardable" uniqueID="-undoActionIsDiscardable():BOOL">
				<signature>NSUndoManager.-undoActionIsDiscardable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undoActionName" uniqueID="-undoActionName():NSString*">
				<signature>NSUndoManager.-undoActionName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undoMenuItemTitle" uniqueID="-undoMenuItemTitle():NSString*">
				<signature>NSUndoManager.-undoMenuItemTitle():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undoMenuTitleForUndoActionName:" uniqueID="-undoMenuTitleForUndoActionName:(NSString*):NSString*">
				<signature>NSUndoManager.-undoMenuTitleForUndoActionName:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undoNestedGroup" uniqueID="-undoNestedGroup():void">
				<signature>NSUndoManager.-undoNestedGroup():void</signature>
			</method>
		</class>
		<class name="NSString+NSStringDeprecated" uniqueID="NSString+NSStringDeprecated">
			<method accessibility="Public" methodKind="Member" name="-cString" uniqueID="-cString():const char*">
				<signature>NSString+NSStringDeprecated.-cString():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cStringLength" uniqueID="-cStringLength():NSUInteger">
				<signature>NSString+NSStringDeprecated.-cStringLength():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:" uniqueID="-getCString:(char*):void">
				<signature>NSString+NSStringDeprecated.-getCString:(char*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:maxLength:" uniqueID="-getCString:maxLength:(char*;NSUInteger):void">
				<signature>NSString+NSStringDeprecated.-getCString:maxLength:(char*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:maxLength:range:remainingRange:" uniqueID="-getCString:maxLength:range:remainingRange:(char*;NSUInteger;NSRange;NSRange*):void">
				<signature>NSString+NSStringDeprecated.-getCString:maxLength:range:remainingRange:(char*;NSUInteger;NSRange;NSRange*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCharacters:" uniqueID="-getCharacters:(unichar*):void">
				<signature>NSString+NSStringDeprecated.-getCharacters:(unichar*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCString:" uniqueID="-initWithCString:(const char*):id _Nullable">
				<signature>NSString+NSStringDeprecated.-initWithCString:(const char*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCString:length:" uniqueID="-initWithCString:length:(const char*;NSUInteger):id _Nullable">
				<signature>NSString+NSStringDeprecated.-initWithCString:length:(const char*;NSUInteger):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCStringNoCopy:length:freeWhenDone:" uniqueID="-initWithCStringNoCopy:length:freeWhenDone:(char*;NSUInteger;BOOL):id _Nullable">
				<signature>NSString+NSStringDeprecated.-initWithCStringNoCopy:length:freeWhenDone:(char*;NSUInteger;BOOL):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):id _Nullable">
				<signature>NSString+NSStringDeprecated.-initWithContentsOfFile:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):id _Nullable">
				<signature>NSString+NSStringDeprecated.-initWithContentsOfURL:(NSURL*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lossyCString" uniqueID="-lossyCString():const char*">
				<signature>NSString+NSStringDeprecated.-lossyCString():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSString+NSStringDeprecated.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSString+NSStringDeprecated.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
		</class>
		<class name="NSArray+NSExtendedArray" uniqueID="NSArray+NSExtendedArray">
			<method accessibility="Public" methodKind="Member" name="-arrayByAddingObject:" uniqueID="-arrayByAddingObject:(ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-arrayByAddingObject:(ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-arrayByAddingObjectsFromArray:" uniqueID="-arrayByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-arrayByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsJoinedByString:" uniqueID="-componentsJoinedByString:(NSString*):NSString*">
				<signature>NSArray+NSExtendedArray.-componentsJoinedByString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsObject:" uniqueID="-containsObject:(ObjectType _Nonnull):BOOL">
				<signature>NSArray+NSExtendedArray.-containsObject:(ObjectType _Nonnull):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSArray+NSExtendedArray.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSArray+NSExtendedArray.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:indent:" uniqueID="-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*">
				<signature>NSArray+NSExtendedArray.-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsAtIndexes:options:usingBlock:" uniqueID="-enumerateObjectsAtIndexes:options:usingBlock:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void">
				<signature>NSArray+NSExtendedArray.-enumerateObjectsAtIndexes:options:usingBlock:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsUsingBlock:" uniqueID="-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void">
				<signature>NSArray+NSExtendedArray.-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsWithOptions:usingBlock:" uniqueID="-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void">
				<signature>NSArray+NSExtendedArray.-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstObject" uniqueID="-firstObject():ObjectType _Nullable">
				<signature>NSArray+NSExtendedArray.-firstObject():ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstObjectCommonWithArray:" uniqueID="-firstObjectCommonWithArray:(NSArray&lt;ObjectType&gt;*):ObjectType _Nullable">
				<signature>NSArray+NSExtendedArray.-firstObjectCommonWithArray:(NSArray&lt;ObjectType&gt;*):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjects:range:" uniqueID="-getObjects:range:(ObjectType*;NSRange):void">
				<signature>NSArray+NSExtendedArray.-getObjects:range:(ObjectType*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObject:" uniqueID="-indexOfObject:(ObjectType _Nonnull):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObject:(ObjectType _Nonnull):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObject:inRange:" uniqueID="-indexOfObject:inRange:(ObjectType _Nonnull;NSRange):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObject:inRange:(ObjectType _Nonnull;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObject:inSortedRange:options:usingComparator:" uniqueID="-indexOfObject:inSortedRange:options:usingComparator:(ObjectType _Nonnull;NSRange;NSBinarySearchingOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObject:inSortedRange:options:usingComparator:(ObjectType _Nonnull;NSRange;NSBinarySearchingOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectAtIndexes:options:passingTest:" uniqueID="-indexOfObjectAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObjectAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectIdenticalTo:" uniqueID="-indexOfObjectIdenticalTo:(ObjectType _Nonnull):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObjectIdenticalTo:(ObjectType _Nonnull):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectIdenticalTo:inRange:" uniqueID="-indexOfObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectPassingTest:" uniqueID="-indexOfObjectPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObjectPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectWithOptions:passingTest:" uniqueID="-indexOfObjectWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger">
				<signature>NSArray+NSExtendedArray.-indexOfObjectWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexesOfObjectsAtIndexes:options:passingTest:" uniqueID="-indexesOfObjectsAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*">
				<signature>NSArray+NSExtendedArray.-indexesOfObjectsAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexesOfObjectsPassingTest:" uniqueID="-indexesOfObjectsPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*">
				<signature>NSArray+NSExtendedArray.-indexesOfObjectsPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexesOfObjectsWithOptions:passingTest:" uniqueID="-indexesOfObjectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*">
				<signature>NSArray+NSExtendedArray.-indexesOfObjectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToArray:" uniqueID="-isEqualToArray:(NSArray&lt;ObjectType&gt;*):BOOL">
				<signature>NSArray+NSExtendedArray.-isEqualToArray:(NSArray&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastObject" uniqueID="-lastObject():ObjectType _Nullable">
				<signature>NSArray+NSExtendedArray.-lastObject():ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:" uniqueID="-makeObjectsPerformSelector:(SEL _Nonnull):void">
				<signature>NSArray+NSExtendedArray.-makeObjectsPerformSelector:(SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:withObject:" uniqueID="-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void">
				<signature>NSArray+NSExtendedArray.-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectAtIndexedSubscript:" uniqueID="-objectAtIndexedSubscript:(NSUInteger):ObjectType _Nonnull">
				<signature>NSArray+NSExtendedArray.-objectAtIndexedSubscript:(NSUInteger):ObjectType _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectEnumerator" uniqueID="-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsAtIndexes:" uniqueID="-objectsAtIndexes:(NSIndexSet*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-objectsAtIndexes:(NSIndexSet*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reverseObjectEnumerator" uniqueID="-reverseObjectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-reverseObjectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayHint" uniqueID="-sortedArrayHint():NSData*">
				<signature>NSArray+NSExtendedArray.-sortedArrayHint():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingComparator:" uniqueID="-sortedArrayUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-sortedArrayUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingFunction:context:" uniqueID="-sortedArrayUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-sortedArrayUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingFunction:context:hint:" uniqueID="-sortedArrayUsingFunction:context:hint:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*;NSData*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-sortedArrayUsingFunction:context:hint:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*;NSData*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingSelector:" uniqueID="-sortedArrayUsingSelector:(SEL _Nonnull):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-sortedArrayUsingSelector:(SEL _Nonnull):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayWithOptions:usingComparator:" uniqueID="-sortedArrayWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-sortedArrayWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subarrayWithRange:" uniqueID="-subarrayWithRange:(NSRange):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSExtendedArray.-subarrayWithRange:(NSRange):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSArray+NSExtendedArray.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSArray+NSExtendedArray.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
		</class>
		<class name="CIImage+CIImageProvider" uniqueID="CIImage+CIImageProvider">
			<method accessibility="Public" methodKind="Member" name="-initWithImageProvider:size::format:colorSpace:options:" uniqueID="-initWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage+CIImageProvider.-initWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSIndexPath" uniqueID="NSIndexPath">
			<method accessibility="Public" methodKind="Member" name="-compare:" uniqueID="-compare:(NSIndexPath*):NSComparisonResult">
				<signature>NSIndexPath.-compare:(NSIndexPath*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getIndexes:" uniqueID="-getIndexes:(NSUInteger*):void">
				<signature>NSIndexPath.-getIndexes:(NSUInteger*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getIndexes:range:" uniqueID="-getIndexes:range:(NSUInteger*;NSRange):void">
				<signature>NSIndexPath.-getIndexes:range:(NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexAtPosition:" uniqueID="-indexAtPosition:(NSUInteger):NSUInteger">
				<signature>NSIndexPath.-indexAtPosition:(NSUInteger):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathByAddingIndex:" uniqueID="-indexPathByAddingIndex:(NSUInteger):NSIndexPath*">
				<signature>NSIndexPath.-indexPathByAddingIndex:(NSUInteger):NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexPathByRemovingLastIndex" uniqueID="-indexPathByRemovingLastIndex():NSIndexPath*">
				<signature>NSIndexPath.-indexPathByRemovingLastIndex():NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithIndex:" uniqueID="-initWithIndex:(NSUInteger):instancetype _Nonnull">
				<signature>NSIndexPath.-initWithIndex:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithIndexes:length:" uniqueID="-initWithIndexes:length:(const NSUInteger*;NSUInteger):instancetype _Nonnull">
				<signature>NSIndexPath.-initWithIndexes:length:(const NSUInteger*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-item" uniqueID="-item():NSInteger">
				<signature>NSIndexPath.-item():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>NSIndexPath.-length():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-row" uniqueID="-row():NSInteger">
				<signature>NSIndexPath.-row():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-section" uniqueID="-section():NSInteger">
				<signature>NSIndexPath.-section():NSInteger</signature>
			</method>
		</class>
		<class name="UIViewController+UIAdaptivePresentations" uniqueID="UIViewController+UIAdaptivePresentations">
			<method accessibility="Public" methodKind="Member" name="-popoverPresentationController" uniqueID="-popoverPresentationController():UIPopoverPresentationController*">
				<signature>UIViewController+UIAdaptivePresentations.-popoverPresentationController():UIPopoverPresentationController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentationController" uniqueID="-presentationController():UIPresentationController*">
				<signature>UIViewController+UIAdaptivePresentations.-presentationController():UIPresentationController*</signature>
			</method>
		</class>
		<class name="NSBundle" uniqueID="NSBundle">
			<method accessibility="Public" methodKind="Member" name="-URLForAuxiliaryExecutable:" uniqueID="-URLForAuxiliaryExecutable:(NSString*):NSURL*">
				<signature>NSBundle.-URLForAuxiliaryExecutable:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLForResource:withExtension:" uniqueID="-URLForResource:withExtension:(NSString*;NSString*):NSURL*">
				<signature>NSBundle.-URLForResource:withExtension:(NSString*;NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLForResource:withExtension:subdirectory:" uniqueID="-URLForResource:withExtension:subdirectory:(NSString*;NSString*;NSString*):NSURL*">
				<signature>NSBundle.-URLForResource:withExtension:subdirectory:(NSString*;NSString*;NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLForResource:withExtension:subdirectory:localization:" uniqueID="-URLForResource:withExtension:subdirectory:localization:(NSString*;NSString*;NSString*;NSString*):NSURL*">
				<signature>NSBundle.-URLForResource:withExtension:subdirectory:localization:(NSString*;NSString*;NSString*;NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLsForResourcesWithExtension:subdirectory:" uniqueID="-URLsForResourcesWithExtension:subdirectory:(NSString*;NSString*):NSArray&lt;NSURL *&gt;*">
				<signature>NSBundle.-URLsForResourcesWithExtension:subdirectory:(NSString*;NSString*):NSArray&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLsForResourcesWithExtension:subdirectory:localization:" uniqueID="-URLsForResourcesWithExtension:subdirectory:localization:(NSString*;NSString*;NSString*):NSArray&lt;NSURL *&gt;*">
				<signature>NSBundle.-URLsForResourcesWithExtension:subdirectory:localization:(NSString*;NSString*;NSString*):NSArray&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-appStoreReceiptURL" uniqueID="-appStoreReceiptURL():NSURL*">
				<signature>NSBundle.-appStoreReceiptURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-builtInPlugInsPath" uniqueID="-builtInPlugInsPath():NSString*">
				<signature>NSBundle.-builtInPlugInsPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-builtInPlugInsURL" uniqueID="-builtInPlugInsURL():NSURL*">
				<signature>NSBundle.-builtInPlugInsURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bundleIdentifier" uniqueID="-bundleIdentifier():NSString*">
				<signature>NSBundle.-bundleIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bundlePath" uniqueID="-bundlePath():NSString*">
				<signature>NSBundle.-bundlePath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bundleURL" uniqueID="-bundleURL():NSURL*">
				<signature>NSBundle.-bundleURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-classNamed:" uniqueID="-classNamed:(NSString*):Class*">
				<signature>NSBundle.-classNamed:(NSString*):Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-developmentLocalization" uniqueID="-developmentLocalization():NSString*">
				<signature>NSBundle.-developmentLocalization():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-executableArchitectures" uniqueID="-executableArchitectures():NSArray&lt;NSNumber *&gt;*">
				<signature>NSBundle.-executableArchitectures():NSArray&lt;NSNumber *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-executablePath" uniqueID="-executablePath():NSString*">
				<signature>NSBundle.-executablePath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-executableURL" uniqueID="-executableURL():NSURL*">
				<signature>NSBundle.-executableURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-infoDictionary" uniqueID="-infoDictionary():NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSBundle.-infoDictionary():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithPath:" uniqueID="-initWithPath:(NSString*):instancetype _Nullable">
				<signature>NSBundle.-initWithPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:" uniqueID="-initWithURL:(NSURL*):instancetype _Nullable">
				<signature>NSBundle.-initWithURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isLoaded" uniqueID="-isLoaded():BOOL">
				<signature>NSBundle.-isLoaded():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-load" uniqueID="-load():BOOL">
				<signature>NSBundle.-load():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadAndReturnError:" uniqueID="-loadAndReturnError:(NSError**):BOOL">
				<signature>NSBundle.-loadAndReturnError:(NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadNibNamed:owner:options:" uniqueID="-loadNibNamed:owner:options:(NSString*;id;NSDictionary*):NSArray*">
				<signature>NSBundle.-loadNibNamed:owner:options:(NSString*;id;NSDictionary*):NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizations" uniqueID="-localizations():NSArray&lt;NSString *&gt;*">
				<signature>NSBundle.-localizations():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedInfoDictionary" uniqueID="-localizedInfoDictionary():NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSBundle.-localizedInfoDictionary():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStringForKey:value:table:" uniqueID="-localizedStringForKey:value:table:(NSString*;NSString*;NSString*):NSString*">
				<signature>NSBundle.-localizedStringForKey:value:table:(NSString*;NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForInfoDictionaryKey:" uniqueID="-objectForInfoDictionaryKey:(NSString*):id _Nullable">
				<signature>NSBundle.-objectForInfoDictionaryKey:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathForAuxiliaryExecutable:" uniqueID="-pathForAuxiliaryExecutable:(NSString*):NSString*">
				<signature>NSBundle.-pathForAuxiliaryExecutable:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathForResource:ofType:" uniqueID="-pathForResource:ofType:(NSString*;NSString*):NSString*">
				<signature>NSBundle.-pathForResource:ofType:(NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathForResource:ofType:inDirectory:" uniqueID="-pathForResource:ofType:inDirectory:(NSString*;NSString*;NSString*):NSString*">
				<signature>NSBundle.-pathForResource:ofType:inDirectory:(NSString*;NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathForResource:ofType:inDirectory:forLocalization:" uniqueID="-pathForResource:ofType:inDirectory:forLocalization:(NSString*;NSString*;NSString*;NSString*):NSString*">
				<signature>NSBundle.-pathForResource:ofType:inDirectory:forLocalization:(NSString*;NSString*;NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathsForResourcesOfType:inDirectory:" uniqueID="-pathsForResourcesOfType:inDirectory:(NSString*;NSString*):NSArray&lt;NSString *&gt;*">
				<signature>NSBundle.-pathsForResourcesOfType:inDirectory:(NSString*;NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathsForResourcesOfType:inDirectory:forLocalization:" uniqueID="-pathsForResourcesOfType:inDirectory:forLocalization:(NSString*;NSString*;NSString*):NSArray&lt;NSString *&gt;*">
				<signature>NSBundle.-pathsForResourcesOfType:inDirectory:forLocalization:(NSString*;NSString*;NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredLocalizations" uniqueID="-preferredLocalizations():NSArray&lt;NSString *&gt;*">
				<signature>NSBundle.-preferredLocalizations():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preflightAndReturnError:" uniqueID="-preflightAndReturnError:(NSError**):BOOL">
				<signature>NSBundle.-preflightAndReturnError:(NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preservationPriorityForTag:" uniqueID="-preservationPriorityForTag:(NSString*):double">
				<signature>NSBundle.-preservationPriorityForTag:(NSString*):double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-principalClass" uniqueID="-principalClass():Class*">
				<signature>NSBundle.-principalClass():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-privateFrameworksPath" uniqueID="-privateFrameworksPath():NSString*">
				<signature>NSBundle.-privateFrameworksPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-privateFrameworksURL" uniqueID="-privateFrameworksURL():NSURL*">
				<signature>NSBundle.-privateFrameworksURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resourcePath" uniqueID="-resourcePath():NSString*">
				<signature>NSBundle.-resourcePath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resourceURL" uniqueID="-resourceURL():NSURL*">
				<signature>NSBundle.-resourceURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreservationPriority:forTags:" uniqueID="-setPreservationPriority:forTags:(double;NSSet&lt;NSString *&gt;*):void">
				<signature>NSBundle.-setPreservationPriority:forTags:(double;NSSet&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sharedFrameworksPath" uniqueID="-sharedFrameworksPath():NSString*">
				<signature>NSBundle.-sharedFrameworksPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sharedFrameworksURL" uniqueID="-sharedFrameworksURL():NSURL*">
				<signature>NSBundle.-sharedFrameworksURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sharedSupportPath" uniqueID="-sharedSupportPath():NSString*">
				<signature>NSBundle.-sharedSupportPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sharedSupportURL" uniqueID="-sharedSupportURL():NSURL*">
				<signature>NSBundle.-sharedSupportURL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unload" uniqueID="-unload():BOOL">
				<signature>NSBundle.-unload():BOOL</signature>
			</method>
		</class>
		<class name="NSArray+NSArrayCreation" uniqueID="NSArray+NSArrayCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithArray:" uniqueID="-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSArray+NSArrayCreation.-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithArray:copyItems:" uniqueID="-initWithArray:copyItems:(NSArray&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull">
				<signature>NSArray+NSArrayCreation.-initWithArray:copyItems:(NSArray&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSArrayCreation.-initWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSArrayCreation.-initWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:" uniqueID="-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>NSArray+NSArrayCreation.-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="MapViewController" uniqueID="MapViewController">
			<method accessibility="Public" methodKind="Member" name="-centerMapButton" uniqueID="-centerMapButton():UIBarButtonItem*">
				<signature>MapViewController.-centerMapButton():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerMapButtonClicked:" uniqueID="-centerMapButtonClicked:(id):void">
				<signature>MapViewController.-centerMapButtonClicked:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentLocation" uniqueID="-currentLocation():CLLocation*">
				<signature>MapViewController.-currentLocation():CLLocation*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>MapViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-labelText" uniqueID="-labelText():UILabel*">
				<signature>MapViewController.-labelText():UILabel*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager" uniqueID="-locationManager():CLLocationManager*">
				<signature>MapViewController.-locationManager():CLLocationManager*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didFailWithError:" uniqueID="-locationManager:didFailWithError:(CLLocationManager*;NSError*):void">
				<signature>MapViewController.-locationManager:didFailWithError:(CLLocationManager*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didUpdateLocations:" uniqueID="-locationManager:didUpdateLocations:(CLLocationManager*;NSArray*):void">
				<signature>MapViewController.-locationManager:didUpdateLocations:(CLLocationManager*;NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView" uniqueID="-mapView():MKMapView*">
				<signature>MapViewController.-mapView():MKMapView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenterMapButton:" uniqueID="-setCenterMapButton:(UIBarButtonItem*):void">
				<signature>MapViewController.-setCenterMapButton:(UIBarButtonItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCurrentLocation:" uniqueID="-setCurrentLocation:(CLLocation*):void">
				<signature>MapViewController.-setCurrentLocation:(CLLocation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLabelText:" uniqueID="-setLabelText:(UILabel*):void">
				<signature>MapViewController.-setLabelText:(UILabel*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLocationManager:" uniqueID="-setLocationManager:(CLLocationManager*):void">
				<signature>MapViewController.-setLocationManager:(CLLocationManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMapView:" uniqueID="-setMapView:(MKMapView*):void">
				<signature>MapViewController.-setMapView:(MKMapView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>MapViewController.-viewDidLoad():void</signature>
			</method>
		</class>
		<class name="UIView+UIViewGestureRecognizers" uniqueID="UIView+UIViewGestureRecognizers">
			<method accessibility="Public" methodKind="Member" name="-addGestureRecognizer:" uniqueID="-addGestureRecognizer:(UIGestureRecognizer*):void">
				<signature>UIView+UIViewGestureRecognizers.-addGestureRecognizer:(UIGestureRecognizer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizerShouldBegin:" uniqueID="-gestureRecognizerShouldBegin:(UIGestureRecognizer*):BOOL">
				<signature>UIView+UIViewGestureRecognizers.-gestureRecognizerShouldBegin:(UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizers" uniqueID="-gestureRecognizers():NSArray&lt;__kindof UIGestureRecognizer *&gt;*">
				<signature>UIView+UIViewGestureRecognizers.-gestureRecognizers():NSArray&lt;__kindof UIGestureRecognizer *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeGestureRecognizer:" uniqueID="-removeGestureRecognizer:(UIGestureRecognizer*):void">
				<signature>UIView+UIViewGestureRecognizers.-removeGestureRecognizer:(UIGestureRecognizer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGestureRecognizers:" uniqueID="-setGestureRecognizers:(NSArray&lt;__kindof UIGestureRecognizer *&gt;*):void">
				<signature>UIView+UIViewGestureRecognizers.-setGestureRecognizers:(NSArray&lt;__kindof UIGestureRecognizer *&gt;*):void</signature>
			</method>
		</class>
		<class name="UIView+UIStateRestoration" uniqueID="UIView+UIStateRestoration">
			<method accessibility="Public" methodKind="Member" name="-decodeRestorableStateWithCoder:" uniqueID="-decodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIView+UIStateRestoration.-decodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-encodeRestorableStateWithCoder:" uniqueID="-encodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIView+UIStateRestoration.-encodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationIdentifier" uniqueID="-restorationIdentifier():NSString*">
				<signature>UIView+UIStateRestoration.-restorationIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRestorationIdentifier:" uniqueID="-setRestorationIdentifier:(NSString*):void">
				<signature>UIView+UIStateRestoration.-setRestorationIdentifier:(NSString*):void</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;MTLCommandBuffer&gt;*):void" uniqueID="^(objc_object&lt;MTLCommandBuffer&gt;*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;MTLCommandBuffer&gt;*):void">
				<signature>^(objc_object&lt;MTLCommandBuffer&gt;*):void.-block(objc_object&lt;MTLCommandBuffer&gt;*):void</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSAttributedStringKitAdditions" uniqueID="NSAttributedString+NSAttributedStringKitAdditions">
			<method accessibility="Public" methodKind="Member" name="-containsAttachmentsInRange:" uniqueID="-containsAttachmentsInRange:(NSRange):BOOL">
				<signature>NSAttributedString+NSAttributedStringKitAdditions.-containsAttachmentsInRange:(NSRange):BOOL</signature>
			</method>
		</class>
		<class name="UIView+UISnapshotting" uniqueID="UIView+UISnapshotting">
			<method accessibility="Public" methodKind="Member" name="-drawViewHierarchyInRect:afterScreenUpdates:" uniqueID="-drawViewHierarchyInRect:afterScreenUpdates:(CGRect;BOOL):BOOL">
				<signature>UIView+UISnapshotting.-drawViewHierarchyInRect:afterScreenUpdates:(CGRect;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:" uniqueID="-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:(CGRect;BOOL;UIEdgeInsets):UIView*">
				<signature>UIView+UISnapshotting.-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:(CGRect;BOOL;UIEdgeInsets):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-snapshotViewAfterScreenUpdates:" uniqueID="-snapshotViewAfterScreenUpdates:(BOOL):UIView*">
				<signature>UIView+UISnapshotting.-snapshotViewAfterScreenUpdates:(BOOL):UIView*</signature>
			</method>
		</class>
		<class name="NSMutableData+NSMutableDataCreation" uniqueID="NSMutableData+NSMutableDataCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithCapacity:" uniqueID="-initWithCapacity:(NSUInteger):instancetype _Nullable">
				<signature>NSMutableData+NSMutableDataCreation.-initWithCapacity:(NSUInteger):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLength:" uniqueID="-initWithLength:(NSUInteger):instancetype _Nullable">
				<signature>NSMutableData+NSMutableDataCreation.-initWithLength:(NSUInteger):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSHTTPURLResponse" uniqueID="NSHTTPURLResponse">
			<method accessibility="Public" methodKind="Member" name="-allHeaderFields" uniqueID="-allHeaderFields():NSDictionary*">
				<signature>NSHTTPURLResponse.-allHeaderFields():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:statusCode:HTTPVersion:headerFields:" uniqueID="-initWithURL:statusCode:HTTPVersion:headerFields:(NSURL*;NSInteger;NSString*;NSDictionary&lt;NSString *,NSString *&gt;*):instancetype _Nullable">
				<signature>NSHTTPURLResponse.-initWithURL:statusCode:HTTPVersion:headerFields:(NSURL*;NSInteger;NSString*;NSDictionary&lt;NSString *,NSString *&gt;*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusCode" uniqueID="-statusCode():NSInteger">
				<signature>NSHTTPURLResponse.-statusCode():NSInteger</signature>
			</method>
		</class>
		<class name="NSDictionary" uniqueID="NSDictionary">
			<method accessibility="Public" methodKind="Member" name="-allKeys" uniqueID="-allKeys():NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary.-allKeys():NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allKeysForObject:" uniqueID="-allKeysForObject:(ObjectType _Nonnull):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary.-allKeysForObject:(ObjectType _Nonnull):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allValues" uniqueID="-allValues():NSArray&lt;ObjectType&gt;*">
				<signature>NSDictionary.-allValues():NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-count" uniqueID="-count():NSUInteger">
				<signature>NSDictionary.-count():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSDictionary.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionInStringsFileFormat" uniqueID="-descriptionInStringsFileFormat():NSString*">
				<signature>NSDictionary.-descriptionInStringsFileFormat():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSDictionary.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:indent:" uniqueID="-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*">
				<signature>NSDictionary.-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateKeysAndObjectsUsingBlock:" uniqueID="-enumerateKeysAndObjectsUsingBlock:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSDictionary.-enumerateKeysAndObjectsUsingBlock:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateKeysAndObjectsWithOptions:usingBlock:" uniqueID="-enumerateKeysAndObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSDictionary.-enumerateKeysAndObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileCreationDate" uniqueID="-fileCreationDate():NSDate*">
				<signature>NSDictionary.-fileCreationDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileExtensionHidden" uniqueID="-fileExtensionHidden():BOOL">
				<signature>NSDictionary.-fileExtensionHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileGroupOwnerAccountID" uniqueID="-fileGroupOwnerAccountID():NSNumber*">
				<signature>NSDictionary.-fileGroupOwnerAccountID():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileGroupOwnerAccountName" uniqueID="-fileGroupOwnerAccountName():NSString*">
				<signature>NSDictionary.-fileGroupOwnerAccountName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileHFSCreatorCode" uniqueID="-fileHFSCreatorCode():OSType">
				<signature>NSDictionary.-fileHFSCreatorCode():OSType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileHFSTypeCode" uniqueID="-fileHFSTypeCode():OSType">
				<signature>NSDictionary.-fileHFSTypeCode():OSType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileIsAppendOnly" uniqueID="-fileIsAppendOnly():BOOL">
				<signature>NSDictionary.-fileIsAppendOnly():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileIsImmutable" uniqueID="-fileIsImmutable():BOOL">
				<signature>NSDictionary.-fileIsImmutable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileModificationDate" uniqueID="-fileModificationDate():NSDate*">
				<signature>NSDictionary.-fileModificationDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileOwnerAccountID" uniqueID="-fileOwnerAccountID():NSNumber*">
				<signature>NSDictionary.-fileOwnerAccountID():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileOwnerAccountName" uniqueID="-fileOwnerAccountName():NSString*">
				<signature>NSDictionary.-fileOwnerAccountName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filePosixPermissions" uniqueID="-filePosixPermissions():NSUInteger">
				<signature>NSDictionary.-filePosixPermissions():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSize" uniqueID="-fileSize():unsigned long long">
				<signature>NSDictionary.-fileSize():unsigned long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemFileNumber" uniqueID="-fileSystemFileNumber():NSUInteger">
				<signature>NSDictionary.-fileSystemFileNumber():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemNumber" uniqueID="-fileSystemNumber():NSInteger">
				<signature>NSDictionary.-fileSystemNumber():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileType" uniqueID="-fileType():NSString*">
				<signature>NSDictionary.-fileType():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjects:andKeys:" uniqueID="-getObjects:andKeys:(ObjectType*;KeyType*):void">
				<signature>NSDictionary.-getObjects:andKeys:(ObjectType*;KeyType*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjects:andKeys:count:" uniqueID="-getObjects:andKeys:count:(ObjectType*;KeyType*;NSUInteger):void">
				<signature>NSDictionary.-getObjects:andKeys:count:(ObjectType*;KeyType*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSDictionary.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSDictionary.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSDictionary.-initWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSDictionary.-initWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDictionary:" uniqueID="-initWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSDictionary.-initWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDictionary:copyItems:" uniqueID="-initWithDictionary:copyItems:(NSDictionary&lt;KeyType,ObjectType&gt;*;BOOL):instancetype _Nonnull">
				<signature>NSDictionary.-initWithDictionary:copyItems:(NSDictionary&lt;KeyType,ObjectType&gt;*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:forKeys:" uniqueID="-initWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull">
				<signature>NSDictionary.-initWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:forKeys:count:" uniqueID="-initWithObjects:forKeys:count:(const ObjectType*;const objc_object&lt;NSCopying&gt;**;NSUInteger):instancetype _Nonnull">
				<signature>NSDictionary.-initWithObjects:forKeys:count:(const ObjectType*;const objc_object&lt;NSCopying&gt;**;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjectsAndKeys:" uniqueID="-initWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull">
				<signature>NSDictionary.-initWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToDictionary:" uniqueID="-isEqualToDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):BOOL">
				<signature>NSDictionary.-isEqualToDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyEnumerator" uniqueID="-keyEnumerator():NSEnumerator&lt;KeyType&gt;*">
				<signature>NSDictionary.-keyEnumerator():NSEnumerator&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysOfEntriesPassingTest:" uniqueID="-keysOfEntriesPassingTest:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*">
				<signature>NSDictionary.-keysOfEntriesPassingTest:((^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysOfEntriesWithOptions:passingTest:" uniqueID="-keysOfEntriesWithOptions:passingTest:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*">
				<signature>NSDictionary.-keysOfEntriesWithOptions:passingTest:(NSEnumerationOptions;(^)(KeyType _Nonnull;ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysSortedByValueUsingComparator:" uniqueID="-keysSortedByValueUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary.-keysSortedByValueUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysSortedByValueUsingSelector:" uniqueID="-keysSortedByValueUsingSelector:(SEL _Nonnull):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary.-keysSortedByValueUsingSelector:(SEL _Nonnull):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keysSortedByValueWithOptions:usingComparator:" uniqueID="-keysSortedByValueWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*">
				<signature>NSDictionary.-keysSortedByValueWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;KeyType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectEnumerator" uniqueID="-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSDictionary.-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKey:" uniqueID="-objectForKey:(KeyType _Nonnull):ObjectType _Nullable">
				<signature>NSDictionary.-objectForKey:(KeyType _Nonnull):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKeyedSubscript:" uniqueID="-objectForKeyedSubscript:(KeyType _Nonnull):ObjectType _Nullable">
				<signature>NSDictionary.-objectForKeyedSubscript:(KeyType _Nonnull):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsForKeys:notFoundMarker:" uniqueID="-objectsForKeys:notFoundMarker:(NSArray&lt;KeyType&gt;*;ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*">
				<signature>NSDictionary.-objectsForKeys:notFoundMarker:(NSArray&lt;KeyType&gt;*;ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):ObjectType _Nullable">
				<signature>NSDictionary.-valueForKey:(NSString*):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSDictionary.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSDictionary.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
		</class>
		<class name="UIView+UIPrintFormatter" uniqueID="UIView+UIPrintFormatter">
			<method accessibility="Public" methodKind="Member" name="-drawRect:forViewPrintFormatter:" uniqueID="-drawRect:forViewPrintFormatter:(CGRect;UIViewPrintFormatter*):void">
				<signature>UIView+UIPrintFormatter.-drawRect:forViewPrintFormatter:(CGRect;UIViewPrintFormatter*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewPrintFormatter" uniqueID="-viewPrintFormatter():UIViewPrintFormatter*">
				<signature>UIView+UIPrintFormatter.-viewPrintFormatter():UIViewPrintFormatter*</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedLayoutLayering" uniqueID="UIView+UIConstraintBasedLayoutLayering">
			<method accessibility="Public" methodKind="Member" name="-alignmentRectForFrame:" uniqueID="-alignmentRectForFrame:(CGRect):CGRect">
				<signature>UIView+UIConstraintBasedLayoutLayering.-alignmentRectForFrame:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alignmentRectInsets" uniqueID="-alignmentRectInsets():UIEdgeInsets">
				<signature>UIView+UIConstraintBasedLayoutLayering.-alignmentRectInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentCompressionResistancePriorityForAxis:" uniqueID="-contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority">
				<signature>UIView+UIConstraintBasedLayoutLayering.-contentCompressionResistancePriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentHuggingPriorityForAxis:" uniqueID="-contentHuggingPriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority">
				<signature>UIView+UIConstraintBasedLayoutLayering.-contentHuggingPriorityForAxis:(UILayoutConstraintAxis):UILayoutPriority</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-frameForAlignmentRect:" uniqueID="-frameForAlignmentRect:(CGRect):CGRect">
				<signature>UIView+UIConstraintBasedLayoutLayering.-frameForAlignmentRect:(CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intrinsicContentSize" uniqueID="-intrinsicContentSize():CGSize">
				<signature>UIView+UIConstraintBasedLayoutLayering.-intrinsicContentSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidateIntrinsicContentSize" uniqueID="-invalidateIntrinsicContentSize():void">
				<signature>UIView+UIConstraintBasedLayoutLayering.-invalidateIntrinsicContentSize():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentCompressionResistancePriority:forAxis:" uniqueID="-setContentCompressionResistancePriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void">
				<signature>UIView+UIConstraintBasedLayoutLayering.-setContentCompressionResistancePriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentHuggingPriority:forAxis:" uniqueID="-setContentHuggingPriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void">
				<signature>UIView+UIConstraintBasedLayoutLayering.-setContentHuggingPriority:forAxis:(UILayoutPriority;UILayoutConstraintAxis):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForBaselineLayout" uniqueID="-viewForBaselineLayout():UIView*">
				<signature>UIView+UIConstraintBasedLayoutLayering.-viewForBaselineLayout():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForFirstBaselineLayout" uniqueID="-viewForFirstBaselineLayout():UIView*">
				<signature>UIView+UIConstraintBasedLayoutLayering.-viewForFirstBaselineLayout():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForLastBaselineLayout" uniqueID="-viewForLastBaselineLayout():UIView*">
				<signature>UIView+UIConstraintBasedLayoutLayering.-viewForLastBaselineLayout():UIView*</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedLayoutInstallingConstraints" uniqueID="UIView+UIConstraintBasedLayoutInstallingConstraints">
			<method accessibility="Public" methodKind="Member" name="-addConstraint:" uniqueID="-addConstraint:(NSLayoutConstraint*):void">
				<signature>UIView+UIConstraintBasedLayoutInstallingConstraints.-addConstraint:(NSLayoutConstraint*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addConstraints:" uniqueID="-addConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void">
				<signature>UIView+UIConstraintBasedLayoutInstallingConstraints.-addConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraints" uniqueID="-constraints():NSArray&lt;__kindof NSLayoutConstraint *&gt;*">
				<signature>UIView+UIConstraintBasedLayoutInstallingConstraints.-constraints():NSArray&lt;__kindof NSLayoutConstraint *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeConstraint:" uniqueID="-removeConstraint:(NSLayoutConstraint*):void">
				<signature>UIView+UIConstraintBasedLayoutInstallingConstraints.-removeConstraint:(NSLayoutConstraint*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeConstraints:" uniqueID="-removeConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void">
				<signature>UIView+UIConstraintBasedLayoutInstallingConstraints.-removeConstraints:(NSArray&lt;__kindof NSLayoutConstraint *&gt;*):void</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedLayoutFittingSize" uniqueID="UIView+UIConstraintBasedLayoutFittingSize">
			<method accessibility="Public" methodKind="Member" name="-systemLayoutSizeFittingSize:" uniqueID="-systemLayoutSizeFittingSize:(CGSize):CGSize">
				<signature>UIView+UIConstraintBasedLayoutFittingSize.-systemLayoutSizeFittingSize:(CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:" uniqueID="-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:(CGSize;UILayoutPriority;UILayoutPriority):CGSize">
				<signature>UIView+UIConstraintBasedLayoutFittingSize.-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:(CGSize;UILayoutPriority;UILayoutPriority):CGSize</signature>
			</method>
		</class>
		<class name="CALayer+CALayerScrolling" uniqueID="CALayer+CALayerScrolling">
			<method accessibility="Public" methodKind="Member" name="-scrollPoint:" uniqueID="-scrollPoint:(CGPoint):void">
				<signature>CALayer+CALayerScrolling.-scrollPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollRectToVisible:" uniqueID="-scrollRectToVisible:(CGRect):void">
				<signature>CALayer+CALayerScrolling.-scrollRectToVisible:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-visibleRect" uniqueID="-visibleRect():CGRect">
				<signature>CALayer+CALayerScrolling.-visibleRect():CGRect</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedLayoutDebugging" uniqueID="UIView+UIConstraintBasedLayoutDebugging">
			<method accessibility="Public" methodKind="Member" name="-constraintsAffectingLayoutForAxis:" uniqueID="-constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis):NSArray&lt;__kindof NSLayoutConstraint *&gt;*">
				<signature>UIView+UIConstraintBasedLayoutDebugging.-constraintsAffectingLayoutForAxis:(UILayoutConstraintAxis):NSArray&lt;__kindof NSLayoutConstraint *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exerciseAmbiguityInLayout" uniqueID="-exerciseAmbiguityInLayout():void">
				<signature>UIView+UIConstraintBasedLayoutDebugging.-exerciseAmbiguityInLayout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasAmbiguousLayout" uniqueID="-hasAmbiguousLayout():BOOL">
				<signature>UIView+UIConstraintBasedLayoutDebugging.-hasAmbiguousLayout():BOOL</signature>
			</method>
		</class>
		<class name="NSArray+NSDeprecated" uniqueID="NSArray+NSDeprecated">
			<method accessibility="Public" methodKind="Member" name="-getObjects:" uniqueID="-getObjects:(ObjectType*):void">
				<signature>NSArray+NSDeprecated.-getObjects:(ObjectType*):void</signature>
			</method>
		</class>
		<class name="NSNumber+NSDecimalNumberExtensions" uniqueID="NSNumber+NSDecimalNumberExtensions">
			<method accessibility="Public" methodKind="Member" name="-decimalValue" uniqueID="-decimalValue():NSDecimal">
				<signature>NSNumber+NSDecimalNumberExtensions.-decimalValue():NSDecimal</signature>
			</method>
		</class>
		<class name="UIApplication+UIShortcutItems" uniqueID="UIApplication+UIShortcutItems">
			<method accessibility="Public" methodKind="Member" name="-setShortcutItems:" uniqueID="-setShortcutItems:(NSArray&lt;UIApplicationShortcutItem *&gt;*):void">
				<signature>UIApplication+UIShortcutItems.-setShortcutItems:(NSArray&lt;UIApplicationShortcutItem *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortcutItems" uniqueID="-shortcutItems():NSArray&lt;UIApplicationShortcutItem *&gt;*">
				<signature>UIApplication+UIShortcutItems.-shortcutItems():NSArray&lt;UIApplicationShortcutItem *&gt;*</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedLayoutCoreMethods" uniqueID="UIView+UIConstraintBasedLayoutCoreMethods">
			<method accessibility="Public" methodKind="Member" name="-needsUpdateConstraints" uniqueID="-needsUpdateConstraints():BOOL">
				<signature>UIView+UIConstraintBasedLayoutCoreMethods.-needsUpdateConstraints():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsUpdateConstraints" uniqueID="-setNeedsUpdateConstraints():void">
				<signature>UIView+UIConstraintBasedLayoutCoreMethods.-setNeedsUpdateConstraints():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateConstraints" uniqueID="-updateConstraints():void">
				<signature>UIView+UIConstraintBasedLayoutCoreMethods.-updateConstraints():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateConstraintsIfNeeded" uniqueID="-updateConstraintsIfNeeded():void">
				<signature>UIView+UIConstraintBasedLayoutCoreMethods.-updateConstraintsIfNeeded():void</signature>
			</method>
		</class>
		<class name="^(id;_NSRange;char*):void" uniqueID="^(id;_NSRange;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;_NSRange;char*):void">
				<signature>^(id;_NSRange;char*):void.-block(id;_NSRange;char*):void</signature>
			</method>
		</class>
		<class name="^(CGRect;CGRect;NSTextContainer*;_NSRange;char*):void" uniqueID="^(CGRect;CGRect;NSTextContainer*;_NSRange;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(CGRect;CGRect;NSTextContainer*;_NSRange;char*):void">
				<signature>^(CGRect;CGRect;NSTextContainer*;_NSRange;char*):void.-block(CGRect;CGRect;NSTextContainer*;_NSRange;char*):void</signature>
			</method>
		</class>
		<class name="UIView+UIViewLayoutConstraintCreation" uniqueID="UIView+UIViewLayoutConstraintCreation">
			<method accessibility="Public" methodKind="Member" name="-bottomAnchor" uniqueID="-bottomAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-bottomAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerXAnchor" uniqueID="-centerXAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-centerXAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerYAnchor" uniqueID="-centerYAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-centerYAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstBaselineAnchor" uniqueID="-firstBaselineAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-firstBaselineAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heightAnchor" uniqueID="-heightAnchor():NSLayoutDimension*">
				<signature>UIView+UIViewLayoutConstraintCreation.-heightAnchor():NSLayoutDimension*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastBaselineAnchor" uniqueID="-lastBaselineAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-lastBaselineAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leadingAnchor" uniqueID="-leadingAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-leadingAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftAnchor" uniqueID="-leftAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-leftAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rightAnchor" uniqueID="-rightAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-rightAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topAnchor" uniqueID="-topAnchor():NSLayoutYAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-topAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-trailingAnchor" uniqueID="-trailingAnchor():NSLayoutXAxisAnchor*">
				<signature>UIView+UIViewLayoutConstraintCreation.-trailingAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-widthAnchor" uniqueID="-widthAnchor():NSLayoutDimension*">
				<signature>UIView+UIViewLayoutConstraintCreation.-widthAnchor():NSLayoutDimension*</signature>
			</method>
		</class>
		<class name="MKMapView+OverlaysAPI" uniqueID="MKMapView+OverlaysAPI">
			<method accessibility="Public" methodKind="Member" name="-addOverlay:" uniqueID="-addOverlay:(objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-addOverlay:(objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlay:level:" uniqueID="-addOverlay:level:(objc_object&lt;MKOverlay&gt;*;MKOverlayLevel):void">
				<signature>MKMapView+OverlaysAPI.-addOverlay:level:(objc_object&lt;MKOverlay&gt;*;MKOverlayLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlays:" uniqueID="-addOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-addOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlays:level:" uniqueID="-addOverlays:level:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*;MKOverlayLevel):void">
				<signature>MKMapView+OverlaysAPI.-addOverlays:level:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*;MKOverlayLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeOverlay:withOverlay:" uniqueID="-exchangeOverlay:withOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-exchangeOverlay:withOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeOverlayAtIndex:withOverlayAtIndex:" uniqueID="-exchangeOverlayAtIndex:withOverlayAtIndex:(NSUInteger;NSUInteger):void">
				<signature>MKMapView+OverlaysAPI.-exchangeOverlayAtIndex:withOverlayAtIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:aboveOverlay:" uniqueID="-insertOverlay:aboveOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-insertOverlay:aboveOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:atIndex:" uniqueID="-insertOverlay:atIndex:(objc_object&lt;MKOverlay&gt;*;NSUInteger):void">
				<signature>MKMapView+OverlaysAPI.-insertOverlay:atIndex:(objc_object&lt;MKOverlay&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:atIndex:level:" uniqueID="-insertOverlay:atIndex:level:(objc_object&lt;MKOverlay&gt;*;NSUInteger;MKOverlayLevel):void">
				<signature>MKMapView+OverlaysAPI.-insertOverlay:atIndex:level:(objc_object&lt;MKOverlay&gt;*;NSUInteger;MKOverlayLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:belowOverlay:" uniqueID="-insertOverlay:belowOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-insertOverlay:belowOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overlays" uniqueID="-overlays():NSArray&lt;id&lt;MKOverlay&gt;&gt;*">
				<signature>MKMapView+OverlaysAPI.-overlays():NSArray&lt;id&lt;MKOverlay&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overlaysInLevel:" uniqueID="-overlaysInLevel:(MKOverlayLevel):NSArray&lt;id&lt;MKOverlay&gt;&gt;*">
				<signature>MKMapView+OverlaysAPI.-overlaysInLevel:(MKOverlayLevel):NSArray&lt;id&lt;MKOverlay&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeOverlay:" uniqueID="-removeOverlay:(objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-removeOverlay:(objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeOverlays:" uniqueID="-removeOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void">
				<signature>MKMapView+OverlaysAPI.-removeOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rendererForOverlay:" uniqueID="-rendererForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayRenderer*">
				<signature>MKMapView+OverlaysAPI.-rendererForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayRenderer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForOverlay:" uniqueID="-viewForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayView*">
				<signature>MKMapView+OverlaysAPI.-viewForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayView*</signature>
			</method>
		</class>
		<class name="NSTimer" uniqueID="NSTimer">
			<method accessibility="Public" methodKind="Member" name="-fire" uniqueID="-fire():void">
				<signature>NSTimer.-fire():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fireDate" uniqueID="-fireDate():NSDate*">
				<signature>NSTimer.-fireDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFireDate:interval:target:selector:userInfo:repeats:" uniqueID="-initWithFireDate:interval:target:selector:userInfo:repeats:(NSDate*;NSTimeInterval;id _Nonnull;SEL _Nonnull;id _Nullable;BOOL):instancetype _Nonnull">
				<signature>NSTimer.-initWithFireDate:interval:target:selector:userInfo:repeats:(NSDate*;NSTimeInterval;id _Nonnull;SEL _Nonnull;id _Nullable;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invalidate" uniqueID="-invalidate():void">
				<signature>NSTimer.-invalidate():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isValid" uniqueID="-isValid():BOOL">
				<signature>NSTimer.-isValid():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFireDate:" uniqueID="-setFireDate:(NSDate*):void">
				<signature>NSTimer.-setFireDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTolerance:" uniqueID="-setTolerance:(NSTimeInterval):void">
				<signature>NSTimer.-setTolerance:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeInterval" uniqueID="-timeInterval():NSTimeInterval">
				<signature>NSTimer.-timeInterval():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tolerance" uniqueID="-tolerance():NSTimeInterval">
				<signature>NSTimer.-tolerance():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInfo" uniqueID="-userInfo():id _Nullable">
				<signature>NSTimer.-userInfo():id _Nullable</signature>
			</method>
		</class>
		<class name="CIImage" uniqueID="CIImage">
			<method accessibility="Public" methodKind="Member" name="-autoAdjustmentFiltersWithOptions:" uniqueID="-autoAdjustmentFiltersWithOptions:(NSDictionary&lt;NSString *,id&gt;*):NSArray&lt;CIFilter *&gt;*">
				<signature>CIImage.-autoAdjustmentFiltersWithOptions:(NSDictionary&lt;NSString *,id&gt;*):NSArray&lt;CIFilter *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-colorSpace" uniqueID="-colorSpace():struct CGColorSpace*">
				<signature>CIImage.-colorSpace():struct CGColorSpace*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-definition" uniqueID="-definition():CIFilterShape*">
				<signature>CIImage.-definition():CIFilterShape*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extent" uniqueID="-extent():CGRect">
				<signature>CIImage.-extent():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageByApplyingFilter:withInputParameters:" uniqueID="-imageByApplyingFilter:withInputParameters:(NSString*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>CIImage.-imageByApplyingFilter:withInputParameters:(NSString*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageByApplyingOrientation:" uniqueID="-imageByApplyingOrientation:(int):CIImage*">
				<signature>CIImage.-imageByApplyingOrientation:(int):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageByApplyingTransform:" uniqueID="-imageByApplyingTransform:(CGAffineTransform):CIImage*">
				<signature>CIImage.-imageByApplyingTransform:(CGAffineTransform):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageByClampingToExtent" uniqueID="-imageByClampingToExtent():CIImage*">
				<signature>CIImage.-imageByClampingToExtent():CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageByCompositingOverImage:" uniqueID="-imageByCompositingOverImage:(CIImage*):CIImage*">
				<signature>CIImage.-imageByCompositingOverImage:(CIImage*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageByCroppingToRect:" uniqueID="-imageByCroppingToRect:(CGRect):CIImage*">
				<signature>CIImage.-imageByCroppingToRect:(CGRect):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageTransformForOrientation:" uniqueID="-imageTransformForOrientation:(int):CGAffineTransform">
				<signature>CIImage.-imageTransformForOrientation:(int):CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBitmapData:bytesPerRow:size:format:colorSpace:" uniqueID="-initWithBitmapData:bytesPerRow:size:format:colorSpace:(NSData*;size_t;CGSize;CIFormat;struct CGColorSpace*):instancetype _Nonnull">
				<signature>CIImage.-initWithBitmapData:bytesPerRow:size:format:colorSpace:(NSData*;size_t;CGSize;CIFormat;struct CGColorSpace*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGImage:" uniqueID="-initWithCGImage:(struct CGImage*):instancetype _Nonnull">
				<signature>CIImage.-initWithCGImage:(struct CGImage*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGImage:options:" uniqueID="-initWithCGImage:options:(struct CGImage*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithCGImage:options:(struct CGImage*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGLayer:" uniqueID="-initWithCGLayer:(struct CGLayer*):instancetype _Nonnull">
				<signature>CIImage.-initWithCGLayer:(struct CGLayer*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGLayer:options:" uniqueID="-initWithCGLayer:options:(struct CGLayer*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithCGLayer:options:(struct CGLayer*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCVImageBuffer:" uniqueID="-initWithCVImageBuffer:(struct __CVBuffer*):instancetype _Nonnull">
				<signature>CIImage.-initWithCVImageBuffer:(struct __CVBuffer*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCVImageBuffer:options:" uniqueID="-initWithCVImageBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithCVImageBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCVPixelBuffer:" uniqueID="-initWithCVPixelBuffer:(struct __CVBuffer*):instancetype _Nonnull">
				<signature>CIImage.-initWithCVPixelBuffer:(struct __CVBuffer*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCVPixelBuffer:options:" uniqueID="-initWithCVPixelBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithCVPixelBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithColor:" uniqueID="-initWithColor:(CIColor*):instancetype _Nonnull">
				<signature>CIImage.-initWithColor:(CIColor*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):instancetype _Nullable">
				<signature>CIImage.-initWithContentsOfURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:options:" uniqueID="-initWithContentsOfURL:options:(NSURL*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nullable">
				<signature>CIImage.-initWithContentsOfURL:options:(NSURL*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:" uniqueID="-initWithData:(NSData*):instancetype _Nullable">
				<signature>CIImage.-initWithData:(NSData*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:options:" uniqueID="-initWithData:options:(NSData*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nullable">
				<signature>CIImage.-initWithData:options:(NSData*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:" uniqueID="-initWithImage:(UIImage*):instancetype _Nullable">
				<signature>CIImage.-initWithImage:(UIImage*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:options:" uniqueID="-initWithImage:options:(UIImage*;NSDictionary*):instancetype _Nullable">
				<signature>CIImage.-initWithImage:options:(UIImage*;NSDictionary*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImageProvider:size::format:colorSpace:options:" uniqueID="-initWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithMTLTexture:options:" uniqueID="-initWithMTLTexture:options:(objc_object&lt;MTLTexture&gt;*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithMTLTexture:options:(objc_object&lt;MTLTexture&gt;*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTexture:size:flipped:colorSpace:" uniqueID="-initWithTexture:size:flipped:colorSpace:(unsigned int;CGSize;BOOL;struct CGColorSpace*):instancetype _Nonnull">
				<signature>CIImage.-initWithTexture:size:flipped:colorSpace:(unsigned int;CGSize;BOOL;struct CGColorSpace*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTexture:size:flipped:options:" uniqueID="-initWithTexture:size:flipped:options:(unsigned int;CGSize;BOOL;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>CIImage.-initWithTexture:size:flipped:options:(unsigned int;CGSize;BOOL;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-properties" uniqueID="-properties():NSDictionary&lt;NSString *,id&gt;*">
				<signature>CIImage.-properties():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-regionOfInterestForImage:inRect:" uniqueID="-regionOfInterestForImage:inRect:(CIImage*;CGRect):CGRect">
				<signature>CIImage.-regionOfInterestForImage:inRect:(CIImage*;CGRect):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-url" uniqueID="-url():NSURL*">
				<signature>CIImage.-url():NSURL*</signature>
			</method>
		</class>
		<class name="NSDirectoryEnumerator" uniqueID="NSDirectoryEnumerator">
			<method accessibility="Public" methodKind="Member" name="-directoryAttributes" uniqueID="-directoryAttributes():NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSDirectoryEnumerator.-directoryAttributes():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileAttributes" uniqueID="-fileAttributes():NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSDirectoryEnumerator.-fileAttributes():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-level" uniqueID="-level():NSUInteger">
				<signature>NSDirectoryEnumerator.-level():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-skipDescendants" uniqueID="-skipDescendants():void">
				<signature>NSDirectoryEnumerator.-skipDescendants():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-skipDescendents" uniqueID="-skipDescendents():void">
				<signature>NSDirectoryEnumerator.-skipDescendents():void</signature>
			</method>
		</class>
		<class name="^(NSArray*;NSArray*;NSArray*):void" uniqueID="^(NSArray*;NSArray*;NSArray*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSArray*;NSArray*;NSArray*):void">
				<signature>^(NSArray*;NSArray*;NSArray*):void.-block(NSArray*;NSArray*;NSArray*):void</signature>
			</method>
		</class>
		<class name="UIView+UIViewHierarchy" uniqueID="UIView+UIViewHierarchy">
			<method accessibility="Public" methodKind="Member" name="-addSubview:" uniqueID="-addSubview:(UIView*):void">
				<signature>UIView+UIViewHierarchy.-addSubview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bringSubviewToFront:" uniqueID="-bringSubviewToFront:(UIView*):void">
				<signature>UIView+UIViewHierarchy.-bringSubviewToFront:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didAddSubview:" uniqueID="-didAddSubview:(UIView*):void">
				<signature>UIView+UIViewHierarchy.-didAddSubview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didMoveToSuperview" uniqueID="-didMoveToSuperview():void">
				<signature>UIView+UIViewHierarchy.-didMoveToSuperview():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didMoveToWindow" uniqueID="-didMoveToWindow():void">
				<signature>UIView+UIViewHierarchy.-didMoveToWindow():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeSubviewAtIndex:withSubviewAtIndex:" uniqueID="-exchangeSubviewAtIndex:withSubviewAtIndex:(NSInteger;NSInteger):void">
				<signature>UIView+UIViewHierarchy.-exchangeSubviewAtIndex:withSubviewAtIndex:(NSInteger;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSubview:aboveSubview:" uniqueID="-insertSubview:aboveSubview:(UIView*;UIView*):void">
				<signature>UIView+UIViewHierarchy.-insertSubview:aboveSubview:(UIView*;UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSubview:atIndex:" uniqueID="-insertSubview:atIndex:(UIView*;NSInteger):void">
				<signature>UIView+UIViewHierarchy.-insertSubview:atIndex:(UIView*;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSubview:belowSubview:" uniqueID="-insertSubview:belowSubview:(UIView*;UIView*):void">
				<signature>UIView+UIViewHierarchy.-insertSubview:belowSubview:(UIView*;UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDescendantOfView:" uniqueID="-isDescendantOfView:(UIView*):BOOL">
				<signature>UIView+UIViewHierarchy.-isDescendantOfView:(UIView*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutIfNeeded" uniqueID="-layoutIfNeeded():void">
				<signature>UIView+UIViewHierarchy.-layoutIfNeeded():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutMargins" uniqueID="-layoutMargins():UIEdgeInsets">
				<signature>UIView+UIViewHierarchy.-layoutMargins():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutMarginsDidChange" uniqueID="-layoutMarginsDidChange():void">
				<signature>UIView+UIViewHierarchy.-layoutMarginsDidChange():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutMarginsGuide" uniqueID="-layoutMarginsGuide():UILayoutGuide*">
				<signature>UIView+UIViewHierarchy.-layoutMarginsGuide():UILayoutGuide*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutSubviews" uniqueID="-layoutSubviews():void">
				<signature>UIView+UIViewHierarchy.-layoutSubviews():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preservesSuperviewLayoutMargins" uniqueID="-preservesSuperviewLayoutMargins():BOOL">
				<signature>UIView+UIViewHierarchy.-preservesSuperviewLayoutMargins():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readableContentGuide" uniqueID="-readableContentGuide():UILayoutGuide*">
				<signature>UIView+UIViewHierarchy.-readableContentGuide():UILayoutGuide*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeFromSuperview" uniqueID="-removeFromSuperview():void">
				<signature>UIView+UIViewHierarchy.-removeFromSuperview():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendSubviewToBack:" uniqueID="-sendSubviewToBack:(UIView*):void">
				<signature>UIView+UIViewHierarchy.-sendSubviewToBack:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLayoutMargins:" uniqueID="-setLayoutMargins:(UIEdgeInsets):void">
				<signature>UIView+UIViewHierarchy.-setLayoutMargins:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsLayout" uniqueID="-setNeedsLayout():void">
				<signature>UIView+UIViewHierarchy.-setNeedsLayout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreservesSuperviewLayoutMargins:" uniqueID="-setPreservesSuperviewLayoutMargins:(BOOL):void">
				<signature>UIView+UIViewHierarchy.-setPreservesSuperviewLayoutMargins:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subviews" uniqueID="-subviews():NSArray&lt;__kindof UIView *&gt;*">
				<signature>UIView+UIViewHierarchy.-subviews():NSArray&lt;__kindof UIView *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-superview" uniqueID="-superview():UIView*">
				<signature>UIView+UIViewHierarchy.-superview():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWithTag:" uniqueID="-viewWithTag:(NSInteger):__kindof UIView*">
				<signature>UIView+UIViewHierarchy.-viewWithTag:(NSInteger):__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willMoveToSuperview:" uniqueID="-willMoveToSuperview:(UIView*):void">
				<signature>UIView+UIViewHierarchy.-willMoveToSuperview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willMoveToWindow:" uniqueID="-willMoveToWindow:(UIWindow*):void">
				<signature>UIView+UIViewHierarchy.-willMoveToWindow:(UIWindow*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willRemoveSubview:" uniqueID="-willRemoveSubview:(UIView*):void">
				<signature>UIView+UIViewHierarchy.-willRemoveSubview:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-window" uniqueID="-window():UIWindow*">
				<signature>UIView+UIViewHierarchy.-window():UIWindow*</signature>
			</method>
		</class>
		<class name="JSValue+SubscriptSupport" uniqueID="JSValue+SubscriptSupport">
			<method accessibility="Public" methodKind="Member" name="-objectAtIndexedSubscript:" uniqueID="-objectAtIndexedSubscript:(NSUInteger):JSValue*">
				<signature>JSValue+SubscriptSupport.-objectAtIndexedSubscript:(NSUInteger):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKeyedSubscript:" uniqueID="-objectForKeyedSubscript:(id):JSValue*">
				<signature>JSValue+SubscriptSupport.-objectForKeyedSubscript:(id):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:atIndexedSubscript:" uniqueID="-setObject:atIndexedSubscript:(id;NSUInteger):void">
				<signature>JSValue+SubscriptSupport.-setObject:atIndexedSubscript:(id;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKeyedSubscript:" uniqueID="-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void">
				<signature>JSValue+SubscriptSupport.-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void</signature>
			</method>
		</class>
		<class name="JSValue+StructSupport" uniqueID="JSValue+StructSupport">
			<method accessibility="Public" methodKind="Member" name="-toPoint" uniqueID="-toPoint():CGPoint">
				<signature>JSValue+StructSupport.-toPoint():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toRange" uniqueID="-toRange():NSRange">
				<signature>JSValue+StructSupport.-toRange():NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toRect" uniqueID="-toRect():CGRect">
				<signature>JSValue+StructSupport.-toRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toSize" uniqueID="-toSize():CGSize">
				<signature>JSValue+StructSupport.-toSize():CGSize</signature>
			</method>
		</class>
		<class name="AVAudioSession+AVAudioSessionDeprecated" uniqueID="AVAudioSession+AVAudioSessionDeprecated">
			<method accessibility="Public" methodKind="Member" name="-currentHardwareInputNumberOfChannels" uniqueID="-currentHardwareInputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-currentHardwareInputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentHardwareOutputNumberOfChannels" uniqueID="-currentHardwareOutputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-currentHardwareOutputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentHardwareSampleRate" uniqueID="-currentHardwareSampleRate():double">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-currentHardwareSampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;AVAudioSessionDelegate&gt;*">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-delegate():objc_object&lt;AVAudioSessionDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputIsAvailable" uniqueID="-inputIsAvailable():BOOL">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-inputIsAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredHardwareSampleRate" uniqueID="-preferredHardwareSampleRate():double">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-preferredHardwareSampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActive:withFlags:error:" uniqueID="-setActive:withFlags:error:(BOOL;NSInteger;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-setActive:withFlags:error:(BOOL;NSInteger;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;AVAudioSessionDelegate&gt;*):void">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-setDelegate:(objc_object&lt;AVAudioSessionDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredHardwareSampleRate:error:" uniqueID="-setPreferredHardwareSampleRate:error:(double;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionDeprecated.-setPreferredHardwareSampleRate:error:(double;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedCompatibility" uniqueID="UIView+UIConstraintBasedCompatibility">
			<method accessibility="Public" methodKind="Member" name="-setTranslatesAutoresizingMaskIntoConstraints:" uniqueID="-setTranslatesAutoresizingMaskIntoConstraints:(BOOL):void">
				<signature>UIView+UIConstraintBasedCompatibility.-setTranslatesAutoresizingMaskIntoConstraints:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-translatesAutoresizingMaskIntoConstraints" uniqueID="-translatesAutoresizingMaskIntoConstraints():BOOL">
				<signature>UIView+UIConstraintBasedCompatibility.-translatesAutoresizingMaskIntoConstraints():BOOL</signature>
			</method>
		</class>
		<class name="NSString+NSURLUtilities" uniqueID="NSString+NSURLUtilities">
			<method accessibility="Public" methodKind="Member" name="-stringByAddingPercentEncodingWithAllowedCharacters:" uniqueID="-stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet*):NSString*">
				<signature>NSString+NSURLUtilities.-stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAddingPercentEscapesUsingEncoding:" uniqueID="-stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*">
				<signature>NSString+NSURLUtilities.-stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByRemovingPercentEncoding" uniqueID="-stringByRemovingPercentEncoding():NSString*">
				<signature>NSString+NSURLUtilities.-stringByRemovingPercentEncoding():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingPercentEscapesUsingEncoding:" uniqueID="-stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*">
				<signature>NSString+NSURLUtilities.-stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*</signature>
			</method>
		</class>
		<class name="JSValue+JSValueRefSupport" uniqueID="JSValue+JSValueRefSupport">
			<method accessibility="Public" methodKind="Member" name="-JSValueRef" uniqueID="-JSValueRef():JSValueRef">
				<signature>JSValue+JSValueRefSupport.-JSValueRef():JSValueRef</signature>
			</method>
		</class>
		<class name="UIRefreshControl" uniqueID="UIRefreshControl">
			<method accessibility="Public" methodKind="Member" name="-attributedTitle" uniqueID="-attributedTitle():NSAttributedString*">
				<signature>UIRefreshControl.-attributedTitle():NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginRefreshing" uniqueID="-beginRefreshing():void">
				<signature>UIRefreshControl.-beginRefreshing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endRefreshing" uniqueID="-endRefreshing():void">
				<signature>UIRefreshControl.-endRefreshing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>UIRefreshControl.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isRefreshing" uniqueID="-isRefreshing():BOOL">
				<signature>UIRefreshControl.-isRefreshing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedTitle:" uniqueID="-setAttributedTitle:(NSAttributedString*):void">
				<signature>UIRefreshControl.-setAttributedTitle:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintColor:" uniqueID="-setTintColor:(UIColor*):void">
				<signature>UIRefreshControl.-setTintColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColor" uniqueID="-tintColor():UIColor*">
				<signature>UIRefreshControl.-tintColor():UIColor*</signature>
			</method>
		</class>
		<class name="JSContext+SubscriptSupport" uniqueID="JSContext+SubscriptSupport">
			<method accessibility="Public" methodKind="Member" name="-objectForKeyedSubscript:" uniqueID="-objectForKeyedSubscript:(id):JSValue*">
				<signature>JSContext+SubscriptSupport.-objectForKeyedSubscript:(id):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKeyedSubscript:" uniqueID="-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void">
				<signature>JSContext+SubscriptSupport.-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void</signature>
			</method>
		</class>
		<class name="NSURLRequest+NSHTTPURLRequest" uniqueID="NSURLRequest+NSHTTPURLRequest">
			<method accessibility="Public" methodKind="Member" name="-HTTPBody" uniqueID="-HTTPBody():NSData*">
				<signature>NSURLRequest+NSHTTPURLRequest.-HTTPBody():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPBodyStream" uniqueID="-HTTPBodyStream():NSInputStream*">
				<signature>NSURLRequest+NSHTTPURLRequest.-HTTPBodyStream():NSInputStream*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPMethod" uniqueID="-HTTPMethod():NSString*">
				<signature>NSURLRequest+NSHTTPURLRequest.-HTTPMethod():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldHandleCookies" uniqueID="-HTTPShouldHandleCookies():BOOL">
				<signature>NSURLRequest+NSHTTPURLRequest.-HTTPShouldHandleCookies():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-HTTPShouldUsePipelining" uniqueID="-HTTPShouldUsePipelining():BOOL">
				<signature>NSURLRequest+NSHTTPURLRequest.-HTTPShouldUsePipelining():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allHTTPHeaderFields" uniqueID="-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>NSURLRequest+NSHTTPURLRequest.-allHTTPHeaderFields():NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForHTTPHeaderField:" uniqueID="-valueForHTTPHeaderField:(NSString*):NSString*">
				<signature>NSURLRequest+NSHTTPURLRequest.-valueForHTTPHeaderField:(NSString*):NSString*</signature>
			</method>
		</class>
		<class name="NSObject+UIAccessibilityFocus" uniqueID="NSObject+UIAccessibilityFocus">
			<method accessibility="Public" methodKind="Member" name="-accessibilityAssistiveTechnologyFocusedIdentifiers" uniqueID="-accessibilityAssistiveTechnologyFocusedIdentifiers():NSSet&lt;NSString *&gt;*">
				<signature>NSObject+UIAccessibilityFocus.-accessibilityAssistiveTechnologyFocusedIdentifiers():NSSet&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementDidBecomeFocused" uniqueID="-accessibilityElementDidBecomeFocused():void">
				<signature>NSObject+UIAccessibilityFocus.-accessibilityElementDidBecomeFocused():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementDidLoseFocus" uniqueID="-accessibilityElementDidLoseFocus():void">
				<signature>NSObject+UIAccessibilityFocus.-accessibilityElementDidLoseFocus():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementIsFocused" uniqueID="-accessibilityElementIsFocused():BOOL">
				<signature>NSObject+UIAccessibilityFocus.-accessibilityElementIsFocused():BOOL</signature>
			</method>
		</class>
		<class name="NSDate+NSExtendedDate" uniqueID="NSDate+NSExtendedDate">
			<method accessibility="Public" methodKind="Member" name="-addTimeInterval:" uniqueID="-addTimeInterval:(NSTimeInterval):id _Nonnull">
				<signature>NSDate+NSExtendedDate.-addTimeInterval:(NSTimeInterval):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:" uniqueID="-compare:(NSDate*):NSComparisonResult">
				<signature>NSDate+NSExtendedDate.-compare:(NSDate*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateByAddingTimeInterval:" uniqueID="-dateByAddingTimeInterval:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate+NSExtendedDate.-dateByAddingTimeInterval:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSDate+NSExtendedDate.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSDate+NSExtendedDate.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-earlierDate:" uniqueID="-earlierDate:(NSDate*):NSDate*">
				<signature>NSDate+NSExtendedDate.-earlierDate:(NSDate*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToDate:" uniqueID="-isEqualToDate:(NSDate*):BOOL">
				<signature>NSDate+NSExtendedDate.-isEqualToDate:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-laterDate:" uniqueID="-laterDate:(NSDate*):NSDate*">
				<signature>NSDate+NSExtendedDate.-laterDate:(NSDate*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSince1970" uniqueID="-timeIntervalSince1970():NSTimeInterval">
				<signature>NSDate+NSExtendedDate.-timeIntervalSince1970():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSinceDate:" uniqueID="-timeIntervalSinceDate:(NSDate*):NSTimeInterval">
				<signature>NSDate+NSExtendedDate.-timeIntervalSinceDate:(NSDate*):NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSinceNow" uniqueID="-timeIntervalSinceNow():NSTimeInterval">
				<signature>NSDate+NSExtendedDate.-timeIntervalSinceNow():NSTimeInterval</signature>
			</method>
		</class>
		<class name="NSMutableAttributedString" uniqueID="NSMutableAttributedString">
			<method accessibility="Public" methodKind="Member" name="-addAttribute:value:range:" uniqueID="-addAttribute:value:range:(NSString*;id _Nonnull;NSRange):void">
				<signature>NSMutableAttributedString.-addAttribute:value:range:(NSString*;id _Nonnull;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addAttributes:range:" uniqueID="-addAttributes:range:(NSDictionary&lt;NSString *,id&gt;*;NSRange):void">
				<signature>NSMutableAttributedString.-addAttributes:range:(NSDictionary&lt;NSString *,id&gt;*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-appendAttributedString:" uniqueID="-appendAttributedString:(NSAttributedString*):void">
				<signature>NSMutableAttributedString.-appendAttributedString:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginEditing" uniqueID="-beginEditing():void">
				<signature>NSMutableAttributedString.-beginEditing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteCharactersInRange:" uniqueID="-deleteCharactersInRange:(NSRange):void">
				<signature>NSMutableAttributedString.-deleteCharactersInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endEditing" uniqueID="-endEditing():void">
				<signature>NSMutableAttributedString.-endEditing():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fixAttributesInRange:" uniqueID="-fixAttributesInRange:(NSRange):void">
				<signature>NSMutableAttributedString.-fixAttributesInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertAttributedString:atIndex:" uniqueID="-insertAttributedString:atIndex:(NSAttributedString*;NSUInteger):void">
				<signature>NSMutableAttributedString.-insertAttributedString:atIndex:(NSAttributedString*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableString" uniqueID="-mutableString():NSMutableString*">
				<signature>NSMutableAttributedString.-mutableString():NSMutableString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readFromData:options:documentAttributes:error:" uniqueID="-readFromData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL">
				<signature>NSMutableAttributedString.-readFromData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readFromFileURL:options:documentAttributes:error:" uniqueID="-readFromFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):BOOL">
				<signature>NSMutableAttributedString.-readFromFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readFromURL:options:documentAttributes:error:" uniqueID="-readFromURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL">
				<signature>NSMutableAttributedString.-readFromURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAttribute:range:" uniqueID="-removeAttribute:range:(NSString*;NSRange):void">
				<signature>NSMutableAttributedString.-removeAttribute:range:(NSString*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceCharactersInRange:withAttributedString:" uniqueID="-replaceCharactersInRange:withAttributedString:(NSRange;NSAttributedString*):void">
				<signature>NSMutableAttributedString.-replaceCharactersInRange:withAttributedString:(NSRange;NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceCharactersInRange:withString:" uniqueID="-replaceCharactersInRange:withString:(NSRange;NSString*):void">
				<signature>NSMutableAttributedString.-replaceCharactersInRange:withString:(NSRange;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedString:" uniqueID="-setAttributedString:(NSAttributedString*):void">
				<signature>NSMutableAttributedString.-setAttributedString:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributes:range:" uniqueID="-setAttributes:range:(NSDictionary&lt;NSString *,id&gt;*;NSRange):void">
				<signature>NSMutableAttributedString.-setAttributes:range:(NSDictionary&lt;NSString *,id&gt;*;NSRange):void</signature>
			</method>
		</class>
		<class name="EKSource" uniqueID="EKSource">
			<method accessibility="Public" methodKind="Member" name="-calendars" uniqueID="-calendars():NSSet&lt;EKCalendar *&gt;*">
				<signature>EKSource.-calendars():NSSet&lt;EKCalendar *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendarsForEntityType:" uniqueID="-calendarsForEntityType:(EKEntityType):NSSet&lt;EKCalendar *&gt;*">
				<signature>EKSource.-calendarsForEntityType:(EKEntityType):NSSet&lt;EKCalendar *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sourceIdentifier" uniqueID="-sourceIdentifier():NSString*">
				<signature>EKSource.-sourceIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sourceType" uniqueID="-sourceType():EKSourceType">
				<signature>EKSource.-sourceType():EKSourceType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>EKSource.-title():NSString*</signature>
			</method>
		</class>
		<class name="EKEventStore" uniqueID="EKEventStore">
			<method accessibility="Public" methodKind="Member" name="-calendarItemWithIdentifier:" uniqueID="-calendarItemWithIdentifier:(NSString*):EKCalendarItem*">
				<signature>EKEventStore.-calendarItemWithIdentifier:(NSString*):EKCalendarItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendarItemsWithExternalIdentifier:" uniqueID="-calendarItemsWithExternalIdentifier:(NSString*):NSArray&lt;EKCalendarItem *&gt;*">
				<signature>EKEventStore.-calendarItemsWithExternalIdentifier:(NSString*):NSArray&lt;EKCalendarItem *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendarWithIdentifier:" uniqueID="-calendarWithIdentifier:(NSString*):EKCalendar*">
				<signature>EKEventStore.-calendarWithIdentifier:(NSString*):EKCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendars" uniqueID="-calendars():NSArray&lt;EKCalendar *&gt;*">
				<signature>EKEventStore.-calendars():NSArray&lt;EKCalendar *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendarsForEntityType:" uniqueID="-calendarsForEntityType:(EKEntityType):NSArray&lt;EKCalendar *&gt;*">
				<signature>EKEventStore.-calendarsForEntityType:(EKEntityType):NSArray&lt;EKCalendar *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelFetchRequest:" uniqueID="-cancelFetchRequest:(id _Nonnull):void">
				<signature>EKEventStore.-cancelFetchRequest:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-commit:" uniqueID="-commit:(NSError**):BOOL">
				<signature>EKEventStore.-commit:(NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-defaultCalendarForNewEvents" uniqueID="-defaultCalendarForNewEvents():EKCalendar*">
				<signature>EKEventStore.-defaultCalendarForNewEvents():EKCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-defaultCalendarForNewReminders" uniqueID="-defaultCalendarForNewReminders():EKCalendar*">
				<signature>EKEventStore.-defaultCalendarForNewReminders():EKCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegateSources" uniqueID="-delegateSources():NSArray&lt;EKSource *&gt;*">
				<signature>EKEventStore.-delegateSources():NSArray&lt;EKSource *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateEventsMatchingPredicate:usingBlock:" uniqueID="-enumerateEventsMatchingPredicate:usingBlock:(NSPredicate*;(^)(EKEvent*;BOOL*):void):void">
				<signature>EKEventStore.-enumerateEventsMatchingPredicate:usingBlock:(NSPredicate*;(^)(EKEvent*;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-eventStoreIdentifier" uniqueID="-eventStoreIdentifier():NSString*">
				<signature>EKEventStore.-eventStoreIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-eventWithIdentifier:" uniqueID="-eventWithIdentifier:(NSString*):EKEvent*">
				<signature>EKEventStore.-eventWithIdentifier:(NSString*):EKEvent*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-eventsMatchingPredicate:" uniqueID="-eventsMatchingPredicate:(NSPredicate*):NSArray&lt;EKEvent *&gt;*">
				<signature>EKEventStore.-eventsMatchingPredicate:(NSPredicate*):NSArray&lt;EKEvent *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fetchRemindersMatchingPredicate:completion:" uniqueID="-fetchRemindersMatchingPredicate:completion:(NSPredicate*;(^)(NSArray&lt;EKReminder *&gt;*):void):id _Nonnull">
				<signature>EKEventStore.-fetchRemindersMatchingPredicate:completion:(NSPredicate*;(^)(NSArray&lt;EKReminder *&gt;*):void):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():id _Nonnull">
				<signature>EKEventStore.-init():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithAccessToEntityTypes:" uniqueID="-initWithAccessToEntityTypes:(EKEntityMask):id _Nonnull">
				<signature>EKEventStore.-initWithAccessToEntityTypes:(EKEntityMask):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithSources:" uniqueID="-initWithSources:(NSArray&lt;EKSource *&gt;*):instancetype _Nonnull">
				<signature>EKEventStore.-initWithSources:(NSArray&lt;EKSource *&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:" uniqueID="-predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:(NSDate*;NSDate*;NSArray&lt;EKCalendar *&gt;*):NSPredicate*">
				<signature>EKEventStore.-predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:(NSDate*;NSDate*;NSArray&lt;EKCalendar *&gt;*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predicateForEventsWithStartDate:endDate:calendars:" uniqueID="-predicateForEventsWithStartDate:endDate:calendars:(NSDate*;NSDate*;NSArray&lt;EKCalendar *&gt;*):NSPredicate*">
				<signature>EKEventStore.-predicateForEventsWithStartDate:endDate:calendars:(NSDate*;NSDate*;NSArray&lt;EKCalendar *&gt;*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:" uniqueID="-predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:(NSDate*;NSDate*;NSArray&lt;EKCalendar *&gt;*):NSPredicate*">
				<signature>EKEventStore.-predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:(NSDate*;NSDate*;NSArray&lt;EKCalendar *&gt;*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-predicateForRemindersInCalendars:" uniqueID="-predicateForRemindersInCalendars:(NSArray&lt;EKCalendar *&gt;*):NSPredicate*">
				<signature>EKEventStore.-predicateForRemindersInCalendars:(NSArray&lt;EKCalendar *&gt;*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-refreshSourcesIfNecessary" uniqueID="-refreshSourcesIfNecessary():void">
				<signature>EKEventStore.-refreshSourcesIfNecessary():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCalendar:commit:error:" uniqueID="-removeCalendar:commit:error:(EKCalendar*;BOOL;NSError**):BOOL">
				<signature>EKEventStore.-removeCalendar:commit:error:(EKCalendar*;BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeEvent:span:commit:error:" uniqueID="-removeEvent:span:commit:error:(EKEvent*;EKSpan;BOOL;NSError**):BOOL">
				<signature>EKEventStore.-removeEvent:span:commit:error:(EKEvent*;EKSpan;BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeEvent:span:error:" uniqueID="-removeEvent:span:error:(EKEvent*;EKSpan;NSError**):BOOL">
				<signature>EKEventStore.-removeEvent:span:error:(EKEvent*;EKSpan;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeReminder:commit:error:" uniqueID="-removeReminder:commit:error:(EKReminder*;BOOL;NSError**):BOOL">
				<signature>EKEventStore.-removeReminder:commit:error:(EKReminder*;BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestAccessToEntityType:completion:" uniqueID="-requestAccessToEntityType:completion:(EKEntityType;(^)(BOOL;NSError*):void):void">
				<signature>EKEventStore.-requestAccessToEntityType:completion:(EKEntityType;(^)(BOOL;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reset" uniqueID="-reset():void">
				<signature>EKEventStore.-reset():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveCalendar:commit:error:" uniqueID="-saveCalendar:commit:error:(EKCalendar*;BOOL;NSError**):BOOL">
				<signature>EKEventStore.-saveCalendar:commit:error:(EKCalendar*;BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveEvent:span:commit:error:" uniqueID="-saveEvent:span:commit:error:(EKEvent*;EKSpan;BOOL;NSError**):BOOL">
				<signature>EKEventStore.-saveEvent:span:commit:error:(EKEvent*;EKSpan;BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveEvent:span:error:" uniqueID="-saveEvent:span:error:(EKEvent*;EKSpan;NSError**):BOOL">
				<signature>EKEventStore.-saveEvent:span:error:(EKEvent*;EKSpan;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveReminder:commit:error:" uniqueID="-saveReminder:commit:error:(EKReminder*;BOOL;NSError**):BOOL">
				<signature>EKEventStore.-saveReminder:commit:error:(EKReminder*;BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sourceWithIdentifier:" uniqueID="-sourceWithIdentifier:(NSString*):EKSource*">
				<signature>EKEventStore.-sourceWithIdentifier:(NSString*):EKSource*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sources" uniqueID="-sources():NSArray&lt;EKSource *&gt;*">
				<signature>EKEventStore.-sources():NSArray&lt;EKSource *&gt;*</signature>
			</method>
		</class>
		<class name="PDFManualTableViewController" uniqueID="PDFManualTableViewController">
			<method accessibility="Public" methodKind="Member" name="-arr" uniqueID="-arr():NSMutableArray*">
				<signature>PDFManualTableViewController.-arr():NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-closePDF:" uniqueID="-closePDF:(id):void">
				<signature>PDFManualTableViewController.-closePDF:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didFailWithError:" uniqueID="-connection:didFailWithError:(NSURLConnection*;NSError*):void">
				<signature>PDFManualTableViewController.-connection:didFailWithError:(NSURLConnection*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didReceiveData:" uniqueID="-connection:didReceiveData:(NSURLConnection*;NSData*):void">
				<signature>PDFManualTableViewController.-connection:didReceiveData:(NSURLConnection*;NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didReceiveResponse:" uniqueID="-connection:didReceiveResponse:(NSURLConnection*;NSURLResponse*):void">
				<signature>PDFManualTableViewController.-connection:didReceiveResponse:(NSURLConnection*;NSURLResponse*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:willCacheResponse:" uniqueID="-connection:willCacheResponse:(NSURLConnection*;NSCachedURLResponse*):NSCachedURLResponse*">
				<signature>PDFManualTableViewController.-connection:willCacheResponse:(NSURLConnection*;NSCachedURLResponse*):NSCachedURLResponse*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connectionDidFinishLoading:" uniqueID="-connectionDidFinishLoading:(NSURLConnection*):void">
				<signature>PDFManualTableViewController.-connectionDidFinishLoading:(NSURLConnection*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>PDFManualTableViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfSectionsInTableView:" uniqueID="-numberOfSectionsInTableView:(UITableView*):NSInteger">
				<signature>PDFManualTableViewController.-numberOfSectionsInTableView:(UITableView*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-responseData" uniqueID="-responseData():NSMutableData*">
				<signature>PDFManualTableViewController.-responseData():NSMutableData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setArr:" uniqueID="-setArr:(NSMutableArray*):void">
				<signature>PDFManualTableViewController.-setArr:(NSMutableArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setResponseData:" uniqueID="-setResponseData:(NSMutableData*):void">
				<signature>PDFManualTableViewController.-setResponseData:(NSMutableData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:cellForRowAtIndexPath:" uniqueID="-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*">
				<signature>PDFManualTableViewController.-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didSelectRowAtIndexPath:" uniqueID="-tableView:didSelectRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>PDFManualTableViewController.-tableView:didSelectRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:numberOfRowsInSection:" uniqueID="-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger">
				<signature>PDFManualTableViewController.-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>PDFManualTableViewController.-viewDidLoad():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillDisappear:" uniqueID="-viewWillDisappear:(BOOL):void">
				<signature>PDFManualTableViewController.-viewWillDisappear:(BOOL):void</signature>
			</method>
		</class>
		<class name="UIView+UIViewMotionEffects" uniqueID="UIView+UIViewMotionEffects">
			<method accessibility="Public" methodKind="Member" name="-addMotionEffect:" uniqueID="-addMotionEffect:(UIMotionEffect*):void">
				<signature>UIView+UIViewMotionEffects.-addMotionEffect:(UIMotionEffect*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-motionEffects" uniqueID="-motionEffects():NSArray&lt;__kindof UIMotionEffect *&gt;*">
				<signature>UIView+UIViewMotionEffects.-motionEffects():NSArray&lt;__kindof UIMotionEffect *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeMotionEffect:" uniqueID="-removeMotionEffect:(UIMotionEffect*):void">
				<signature>UIView+UIViewMotionEffects.-removeMotionEffect:(UIMotionEffect*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMotionEffects:" uniqueID="-setMotionEffects:(NSArray&lt;__kindof UIMotionEffect *&gt;*):void">
				<signature>UIView+UIViewMotionEffects.-setMotionEffects:(NSArray&lt;__kindof UIMotionEffect *&gt;*):void</signature>
			</method>
		</class>
		<class name="NSObject+NSCoderMethods" uniqueID="NSObject+NSCoderMethods">
			<method accessibility="Public" methodKind="Member" name="-awakeAfterUsingCoder:" uniqueID="-awakeAfterUsingCoder:(NSCoder*):id _Nullable">
				<signature>NSObject+NSCoderMethods.-awakeAfterUsingCoder:(NSCoder*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-classForCoder" uniqueID="-classForCoder():Class*">
				<signature>NSObject+NSCoderMethods.-classForCoder():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replacementObjectForCoder:" uniqueID="-replacementObjectForCoder:(NSCoder*):id _Nullable">
				<signature>NSObject+NSCoderMethods.-replacementObjectForCoder:(NSCoder*):id _Nullable</signature>
			</method>
		</class>
		<class name="NSObject+NSErrorRecoveryAttempting" uniqueID="NSObject+NSErrorRecoveryAttempting">
			<method accessibility="Public" methodKind="Member" name="-attemptRecoveryFromError:optionIndex:" uniqueID="-attemptRecoveryFromError:optionIndex:(NSError*;NSUInteger):BOOL">
				<signature>NSObject+NSErrorRecoveryAttempting.-attemptRecoveryFromError:optionIndex:(NSError*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:" uniqueID="-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:(NSError*;NSUInteger;id _Nullable;SEL _Nullable;void*):void">
				<signature>NSObject+NSErrorRecoveryAttempting.-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:(NSError*;NSUInteger;id _Nullable;SEL _Nullable;void*):void</signature>
			</method>
		</class>
		<class name="^(NSData*;NSURLResponse*;NSError*):void" uniqueID="^(NSData*;NSURLResponse*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSData*;NSURLResponse*;NSError*):void">
				<signature>^(NSData*;NSURLResponse*;NSError*):void.-block(NSData*;NSURLResponse*;NSError*):void</signature>
			</method>
		</class>
		<class name="JSContext" uniqueID="JSContext">
			<method accessibility="Public" methodKind="Member" name="-JSGlobalContextRef" uniqueID="-JSGlobalContextRef():JSGlobalContextRef">
				<signature>JSContext.-JSGlobalContextRef():JSGlobalContextRef</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-evaluateScript:" uniqueID="-evaluateScript:(NSString*):JSValue*">
				<signature>JSContext.-evaluateScript:(NSString*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-evaluateScript:withSourceURL:" uniqueID="-evaluateScript:withSourceURL:(NSString*;NSURL*):JSValue*">
				<signature>JSContext.-evaluateScript:withSourceURL:(NSString*;NSURL*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exception" uniqueID="-exception():JSValue*">
				<signature>JSContext.-exception():JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exceptionHandler" uniqueID="-exceptionHandler():(^)(JSContext*;JSValue*):void">
				<signature>JSContext.-exceptionHandler():(^)(JSContext*;JSValue*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-globalObject" uniqueID="-globalObject():JSValue*">
				<signature>JSContext.-globalObject():JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype">
				<signature>JSContext.-init():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithVirtualMachine:" uniqueID="-initWithVirtualMachine:(JSVirtualMachine*):instancetype">
				<signature>JSContext.-initWithVirtualMachine:(JSVirtualMachine*):instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>JSContext.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKeyedSubscript:" uniqueID="-objectForKeyedSubscript:(id):JSValue*">
				<signature>JSContext.-objectForKeyedSubscript:(id):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setException:" uniqueID="-setException:(JSValue*):void">
				<signature>JSContext.-setException:(JSValue*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setExceptionHandler:" uniqueID="-setExceptionHandler:((^)(JSContext*;JSValue*):void):void">
				<signature>JSContext.-setExceptionHandler:((^)(JSContext*;JSValue*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setName:" uniqueID="-setName:(NSString*):void">
				<signature>JSContext.-setName:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKeyedSubscript:" uniqueID="-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void">
				<signature>JSContext.-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-virtualMachine" uniqueID="-virtualMachine():JSVirtualMachine*">
				<signature>JSContext.-virtualMachine():JSVirtualMachine*</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_AppDelegate_m_156_51" uniqueID="Closure_@___x_AcmeAirlines_AppDelegate_m_156_51">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(char):void">
				<signature>Closure_@___x_AcmeAirlines_AppDelegate_m_156_51.-block(char):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init(const AVAudioSession*;const AppDelegate*):void">
				<signature>Closure_@___x_AcmeAirlines_AppDelegate_m_156_51.-init(const AVAudioSession*;const AppDelegate*):void</signature>
			</method>
		</class>
		<class name="NSMutableDictionary+NSKeyValueCoding" uniqueID="NSMutableDictionary+NSKeyValueCoding">
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(ObjectType _Nullable;NSString*):void">
				<signature>NSMutableDictionary+NSKeyValueCoding.-setValue:forKey:(ObjectType _Nullable;NSString*):void</signature>
			</method>
		</class>
		<class name="^(char):void" uniqueID="^(char):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(char):void">
				<signature>^(char):void.-block(char):void</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_66_63" uniqueID="Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_66_63">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(bool;__CFError*):void">
				<signature>Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_66_63.-block(bool;__CFError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init(const AddedVulnerabilities*):void">
				<signature>Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_66_63.-init(const AddedVulnerabilities*):void</signature>
			</method>
		</class>
		<class name="MKMapView" uniqueID="MKMapView">
			<method accessibility="Public" methodKind="Member" name="-addAnnotation:" uniqueID="-addAnnotation:(objc_object&lt;MKAnnotation&gt;*):void">
				<signature>MKMapView.-addAnnotation:(objc_object&lt;MKAnnotation&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addAnnotations:" uniqueID="-addAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*):void">
				<signature>MKMapView.-addAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlay:" uniqueID="-addOverlay:(objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView.-addOverlay:(objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlay:level:" uniqueID="-addOverlay:level:(objc_object&lt;MKOverlay&gt;*;MKOverlayLevel):void">
				<signature>MKMapView.-addOverlay:level:(objc_object&lt;MKOverlay&gt;*;MKOverlayLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlays:" uniqueID="-addOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void">
				<signature>MKMapView.-addOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOverlays:level:" uniqueID="-addOverlays:level:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*;MKOverlayLevel):void">
				<signature>MKMapView.-addOverlays:level:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*;MKOverlayLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-annotationVisibleRect" uniqueID="-annotationVisibleRect():CGRect">
				<signature>MKMapView.-annotationVisibleRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-annotations" uniqueID="-annotations():NSArray&lt;id&lt;MKAnnotation&gt;&gt;*">
				<signature>MKMapView.-annotations():NSArray&lt;id&lt;MKAnnotation&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-annotationsInMapRect:" uniqueID="-annotationsInMapRect:(MKMapRect):NSSet&lt;id&lt;MKAnnotation&gt;&gt;*">
				<signature>MKMapView.-annotationsInMapRect:(MKMapRect):NSSet&lt;id&lt;MKAnnotation&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-camera" uniqueID="-camera():MKMapCamera*">
				<signature>MKMapView.-camera():MKMapCamera*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerCoordinate" uniqueID="-centerCoordinate():CLLocationCoordinate2D">
				<signature>MKMapView.-centerCoordinate():CLLocationCoordinate2D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertCoordinate:toPointToView:" uniqueID="-convertCoordinate:toPointToView:(CLLocationCoordinate2D;UIView*):CGPoint">
				<signature>MKMapView.-convertCoordinate:toPointToView:(CLLocationCoordinate2D;UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:toCoordinateFromView:" uniqueID="-convertPoint:toCoordinateFromView:(CGPoint;UIView*):CLLocationCoordinate2D">
				<signature>MKMapView.-convertPoint:toCoordinateFromView:(CGPoint;UIView*):CLLocationCoordinate2D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:toRegionFromView:" uniqueID="-convertRect:toRegionFromView:(CGRect;UIView*):MKCoordinateRegion">
				<signature>MKMapView.-convertRect:toRegionFromView:(CGRect;UIView*):MKCoordinateRegion</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRegion:toRectToView:" uniqueID="-convertRegion:toRectToView:(MKCoordinateRegion;UIView*):CGRect">
				<signature>MKMapView.-convertRegion:toRectToView:(MKCoordinateRegion;UIView*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;MKMapViewDelegate&gt;*">
				<signature>MKMapView.-delegate():objc_object&lt;MKMapViewDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dequeueReusableAnnotationViewWithIdentifier:" uniqueID="-dequeueReusableAnnotationViewWithIdentifier:(NSString*):MKAnnotationView*">
				<signature>MKMapView.-dequeueReusableAnnotationViewWithIdentifier:(NSString*):MKAnnotationView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deselectAnnotation:animated:" uniqueID="-deselectAnnotation:animated:(objc_object&lt;MKAnnotation&gt;*;BOOL):void">
				<signature>MKMapView.-deselectAnnotation:animated:(objc_object&lt;MKAnnotation&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeOverlay:withOverlay:" uniqueID="-exchangeOverlay:withOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView.-exchangeOverlay:withOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-exchangeOverlayAtIndex:withOverlayAtIndex:" uniqueID="-exchangeOverlayAtIndex:withOverlayAtIndex:(NSUInteger;NSUInteger):void">
				<signature>MKMapView.-exchangeOverlayAtIndex:withOverlayAtIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:aboveOverlay:" uniqueID="-insertOverlay:aboveOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView.-insertOverlay:aboveOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:atIndex:" uniqueID="-insertOverlay:atIndex:(objc_object&lt;MKOverlay&gt;*;NSUInteger):void">
				<signature>MKMapView.-insertOverlay:atIndex:(objc_object&lt;MKOverlay&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:atIndex:level:" uniqueID="-insertOverlay:atIndex:level:(objc_object&lt;MKOverlay&gt;*;NSUInteger;MKOverlayLevel):void">
				<signature>MKMapView.-insertOverlay:atIndex:level:(objc_object&lt;MKOverlay&gt;*;NSUInteger;MKOverlayLevel):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertOverlay:belowOverlay:" uniqueID="-insertOverlay:belowOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView.-insertOverlay:belowOverlay:(objc_object&lt;MKOverlay&gt;*;objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isPitchEnabled" uniqueID="-isPitchEnabled():BOOL">
				<signature>MKMapView.-isPitchEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isRotateEnabled" uniqueID="-isRotateEnabled():BOOL">
				<signature>MKMapView.-isRotateEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isScrollEnabled" uniqueID="-isScrollEnabled():BOOL">
				<signature>MKMapView.-isScrollEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUserLocationVisible" uniqueID="-isUserLocationVisible():BOOL">
				<signature>MKMapView.-isUserLocationVisible():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isZoomEnabled" uniqueID="-isZoomEnabled():BOOL">
				<signature>MKMapView.-isZoomEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapRectThatFits:" uniqueID="-mapRectThatFits:(MKMapRect):MKMapRect">
				<signature>MKMapView.-mapRectThatFits:(MKMapRect):MKMapRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapRectThatFits:edgePadding:" uniqueID="-mapRectThatFits:edgePadding:(MKMapRect;UIEdgeInsets):MKMapRect">
				<signature>MKMapView.-mapRectThatFits:edgePadding:(MKMapRect;UIEdgeInsets):MKMapRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapType" uniqueID="-mapType():MKMapType">
				<signature>MKMapView.-mapType():MKMapType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overlays" uniqueID="-overlays():NSArray&lt;id&lt;MKOverlay&gt;&gt;*">
				<signature>MKMapView.-overlays():NSArray&lt;id&lt;MKOverlay&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overlaysInLevel:" uniqueID="-overlaysInLevel:(MKOverlayLevel):NSArray&lt;id&lt;MKOverlay&gt;&gt;*">
				<signature>MKMapView.-overlaysInLevel:(MKOverlayLevel):NSArray&lt;id&lt;MKOverlay&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-region" uniqueID="-region():MKCoordinateRegion">
				<signature>MKMapView.-region():MKCoordinateRegion</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-regionThatFits:" uniqueID="-regionThatFits:(MKCoordinateRegion):MKCoordinateRegion">
				<signature>MKMapView.-regionThatFits:(MKCoordinateRegion):MKCoordinateRegion</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAnnotation:" uniqueID="-removeAnnotation:(objc_object&lt;MKAnnotation&gt;*):void">
				<signature>MKMapView.-removeAnnotation:(objc_object&lt;MKAnnotation&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAnnotations:" uniqueID="-removeAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*):void">
				<signature>MKMapView.-removeAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeOverlay:" uniqueID="-removeOverlay:(objc_object&lt;MKOverlay&gt;*):void">
				<signature>MKMapView.-removeOverlay:(objc_object&lt;MKOverlay&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeOverlays:" uniqueID="-removeOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void">
				<signature>MKMapView.-removeOverlays:(NSArray&lt;id&lt;MKOverlay&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rendererForOverlay:" uniqueID="-rendererForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayRenderer*">
				<signature>MKMapView.-rendererForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayRenderer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectAnnotation:animated:" uniqueID="-selectAnnotation:animated:(objc_object&lt;MKAnnotation&gt;*;BOOL):void">
				<signature>MKMapView.-selectAnnotation:animated:(objc_object&lt;MKAnnotation&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedAnnotations" uniqueID="-selectedAnnotations():NSArray&lt;id&lt;MKAnnotation&gt;&gt;*">
				<signature>MKMapView.-selectedAnnotations():NSArray&lt;id&lt;MKAnnotation&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCamera:" uniqueID="-setCamera:(MKMapCamera*):void">
				<signature>MKMapView.-setCamera:(MKMapCamera*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCamera:animated:" uniqueID="-setCamera:animated:(MKMapCamera*;BOOL):void">
				<signature>MKMapView.-setCamera:animated:(MKMapCamera*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenterCoordinate:" uniqueID="-setCenterCoordinate:(CLLocationCoordinate2D):void">
				<signature>MKMapView.-setCenterCoordinate:(CLLocationCoordinate2D):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenterCoordinate:animated:" uniqueID="-setCenterCoordinate:animated:(CLLocationCoordinate2D;BOOL):void">
				<signature>MKMapView.-setCenterCoordinate:animated:(CLLocationCoordinate2D;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;MKMapViewDelegate&gt;*):void">
				<signature>MKMapView.-setDelegate:(objc_object&lt;MKMapViewDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMapType:" uniqueID="-setMapType:(MKMapType):void">
				<signature>MKMapView.-setMapType:(MKMapType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPitchEnabled:" uniqueID="-setPitchEnabled:(BOOL):void">
				<signature>MKMapView.-setPitchEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRegion:" uniqueID="-setRegion:(MKCoordinateRegion):void">
				<signature>MKMapView.-setRegion:(MKCoordinateRegion):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRegion:animated:" uniqueID="-setRegion:animated:(MKCoordinateRegion;BOOL):void">
				<signature>MKMapView.-setRegion:animated:(MKCoordinateRegion;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRotateEnabled:" uniqueID="-setRotateEnabled:(BOOL):void">
				<signature>MKMapView.-setRotateEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScrollEnabled:" uniqueID="-setScrollEnabled:(BOOL):void">
				<signature>MKMapView.-setScrollEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedAnnotations:" uniqueID="-setSelectedAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*):void">
				<signature>MKMapView.-setSelectedAnnotations:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsBuildings:" uniqueID="-setShowsBuildings:(BOOL):void">
				<signature>MKMapView.-setShowsBuildings:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsCompass:" uniqueID="-setShowsCompass:(BOOL):void">
				<signature>MKMapView.-setShowsCompass:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsPointsOfInterest:" uniqueID="-setShowsPointsOfInterest:(BOOL):void">
				<signature>MKMapView.-setShowsPointsOfInterest:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsScale:" uniqueID="-setShowsScale:(BOOL):void">
				<signature>MKMapView.-setShowsScale:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsTraffic:" uniqueID="-setShowsTraffic:(BOOL):void">
				<signature>MKMapView.-setShowsTraffic:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsUserLocation:" uniqueID="-setShowsUserLocation:(BOOL):void">
				<signature>MKMapView.-setShowsUserLocation:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserTrackingMode:" uniqueID="-setUserTrackingMode:(MKUserTrackingMode):void">
				<signature>MKMapView.-setUserTrackingMode:(MKUserTrackingMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserTrackingMode:animated:" uniqueID="-setUserTrackingMode:animated:(MKUserTrackingMode;BOOL):void">
				<signature>MKMapView.-setUserTrackingMode:animated:(MKUserTrackingMode;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVisibleMapRect:" uniqueID="-setVisibleMapRect:(MKMapRect):void">
				<signature>MKMapView.-setVisibleMapRect:(MKMapRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVisibleMapRect:animated:" uniqueID="-setVisibleMapRect:animated:(MKMapRect;BOOL):void">
				<signature>MKMapView.-setVisibleMapRect:animated:(MKMapRect;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVisibleMapRect:edgePadding:animated:" uniqueID="-setVisibleMapRect:edgePadding:animated:(MKMapRect;UIEdgeInsets;BOOL):void">
				<signature>MKMapView.-setVisibleMapRect:edgePadding:animated:(MKMapRect;UIEdgeInsets;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setZoomEnabled:" uniqueID="-setZoomEnabled:(BOOL):void">
				<signature>MKMapView.-setZoomEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showAnnotations:animated:" uniqueID="-showAnnotations:animated:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*;BOOL):void">
				<signature>MKMapView.-showAnnotations:animated:(NSArray&lt;id&lt;MKAnnotation&gt;&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsBuildings" uniqueID="-showsBuildings():BOOL">
				<signature>MKMapView.-showsBuildings():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsCompass" uniqueID="-showsCompass():BOOL">
				<signature>MKMapView.-showsCompass():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsPointsOfInterest" uniqueID="-showsPointsOfInterest():BOOL">
				<signature>MKMapView.-showsPointsOfInterest():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsScale" uniqueID="-showsScale():BOOL">
				<signature>MKMapView.-showsScale():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsTraffic" uniqueID="-showsTraffic():BOOL">
				<signature>MKMapView.-showsTraffic():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsUserLocation" uniqueID="-showsUserLocation():BOOL">
				<signature>MKMapView.-showsUserLocation():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userLocation" uniqueID="-userLocation():MKUserLocation*">
				<signature>MKMapView.-userLocation():MKUserLocation*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userTrackingMode" uniqueID="-userTrackingMode():MKUserTrackingMode">
				<signature>MKMapView.-userTrackingMode():MKUserTrackingMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForAnnotation:" uniqueID="-viewForAnnotation:(objc_object&lt;MKAnnotation&gt;*):MKAnnotationView*">
				<signature>MKMapView.-viewForAnnotation:(objc_object&lt;MKAnnotation&gt;*):MKAnnotationView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForOverlay:" uniqueID="-viewForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayView*">
				<signature>MKMapView.-viewForOverlay:(objc_object&lt;MKOverlay&gt;*):MKOverlayView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-visibleMapRect" uniqueID="-visibleMapRect():MKMapRect">
				<signature>MKMapView.-visibleMapRect():MKMapRect</signature>
			</method>
		</class>
		<class name="^(bool;__CFError*):void" uniqueID="^(bool;__CFError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(bool;__CFError*):void">
				<signature>^(bool;__CFError*):void.-block(bool;__CFError*):void</signature>
			</method>
		</class>
		<class name="^(NSCachedURLResponse*):void" uniqueID="^(NSCachedURLResponse*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSCachedURLResponse*):void">
				<signature>^(NSCachedURLResponse*):void.-block(NSCachedURLResponse*):void</signature>
			</method>
		</class>
		<class name="NSIndexPath+UICollectionViewAdditions" uniqueID="NSIndexPath+UICollectionViewAdditions">
			<method accessibility="Public" methodKind="Member" name="-item" uniqueID="-item():NSInteger">
				<signature>NSIndexPath+UICollectionViewAdditions.-item():NSInteger</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSDeprecatedKitAdditions" uniqueID="NSAttributedString+NSDeprecatedKitAdditions">
			<method accessibility="Public" methodKind="Member" name="-initWithFileURL:options:documentAttributes:error:" uniqueID="-initWithFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):instancetype _Nullable">
				<signature>NSAttributedString+NSDeprecatedKitAdditions.-initWithFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_348_71" uniqueID="Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_348_71">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(char;NSError*):void">
				<signature>Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_348_71.-block(char;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init(const NSCalendar*;const EKEventStore*;const AddedVulnerabilities*):void">
				<signature>Closure_@___x_AcmeAirlines_AddedVulnerabilities_m_348_71.-init(const NSCalendar*;const EKEventStore*;const AddedVulnerabilities*):void</signature>
			</method>
		</class>
		<class name="NSEnumerator" uniqueID="NSEnumerator">
			<method accessibility="Public" methodKind="Member" name="-allObjects" uniqueID="-allObjects():NSArray&lt;ObjectType&gt;*">
				<signature>NSEnumerator.-allObjects():NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextObject" uniqueID="-nextObject():ObjectType _Nullable">
				<signature>NSEnumerator.-nextObject():ObjectType _Nullable</signature>
			</method>
		</class>
		<class name="NSData+NSExtendedData" uniqueID="NSData+NSExtendedData">
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSData+NSExtendedData.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateByteRangesUsingBlock:" uniqueID="-enumerateByteRangesUsingBlock:((^)(const void*;NSRange;BOOL*):void):void">
				<signature>NSData+NSExtendedData.-enumerateByteRangesUsingBlock:((^)(const void*;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:length:" uniqueID="-getBytes:length:(void*;NSUInteger):void">
				<signature>NSData+NSExtendedData.-getBytes:length:(void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:range:" uniqueID="-getBytes:range:(void*;NSRange):void">
				<signature>NSData+NSExtendedData.-getBytes:range:(void*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToData:" uniqueID="-isEqualToData:(NSData*):BOOL">
				<signature>NSData+NSExtendedData.-isEqualToData:(NSData*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfData:options:range:" uniqueID="-rangeOfData:options:range:(NSData*;NSDataSearchOptions;NSRange):NSRange">
				<signature>NSData+NSExtendedData.-rangeOfData:options:range:(NSData*;NSDataSearchOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subdataWithRange:" uniqueID="-subdataWithRange:(NSRange):NSData*">
				<signature>NSData+NSExtendedData.-subdataWithRange:(NSRange):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSData+NSExtendedData.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:options:error:" uniqueID="-writeToFile:options:error:(NSString*;NSDataWritingOptions;NSError**):BOOL">
				<signature>NSData+NSExtendedData.-writeToFile:options:error:(NSString*;NSDataWritingOptions;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSData+NSExtendedData.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:options:error:" uniqueID="-writeToURL:options:error:(NSURL*;NSDataWritingOptions;NSError**):BOOL">
				<signature>NSData+NSExtendedData.-writeToURL:options:error:(NSURL*;NSDataWritingOptions;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="^(char;NSError*):void" uniqueID="^(char;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(char;NSError*):void">
				<signature>^(char;NSError*):void.-block(char;NSError*):void</signature>
			</method>
		</class>
		<class name="JSVirtualMachine" uniqueID="JSVirtualMachine">
			<method accessibility="Public" methodKind="Member" name="-addManagedReference:withOwner:" uniqueID="-addManagedReference:withOwner:(id;id):void">
				<signature>JSVirtualMachine.-addManagedReference:withOwner:(id;id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype">
				<signature>JSVirtualMachine.-init():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeManagedReference:withOwner:" uniqueID="-removeManagedReference:withOwner:(id;id):void">
				<signature>JSVirtualMachine.-removeManagedReference:withOwner:(id;id):void</signature>
			</method>
		</class>
		<class name="NSString+NSLinguisticAnalysis" uniqueID="NSString+NSLinguisticAnalysis">
			<method accessibility="Public" methodKind="Member" name="-enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:" uniqueID="-enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;(^)(NSString*;NSRange;NSRange;BOOL*):void):void">
				<signature>NSString+NSLinguisticAnalysis.-enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;(^)(NSString*;NSRange;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-linguisticTagsInRange:scheme:options:orthography:tokenRanges:" uniqueID="-linguisticTagsInRange:scheme:options:orthography:tokenRanges:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;NSArray&lt;NSValue *&gt;**):NSArray&lt;NSString *&gt;*">
				<signature>NSString+NSLinguisticAnalysis.-linguisticTagsInRange:scheme:options:orthography:tokenRanges:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;NSArray&lt;NSValue *&gt;**):NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="CLLocationManager" uniqueID="CLLocationManager">
			<method accessibility="Public" methodKind="Member" name="-activityType" uniqueID="-activityType():CLActivityType">
				<signature>CLLocationManager.-activityType():CLActivityType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowDeferredLocationUpdatesUntilTraveled:timeout:" uniqueID="-allowDeferredLocationUpdatesUntilTraveled:timeout:(CLLocationDistance;NSTimeInterval):void">
				<signature>CLLocationManager.-allowDeferredLocationUpdatesUntilTraveled:timeout:(CLLocationDistance;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsBackgroundLocationUpdates" uniqueID="-allowsBackgroundLocationUpdates():BOOL">
				<signature>CLLocationManager.-allowsBackgroundLocationUpdates():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;CLLocationManagerDelegate&gt;*">
				<signature>CLLocationManager.-delegate():objc_object&lt;CLLocationManagerDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-desiredAccuracy" uniqueID="-desiredAccuracy():CLLocationAccuracy">
				<signature>CLLocationManager.-desiredAccuracy():CLLocationAccuracy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-disallowDeferredLocationUpdates" uniqueID="-disallowDeferredLocationUpdates():void">
				<signature>CLLocationManager.-disallowDeferredLocationUpdates():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dismissHeadingCalibrationDisplay" uniqueID="-dismissHeadingCalibrationDisplay():void">
				<signature>CLLocationManager.-dismissHeadingCalibrationDisplay():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-distanceFilter" uniqueID="-distanceFilter():CLLocationDistance">
				<signature>CLLocationManager.-distanceFilter():CLLocationDistance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heading" uniqueID="-heading():CLHeading*">
				<signature>CLLocationManager.-heading():CLHeading*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-headingAvailable" uniqueID="-headingAvailable():BOOL">
				<signature>CLLocationManager.-headingAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-headingFilter" uniqueID="-headingFilter():CLLocationDegrees">
				<signature>CLLocationManager.-headingFilter():CLLocationDegrees</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-headingOrientation" uniqueID="-headingOrientation():CLDeviceOrientation">
				<signature>CLLocationManager.-headingOrientation():CLDeviceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-location" uniqueID="-location():CLLocation*">
				<signature>CLLocationManager.-location():CLLocation*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationServicesEnabled" uniqueID="-locationServicesEnabled():BOOL">
				<signature>CLLocationManager.-locationServicesEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumRegionMonitoringDistance" uniqueID="-maximumRegionMonitoringDistance():CLLocationDistance">
				<signature>CLLocationManager.-maximumRegionMonitoringDistance():CLLocationDistance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-monitoredRegions" uniqueID="-monitoredRegions():NSSet&lt;__kindof CLRegion *&gt;*">
				<signature>CLLocationManager.-monitoredRegions():NSSet&lt;__kindof CLRegion *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pausesLocationUpdatesAutomatically" uniqueID="-pausesLocationUpdatesAutomatically():BOOL">
				<signature>CLLocationManager.-pausesLocationUpdatesAutomatically():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-purpose" uniqueID="-purpose():NSString*">
				<signature>CLLocationManager.-purpose():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangedRegions" uniqueID="-rangedRegions():NSSet&lt;__kindof CLRegion *&gt;*">
				<signature>CLLocationManager.-rangedRegions():NSSet&lt;__kindof CLRegion *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestAlwaysAuthorization" uniqueID="-requestAlwaysAuthorization():void">
				<signature>CLLocationManager.-requestAlwaysAuthorization():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestLocation" uniqueID="-requestLocation():void">
				<signature>CLLocationManager.-requestLocation():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestStateForRegion:" uniqueID="-requestStateForRegion:(CLRegion*):void">
				<signature>CLLocationManager.-requestStateForRegion:(CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestWhenInUseAuthorization" uniqueID="-requestWhenInUseAuthorization():void">
				<signature>CLLocationManager.-requestWhenInUseAuthorization():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActivityType:" uniqueID="-setActivityType:(CLActivityType):void">
				<signature>CLLocationManager.-setActivityType:(CLActivityType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsBackgroundLocationUpdates:" uniqueID="-setAllowsBackgroundLocationUpdates:(BOOL):void">
				<signature>CLLocationManager.-setAllowsBackgroundLocationUpdates:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;CLLocationManagerDelegate&gt;*):void">
				<signature>CLLocationManager.-setDelegate:(objc_object&lt;CLLocationManagerDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDesiredAccuracy:" uniqueID="-setDesiredAccuracy:(CLLocationAccuracy):void">
				<signature>CLLocationManager.-setDesiredAccuracy:(CLLocationAccuracy):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDistanceFilter:" uniqueID="-setDistanceFilter:(CLLocationDistance):void">
				<signature>CLLocationManager.-setDistanceFilter:(CLLocationDistance):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHeadingFilter:" uniqueID="-setHeadingFilter:(CLLocationDegrees):void">
				<signature>CLLocationManager.-setHeadingFilter:(CLLocationDegrees):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHeadingOrientation:" uniqueID="-setHeadingOrientation:(CLDeviceOrientation):void">
				<signature>CLLocationManager.-setHeadingOrientation:(CLDeviceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPausesLocationUpdatesAutomatically:" uniqueID="-setPausesLocationUpdatesAutomatically:(BOOL):void">
				<signature>CLLocationManager.-setPausesLocationUpdatesAutomatically:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPurpose:" uniqueID="-setPurpose:(NSString*):void">
				<signature>CLLocationManager.-setPurpose:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startMonitoringForRegion:" uniqueID="-startMonitoringForRegion:(CLRegion*):void">
				<signature>CLLocationManager.-startMonitoringForRegion:(CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startMonitoringForRegion:desiredAccuracy:" uniqueID="-startMonitoringForRegion:desiredAccuracy:(CLRegion*;CLLocationAccuracy):void">
				<signature>CLLocationManager.-startMonitoringForRegion:desiredAccuracy:(CLRegion*;CLLocationAccuracy):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startMonitoringSignificantLocationChanges" uniqueID="-startMonitoringSignificantLocationChanges():void">
				<signature>CLLocationManager.-startMonitoringSignificantLocationChanges():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startMonitoringVisits" uniqueID="-startMonitoringVisits():void">
				<signature>CLLocationManager.-startMonitoringVisits():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startRangingBeaconsInRegion:" uniqueID="-startRangingBeaconsInRegion:(CLBeaconRegion*):void">
				<signature>CLLocationManager.-startRangingBeaconsInRegion:(CLBeaconRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startUpdatingHeading" uniqueID="-startUpdatingHeading():void">
				<signature>CLLocationManager.-startUpdatingHeading():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startUpdatingLocation" uniqueID="-startUpdatingLocation():void">
				<signature>CLLocationManager.-startUpdatingLocation():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopMonitoringForRegion:" uniqueID="-stopMonitoringForRegion:(CLRegion*):void">
				<signature>CLLocationManager.-stopMonitoringForRegion:(CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopMonitoringSignificantLocationChanges" uniqueID="-stopMonitoringSignificantLocationChanges():void">
				<signature>CLLocationManager.-stopMonitoringSignificantLocationChanges():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopMonitoringVisits" uniqueID="-stopMonitoringVisits():void">
				<signature>CLLocationManager.-stopMonitoringVisits():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopRangingBeaconsInRegion:" uniqueID="-stopRangingBeaconsInRegion:(CLBeaconRegion*):void">
				<signature>CLLocationManager.-stopRangingBeaconsInRegion:(CLBeaconRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopUpdatingHeading" uniqueID="-stopUpdatingHeading():void">
				<signature>CLLocationManager.-stopUpdatingHeading():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopUpdatingLocation" uniqueID="-stopUpdatingLocation():void">
				<signature>CLLocationManager.-stopUpdatingLocation():void</signature>
			</method>
		</class>
		<class name="CLHeading" uniqueID="CLHeading">
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>CLHeading.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-headingAccuracy" uniqueID="-headingAccuracy():CLLocationDirection">
				<signature>CLHeading.-headingAccuracy():CLLocationDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-magneticHeading" uniqueID="-magneticHeading():CLLocationDirection">
				<signature>CLHeading.-magneticHeading():CLLocationDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timestamp" uniqueID="-timestamp():NSDate*">
				<signature>CLHeading.-timestamp():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-trueHeading" uniqueID="-trueHeading():CLLocationDirection">
				<signature>CLHeading.-trueHeading():CLLocationDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-x" uniqueID="-x():CLHeadingComponentValue">
				<signature>CLHeading.-x():CLHeadingComponentValue</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-y" uniqueID="-y():CLHeadingComponentValue">
				<signature>CLHeading.-y():CLHeadingComponentValue</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-z" uniqueID="-z():CLHeadingComponentValue">
				<signature>CLHeading.-z():CLHeadingComponentValue</signature>
			</method>
		</class>
		<class name="NSSet" uniqueID="NSSet">
			<method accessibility="Public" methodKind="Member" name="-addObserver:forKeyPath:options:context:" uniqueID="-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSSet.-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allObjects" uniqueID="-allObjects():NSArray&lt;ObjectType&gt;*">
				<signature>NSSet.-allObjects():NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-anyObject" uniqueID="-anyObject():ObjectType _Nullable">
				<signature>NSSet.-anyObject():ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsObject:" uniqueID="-containsObject:(ObjectType _Nonnull):BOOL">
				<signature>NSSet.-containsObject:(ObjectType _Nonnull):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-count" uniqueID="-count():NSUInteger">
				<signature>NSSet.-count():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSSet.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSSet.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsUsingBlock:" uniqueID="-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSSet.-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsWithOptions:usingBlock:" uniqueID="-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSSet.-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filteredSetUsingPredicate:" uniqueID="-filteredSetUsingPredicate:(NSPredicate*):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet.-filteredSetUsingPredicate:(NSPredicate*):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSSet.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithArray:" uniqueID="-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSSet.-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSSet.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:" uniqueID="-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>NSSet.-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:count:" uniqueID="-initWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull">
				<signature>NSSet.-initWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithSet:" uniqueID="-initWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSSet.-initWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithSet:copyItems:" uniqueID="-initWithSet:copyItems:(NSSet&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull">
				<signature>NSSet.-initWithSet:copyItems:(NSSet&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intersectsSet:" uniqueID="-intersectsSet:(NSSet&lt;ObjectType&gt;*):BOOL">
				<signature>NSSet.-intersectsSet:(NSSet&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToSet:" uniqueID="-isEqualToSet:(NSSet&lt;ObjectType&gt;*):BOOL">
				<signature>NSSet.-isEqualToSet:(NSSet&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSubsetOfSet:" uniqueID="-isSubsetOfSet:(NSSet&lt;ObjectType&gt;*):BOOL">
				<signature>NSSet.-isSubsetOfSet:(NSSet&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:" uniqueID="-makeObjectsPerformSelector:(SEL _Nonnull):void">
				<signature>NSSet.-makeObjectsPerformSelector:(SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:withObject:" uniqueID="-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void">
				<signature>NSSet.-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-member:" uniqueID="-member:(ObjectType _Nonnull):ObjectType _Nullable">
				<signature>NSSet.-member:(ObjectType _Nonnull):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectEnumerator" uniqueID="-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSSet.-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsPassingTest:" uniqueID="-objectsPassingTest:((^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet.-objectsPassingTest:((^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsWithOptions:passingTest:" uniqueID="-objectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet.-objectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:" uniqueID="-removeObserver:forKeyPath:(NSObject*;NSString*):void">
				<signature>NSSet.-removeObserver:forKeyPath:(NSObject*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:context:" uniqueID="-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void">
				<signature>NSSet.-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setByAddingObject:" uniqueID="-setByAddingObject:(ObjectType _Nonnull):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet.-setByAddingObject:(ObjectType _Nonnull):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setByAddingObjectsFromArray:" uniqueID="-setByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet.-setByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setByAddingObjectsFromSet:" uniqueID="-setByAddingObjectsFromSet:(NSSet&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet.-setByAddingObjectsFromSet:(NSSet&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSSet.-setValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingDescriptors:" uniqueID="-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*">
				<signature>NSSet.-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):id _Nonnull">
				<signature>NSSet.-valueForKey:(NSString*):id _Nonnull</signature>
			</method>
		</class>
		<class name="CLFloor" uniqueID="CLFloor">
			<method accessibility="Public" methodKind="Member" name="-level" uniqueID="-level():NSInteger">
				<signature>CLFloor.-level():NSInteger</signature>
			</method>
		</class>
		<class name="NSArray+NSArrayPathExtensions" uniqueID="NSArray+NSArrayPathExtensions">
			<method accessibility="Public" methodKind="Member" name="-pathsMatchingExtensions:" uniqueID="-pathsMatchingExtensions:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*">
				<signature>NSArray+NSArrayPathExtensions.-pathsMatchingExtensions:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueCoding" uniqueID="NSObject+NSKeyValueCoding">
			<method accessibility="Public" methodKind="Member" name="-dictionaryWithValuesForKeys:" uniqueID="-dictionaryWithValuesForKeys:(NSArray&lt;NSString *&gt;*):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSObject+NSKeyValueCoding.-dictionaryWithValuesForKeys:(NSArray&lt;NSString *&gt;*):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableArrayValueForKey:" uniqueID="-mutableArrayValueForKey:(NSString*):NSMutableArray*">
				<signature>NSObject+NSKeyValueCoding.-mutableArrayValueForKey:(NSString*):NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableArrayValueForKeyPath:" uniqueID="-mutableArrayValueForKeyPath:(NSString*):NSMutableArray*">
				<signature>NSObject+NSKeyValueCoding.-mutableArrayValueForKeyPath:(NSString*):NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableOrderedSetValueForKey:" uniqueID="-mutableOrderedSetValueForKey:(NSString*):NSMutableOrderedSet*">
				<signature>NSObject+NSKeyValueCoding.-mutableOrderedSetValueForKey:(NSString*):NSMutableOrderedSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableOrderedSetValueForKeyPath:" uniqueID="-mutableOrderedSetValueForKeyPath:(NSString*):NSMutableOrderedSet*">
				<signature>NSObject+NSKeyValueCoding.-mutableOrderedSetValueForKeyPath:(NSString*):NSMutableOrderedSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableSetValueForKey:" uniqueID="-mutableSetValueForKey:(NSString*):NSMutableSet*">
				<signature>NSObject+NSKeyValueCoding.-mutableSetValueForKey:(NSString*):NSMutableSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableSetValueForKeyPath:" uniqueID="-mutableSetValueForKeyPath:(NSString*):NSMutableSet*">
				<signature>NSObject+NSKeyValueCoding.-mutableSetValueForKeyPath:(NSString*):NSMutableSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNilValueForKey:" uniqueID="-setNilValueForKey:(NSString*):void">
				<signature>NSObject+NSKeyValueCoding.-setNilValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSObject+NSKeyValueCoding.-setValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKeyPath:" uniqueID="-setValue:forKeyPath:(id _Nullable;NSString*):void">
				<signature>NSObject+NSKeyValueCoding.-setValue:forKeyPath:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forUndefinedKey:" uniqueID="-setValue:forUndefinedKey:(id _Nullable;NSString*):void">
				<signature>NSObject+NSKeyValueCoding.-setValue:forUndefinedKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValuesForKeysWithDictionary:" uniqueID="-setValuesForKeysWithDictionary:(NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSObject+NSKeyValueCoding.-setValuesForKeysWithDictionary:(NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-validateValue:forKey:error:" uniqueID="-validateValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSObject+NSKeyValueCoding.-validateValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-validateValue:forKeyPath:error:" uniqueID="-validateValue:forKeyPath:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSObject+NSKeyValueCoding.-validateValue:forKeyPath:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):id _Nullable">
				<signature>NSObject+NSKeyValueCoding.-valueForKey:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKeyPath:" uniqueID="-valueForKeyPath:(NSString*):id _Nullable">
				<signature>NSObject+NSKeyValueCoding.-valueForKeyPath:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForUndefinedKey:" uniqueID="-valueForUndefinedKey:(NSString*):id _Nullable">
				<signature>NSObject+NSKeyValueCoding.-valueForUndefinedKey:(NSString*):id _Nullable</signature>
			</method>
		</class>
		<class name="CIImage+UIKitAdditions" uniqueID="CIImage+UIKitAdditions">
			<method accessibility="Public" methodKind="Member" name="-initWithImage:" uniqueID="-initWithImage:(UIImage*):instancetype _Nullable">
				<signature>CIImage+UIKitAdditions.-initWithImage:(UIImage*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithImage:options:" uniqueID="-initWithImage:options:(UIImage*;NSDictionary*):instancetype _Nullable">
				<signature>CIImage+UIKitAdditions.-initWithImage:options:(UIImage*;NSDictionary*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSArray+NSKeyValueCoding" uniqueID="NSArray+NSKeyValueCoding">
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSArray+NSKeyValueCoding.-setValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):id _Nonnull">
				<signature>NSArray+NSKeyValueCoding.-valueForKey:(NSString*):id _Nonnull</signature>
			</method>
		</class>
		<class name="NSString+NSExtendedStringPropertyListParsing" uniqueID="NSString+NSExtendedStringPropertyListParsing">
			<method accessibility="Public" methodKind="Member" name="-propertyList" uniqueID="-propertyList():id _Nonnull">
				<signature>NSString+NSExtendedStringPropertyListParsing.-propertyList():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-propertyListFromStringsFileFormat" uniqueID="-propertyListFromStringsFileFormat():NSDictionary*">
				<signature>NSString+NSExtendedStringPropertyListParsing.-propertyListFromStringsFileFormat():NSDictionary*</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_AppDelegate_m_207_31" uniqueID="Closure_@___x_AcmeAirlines_AppDelegate_m_207_31">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block():void">
				<signature>Closure_@___x_AcmeAirlines_AppDelegate_m_207_31.-block():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init(const AppDelegate*;int&amp;):void">
				<signature>Closure_@___x_AcmeAirlines_AppDelegate_m_207_31.-init(const AppDelegate*;int&amp;):void</signature>
			</method>
		</class>
		<class name="NSData" uniqueID="NSData">
			<method accessibility="Public" methodKind="Member" name="-base64EncodedDataWithOptions:" uniqueID="-base64EncodedDataWithOptions:(NSDataBase64EncodingOptions):NSData*">
				<signature>NSData.-base64EncodedDataWithOptions:(NSDataBase64EncodingOptions):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-base64EncodedStringWithOptions:" uniqueID="-base64EncodedStringWithOptions:(NSDataBase64EncodingOptions):NSString*">
				<signature>NSData.-base64EncodedStringWithOptions:(NSDataBase64EncodingOptions):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-base64Encoding" uniqueID="-base64Encoding():NSString*">
				<signature>NSData.-base64Encoding():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bytes" uniqueID="-bytes():const void*">
				<signature>NSData.-bytes():const void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSData.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateByteRangesUsingBlock:" uniqueID="-enumerateByteRangesUsingBlock:((^)(const void*;NSRange;BOOL*):void):void">
				<signature>NSData.-enumerateByteRangesUsingBlock:((^)(const void*;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:" uniqueID="-getBytes:(void*):void">
				<signature>NSData.-getBytes:(void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:length:" uniqueID="-getBytes:length:(void*;NSUInteger):void">
				<signature>NSData.-getBytes:length:(void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:range:" uniqueID="-getBytes:range:(void*;NSRange):void">
				<signature>NSData.-getBytes:range:(void*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBase64EncodedData:options:" uniqueID="-initWithBase64EncodedData:options:(NSData*;NSDataBase64DecodingOptions):instancetype _Nullable">
				<signature>NSData.-initWithBase64EncodedData:options:(NSData*;NSDataBase64DecodingOptions):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBase64EncodedString:options:" uniqueID="-initWithBase64EncodedString:options:(NSString*;NSDataBase64DecodingOptions):instancetype _Nullable">
				<signature>NSData.-initWithBase64EncodedString:options:(NSString*;NSDataBase64DecodingOptions):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBase64Encoding:" uniqueID="-initWithBase64Encoding:(NSString*):id _Nullable">
				<signature>NSData.-initWithBase64Encoding:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytes:length:" uniqueID="-initWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull">
				<signature>NSData.-initWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:" uniqueID="-initWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull">
				<signature>NSData.-initWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:deallocator:" uniqueID="-initWithBytesNoCopy:length:deallocator:(void*;NSUInteger;(^)(void*;NSUInteger):void):instancetype _Nonnull">
				<signature>NSData.-initWithBytesNoCopy:length:deallocator:(void*;NSUInteger;(^)(void*;NSUInteger):void):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:freeWhenDone:" uniqueID="-initWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull">
				<signature>NSData.-initWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):instancetype _Nullable">
				<signature>NSData.-initWithContentsOfFile:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:options:error:" uniqueID="-initWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>NSData.-initWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfMappedFile:" uniqueID="-initWithContentsOfMappedFile:(NSString*):id _Nullable">
				<signature>NSData.-initWithContentsOfMappedFile:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):instancetype _Nullable">
				<signature>NSData.-initWithContentsOfURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:options:error:" uniqueID="-initWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>NSData.-initWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:" uniqueID="-initWithData:(NSData*):instancetype _Nonnull">
				<signature>NSData.-initWithData:(NSData*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToData:" uniqueID="-isEqualToData:(NSData*):BOOL">
				<signature>NSData.-isEqualToData:(NSData*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>NSData.-length():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfData:options:range:" uniqueID="-rangeOfData:options:range:(NSData*;NSDataSearchOptions;NSRange):NSRange">
				<signature>NSData.-rangeOfData:options:range:(NSData*;NSDataSearchOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subdataWithRange:" uniqueID="-subdataWithRange:(NSRange):NSData*">
				<signature>NSData.-subdataWithRange:(NSRange):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSData.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:options:error:" uniqueID="-writeToFile:options:error:(NSString*;NSDataWritingOptions;NSError**):BOOL">
				<signature>NSData.-writeToFile:options:error:(NSString*;NSDataWritingOptions;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSData.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:options:error:" uniqueID="-writeToURL:options:error:(NSURL*;NSDataWritingOptions;NSError**):BOOL">
				<signature>NSData.-writeToURL:options:error:(NSURL*;NSDataWritingOptions;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="CIImage+AutoAdjustment" uniqueID="CIImage+AutoAdjustment">
			<method accessibility="Public" methodKind="Member" name="-autoAdjustmentFiltersWithOptions:" uniqueID="-autoAdjustmentFiltersWithOptions:(NSDictionary&lt;NSString *,id&gt;*):NSArray&lt;CIFilter *&gt;*">
				<signature>CIImage+AutoAdjustment.-autoAdjustmentFiltersWithOptions:(NSDictionary&lt;NSString *,id&gt;*):NSArray&lt;CIFilter *&gt;*</signature>
			</method>
		</class>
		<class name="UIViewController+UITabBarControllerItem" uniqueID="UIViewController+UITabBarControllerItem">
			<method accessibility="Public" methodKind="Member" name="-setTabBarItem:" uniqueID="-setTabBarItem:(UITabBarItem*):void">
				<signature>UIViewController+UITabBarControllerItem.-setTabBarItem:(UITabBarItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBarController" uniqueID="-tabBarController():UITabBarController*">
				<signature>UIViewController+UITabBarControllerItem.-tabBarController():UITabBarController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBarItem" uniqueID="-tabBarItem():UITabBarItem*">
				<signature>UIViewController+UITabBarControllerItem.-tabBarItem():UITabBarItem*</signature>
			</method>
		</class>
		<class name="CIFilterShape" uniqueID="CIFilterShape">
			<method accessibility="Public" methodKind="Member" name="-extent" uniqueID="-extent():CGRect">
				<signature>CIFilterShape.-extent():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithRect:" uniqueID="-initWithRect:(CGRect):instancetype _Nonnull">
				<signature>CIFilterShape.-initWithRect:(CGRect):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insetByX:Y:" uniqueID="-insetByX:Y:(int;int):CIFilterShape*">
				<signature>CIFilterShape.-insetByX:Y:(int;int):CIFilterShape*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intersectWith:" uniqueID="-intersectWith:(CIFilterShape*):CIFilterShape*">
				<signature>CIFilterShape.-intersectWith:(CIFilterShape*):CIFilterShape*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intersectWithRect:" uniqueID="-intersectWithRect:(CGRect):CIFilterShape*">
				<signature>CIFilterShape.-intersectWithRect:(CGRect):CIFilterShape*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transformBy:interior:" uniqueID="-transformBy:interior:(CGAffineTransform;BOOL):CIFilterShape*">
				<signature>CIFilterShape.-transformBy:interior:(CGAffineTransform;BOOL):CIFilterShape*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unionWith:" uniqueID="-unionWith:(CIFilterShape*):CIFilterShape*">
				<signature>CIFilterShape.-unionWith:(CIFilterShape*):CIFilterShape*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unionWithRect:" uniqueID="-unionWithRect:(CGRect):CIFilterShape*">
				<signature>CIFilterShape.-unionWithRect:(CGRect):CIFilterShape*</signature>
			</method>
		</class>
		<class name="MKUserLocation" uniqueID="MKUserLocation">
			<method accessibility="Public" methodKind="Member" name="-heading" uniqueID="-heading():CLHeading*">
				<signature>MKUserLocation.-heading():CLHeading*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUpdating" uniqueID="-isUpdating():BOOL">
				<signature>MKUserLocation.-isUpdating():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-location" uniqueID="-location():CLLocation*">
				<signature>MKUserLocation.-location():CLLocation*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSubtitle:" uniqueID="-setSubtitle:(NSString*):void">
				<signature>MKUserLocation.-setSubtitle:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitle:" uniqueID="-setTitle:(NSString*):void">
				<signature>MKUserLocation.-setTitle:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subtitle" uniqueID="-subtitle():NSString*">
				<signature>MKUserLocation.-subtitle():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>MKUserLocation.-title():NSString*</signature>
			</method>
		</class>
		<class name="CIColor+UIKitAdditions" uniqueID="CIColor+UIKitAdditions">
			<method accessibility="Public" methodKind="Member" name="-initWithColor:" uniqueID="-initWithColor:(UIColor*):instancetype _Nonnull">
				<signature>CIColor+UIKitAdditions.-initWithColor:(UIColor*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="CALayer" uniqueID="CALayer">
			<method accessibility="Public" methodKind="Member" name="-actionForKey:" uniqueID="-actionForKey:(NSString*):objc_object&lt;CAAction&gt;*">
				<signature>CALayer.-actionForKey:(NSString*):objc_object&lt;CAAction&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-actions" uniqueID="-actions():NSDictionary&lt;NSString *,id&lt;CAAction&gt;&gt;*">
				<signature>CALayer.-actions():NSDictionary&lt;NSString *,id&lt;CAAction&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addAnimation:forKey:" uniqueID="-addAnimation:forKey:(CAAnimation*;NSString*):void">
				<signature>CALayer.-addAnimation:forKey:(CAAnimation*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addSublayer:" uniqueID="-addSublayer:(CALayer*):void">
				<signature>CALayer.-addSublayer:(CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-affineTransform" uniqueID="-affineTransform():CGAffineTransform">
				<signature>CALayer.-affineTransform():CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsEdgeAntialiasing" uniqueID="-allowsEdgeAntialiasing():BOOL">
				<signature>CALayer.-allowsEdgeAntialiasing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsGroupOpacity" uniqueID="-allowsGroupOpacity():BOOL">
				<signature>CALayer.-allowsGroupOpacity():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-anchorPoint" uniqueID="-anchorPoint():CGPoint">
				<signature>CALayer.-anchorPoint():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-anchorPointZ" uniqueID="-anchorPointZ():CGFloat">
				<signature>CALayer.-anchorPointZ():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationForKey:" uniqueID="-animationForKey:(NSString*):CAAnimation*">
				<signature>CALayer.-animationForKey:(NSString*):CAAnimation*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationKeys" uniqueID="-animationKeys():NSArray&lt;NSString *&gt;*">
				<signature>CALayer.-animationKeys():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundColor" uniqueID="-backgroundColor():struct CGColor*">
				<signature>CALayer.-backgroundColor():struct CGColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundFilters" uniqueID="-backgroundFilters():NSArray*">
				<signature>CALayer.-backgroundFilters():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-borderColor" uniqueID="-borderColor():struct CGColor*">
				<signature>CALayer.-borderColor():struct CGColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-borderWidth" uniqueID="-borderWidth():CGFloat">
				<signature>CALayer.-borderWidth():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bounds" uniqueID="-bounds():CGRect">
				<signature>CALayer.-bounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compositingFilter" uniqueID="-compositingFilter():id _Nullable">
				<signature>CALayer.-compositingFilter():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsPoint:" uniqueID="-containsPoint:(CGPoint):BOOL">
				<signature>CALayer.-containsPoint:(CGPoint):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contents" uniqueID="-contents():id _Nullable">
				<signature>CALayer.-contents():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsAreFlipped" uniqueID="-contentsAreFlipped():BOOL">
				<signature>CALayer.-contentsAreFlipped():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsCenter" uniqueID="-contentsCenter():CGRect">
				<signature>CALayer.-contentsCenter():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsGravity" uniqueID="-contentsGravity():NSString*">
				<signature>CALayer.-contentsGravity():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsRect" uniqueID="-contentsRect():CGRect">
				<signature>CALayer.-contentsRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentsScale" uniqueID="-contentsScale():CGFloat">
				<signature>CALayer.-contentsScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:fromLayer:" uniqueID="-convertPoint:fromLayer:(CGPoint;CALayer*):CGPoint">
				<signature>CALayer.-convertPoint:fromLayer:(CGPoint;CALayer*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:toLayer:" uniqueID="-convertPoint:toLayer:(CGPoint;CALayer*):CGPoint">
				<signature>CALayer.-convertPoint:toLayer:(CGPoint;CALayer*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:fromLayer:" uniqueID="-convertRect:fromLayer:(CGRect;CALayer*):CGRect">
				<signature>CALayer.-convertRect:fromLayer:(CGRect;CALayer*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:toLayer:" uniqueID="-convertRect:toLayer:(CGRect;CALayer*):CGRect">
				<signature>CALayer.-convertRect:toLayer:(CGRect;CALayer*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertTime:fromLayer:" uniqueID="-convertTime:fromLayer:(CFTimeInterval;CALayer*):CFTimeInterval">
				<signature>CALayer.-convertTime:fromLayer:(CFTimeInterval;CALayer*):CFTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertTime:toLayer:" uniqueID="-convertTime:toLayer:(CFTimeInterval;CALayer*):CFTimeInterval">
				<signature>CALayer.-convertTime:toLayer:(CFTimeInterval;CALayer*):CFTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cornerRadius" uniqueID="-cornerRadius():CGFloat">
				<signature>CALayer.-cornerRadius():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():id _Nullable">
				<signature>CALayer.-delegate():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-display" uniqueID="-display():void">
				<signature>CALayer.-display():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-displayIfNeeded" uniqueID="-displayIfNeeded():void">
				<signature>CALayer.-displayIfNeeded():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInContext:" uniqueID="-drawInContext:(struct CGContext*):void">
				<signature>CALayer.-drawInContext:(struct CGContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawsAsynchronously" uniqueID="-drawsAsynchronously():BOOL">
				<signature>CALayer.-drawsAsynchronously():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-edgeAntialiasingMask" uniqueID="-edgeAntialiasingMask():CAEdgeAntialiasingMask">
				<signature>CALayer.-edgeAntialiasingMask():CAEdgeAntialiasingMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filters" uniqueID="-filters():NSArray*">
				<signature>CALayer.-filters():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-frame" uniqueID="-frame():CGRect">
				<signature>CALayer.-frame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hitTest:" uniqueID="-hitTest:(CGPoint):CALayer*">
				<signature>CALayer.-hitTest:(CGPoint):CALayer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>CALayer.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLayer:" uniqueID="-initWithLayer:(id _Nonnull):instancetype _Nonnull">
				<signature>CALayer.-initWithLayer:(id _Nonnull):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSublayer:above:" uniqueID="-insertSublayer:above:(CALayer*;CALayer*):void">
				<signature>CALayer.-insertSublayer:above:(CALayer*;CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSublayer:atIndex:" uniqueID="-insertSublayer:atIndex:(CALayer*;unsigned int):void">
				<signature>CALayer.-insertSublayer:atIndex:(CALayer*;unsigned int):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertSublayer:below:" uniqueID="-insertSublayer:below:(CALayer*;CALayer*):void">
				<signature>CALayer.-insertSublayer:below:(CALayer*;CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDoubleSided" uniqueID="-isDoubleSided():BOOL">
				<signature>CALayer.-isDoubleSided():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isGeometryFlipped" uniqueID="-isGeometryFlipped():BOOL">
				<signature>CALayer.-isGeometryFlipped():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHidden" uniqueID="-isHidden():BOOL">
				<signature>CALayer.-isHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isOpaque" uniqueID="-isOpaque():BOOL">
				<signature>CALayer.-isOpaque():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutIfNeeded" uniqueID="-layoutIfNeeded():void">
				<signature>CALayer.-layoutIfNeeded():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutSublayers" uniqueID="-layoutSublayers():void">
				<signature>CALayer.-layoutSublayers():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-magnificationFilter" uniqueID="-magnificationFilter():NSString*">
				<signature>CALayer.-magnificationFilter():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mask" uniqueID="-mask():CALayer*">
				<signature>CALayer.-mask():CALayer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-masksToBounds" uniqueID="-masksToBounds():BOOL">
				<signature>CALayer.-masksToBounds():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minificationFilter" uniqueID="-minificationFilter():NSString*">
				<signature>CALayer.-minificationFilter():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minificationFilterBias" uniqueID="-minificationFilterBias():float">
				<signature>CALayer.-minificationFilterBias():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-modelLayer" uniqueID="-modelLayer():id _Nonnull">
				<signature>CALayer.-modelLayer():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>CALayer.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-needsDisplay" uniqueID="-needsDisplay():BOOL">
				<signature>CALayer.-needsDisplay():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-needsDisplayOnBoundsChange" uniqueID="-needsDisplayOnBoundsChange():BOOL">
				<signature>CALayer.-needsDisplayOnBoundsChange():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-needsLayout" uniqueID="-needsLayout():BOOL">
				<signature>CALayer.-needsLayout():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-opacity" uniqueID="-opacity():float">
				<signature>CALayer.-opacity():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-position" uniqueID="-position():CGPoint">
				<signature>CALayer.-position():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredFrameSize" uniqueID="-preferredFrameSize():CGSize">
				<signature>CALayer.-preferredFrameSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentationLayer" uniqueID="-presentationLayer():id _Nullable">
				<signature>CALayer.-presentationLayer():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rasterizationScale" uniqueID="-rasterizationScale():CGFloat">
				<signature>CALayer.-rasterizationScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllAnimations" uniqueID="-removeAllAnimations():void">
				<signature>CALayer.-removeAllAnimations():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAnimationForKey:" uniqueID="-removeAnimationForKey:(NSString*):void">
				<signature>CALayer.-removeAnimationForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeFromSuperlayer" uniqueID="-removeFromSuperlayer():void">
				<signature>CALayer.-removeFromSuperlayer():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-renderInContext:" uniqueID="-renderInContext:(struct CGContext*):void">
				<signature>CALayer.-renderInContext:(struct CGContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceSublayer:with:" uniqueID="-replaceSublayer:with:(CALayer*;CALayer*):void">
				<signature>CALayer.-replaceSublayer:with:(CALayer*;CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollPoint:" uniqueID="-scrollPoint:(CGPoint):void">
				<signature>CALayer.-scrollPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollRectToVisible:" uniqueID="-scrollRectToVisible:(CGRect):void">
				<signature>CALayer.-scrollRectToVisible:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActions:" uniqueID="-setActions:(NSDictionary&lt;NSString *,id&lt;CAAction&gt;&gt;*):void">
				<signature>CALayer.-setActions:(NSDictionary&lt;NSString *,id&lt;CAAction&gt;&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAffineTransform:" uniqueID="-setAffineTransform:(CGAffineTransform):void">
				<signature>CALayer.-setAffineTransform:(CGAffineTransform):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsEdgeAntialiasing:" uniqueID="-setAllowsEdgeAntialiasing:(BOOL):void">
				<signature>CALayer.-setAllowsEdgeAntialiasing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsGroupOpacity:" uniqueID="-setAllowsGroupOpacity:(BOOL):void">
				<signature>CALayer.-setAllowsGroupOpacity:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAnchorPoint:" uniqueID="-setAnchorPoint:(CGPoint):void">
				<signature>CALayer.-setAnchorPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAnchorPointZ:" uniqueID="-setAnchorPointZ:(CGFloat):void">
				<signature>CALayer.-setAnchorPointZ:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundColor:" uniqueID="-setBackgroundColor:(struct CGColor*):void">
				<signature>CALayer.-setBackgroundColor:(struct CGColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundFilters:" uniqueID="-setBackgroundFilters:(NSArray*):void">
				<signature>CALayer.-setBackgroundFilters:(NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBorderColor:" uniqueID="-setBorderColor:(struct CGColor*):void">
				<signature>CALayer.-setBorderColor:(struct CGColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBorderWidth:" uniqueID="-setBorderWidth:(CGFloat):void">
				<signature>CALayer.-setBorderWidth:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBounds:" uniqueID="-setBounds:(CGRect):void">
				<signature>CALayer.-setBounds:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCompositingFilter:" uniqueID="-setCompositingFilter:(id _Nullable):void">
				<signature>CALayer.-setCompositingFilter:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContents:" uniqueID="-setContents:(id _Nullable):void">
				<signature>CALayer.-setContents:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentsCenter:" uniqueID="-setContentsCenter:(CGRect):void">
				<signature>CALayer.-setContentsCenter:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentsGravity:" uniqueID="-setContentsGravity:(NSString*):void">
				<signature>CALayer.-setContentsGravity:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentsRect:" uniqueID="-setContentsRect:(CGRect):void">
				<signature>CALayer.-setContentsRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentsScale:" uniqueID="-setContentsScale:(CGFloat):void">
				<signature>CALayer.-setContentsScale:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCornerRadius:" uniqueID="-setCornerRadius:(CGFloat):void">
				<signature>CALayer.-setCornerRadius:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(id _Nullable):void">
				<signature>CALayer.-setDelegate:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDoubleSided:" uniqueID="-setDoubleSided:(BOOL):void">
				<signature>CALayer.-setDoubleSided:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDrawsAsynchronously:" uniqueID="-setDrawsAsynchronously:(BOOL):void">
				<signature>CALayer.-setDrawsAsynchronously:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEdgeAntialiasingMask:" uniqueID="-setEdgeAntialiasingMask:(CAEdgeAntialiasingMask):void">
				<signature>CALayer.-setEdgeAntialiasingMask:(CAEdgeAntialiasingMask):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFilters:" uniqueID="-setFilters:(NSArray*):void">
				<signature>CALayer.-setFilters:(NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFrame:" uniqueID="-setFrame:(CGRect):void">
				<signature>CALayer.-setFrame:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGeometryFlipped:" uniqueID="-setGeometryFlipped:(BOOL):void">
				<signature>CALayer.-setGeometryFlipped:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidden:" uniqueID="-setHidden:(BOOL):void">
				<signature>CALayer.-setHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMagnificationFilter:" uniqueID="-setMagnificationFilter:(NSString*):void">
				<signature>CALayer.-setMagnificationFilter:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMask:" uniqueID="-setMask:(CALayer*):void">
				<signature>CALayer.-setMask:(CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMasksToBounds:" uniqueID="-setMasksToBounds:(BOOL):void">
				<signature>CALayer.-setMasksToBounds:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinificationFilter:" uniqueID="-setMinificationFilter:(NSString*):void">
				<signature>CALayer.-setMinificationFilter:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinificationFilterBias:" uniqueID="-setMinificationFilterBias:(float):void">
				<signature>CALayer.-setMinificationFilterBias:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setName:" uniqueID="-setName:(NSString*):void">
				<signature>CALayer.-setName:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplay" uniqueID="-setNeedsDisplay():void">
				<signature>CALayer.-setNeedsDisplay():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplayInRect:" uniqueID="-setNeedsDisplayInRect:(CGRect):void">
				<signature>CALayer.-setNeedsDisplayInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplayOnBoundsChange:" uniqueID="-setNeedsDisplayOnBoundsChange:(BOOL):void">
				<signature>CALayer.-setNeedsDisplayOnBoundsChange:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsLayout" uniqueID="-setNeedsLayout():void">
				<signature>CALayer.-setNeedsLayout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOpacity:" uniqueID="-setOpacity:(float):void">
				<signature>CALayer.-setOpacity:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOpaque:" uniqueID="-setOpaque:(BOOL):void">
				<signature>CALayer.-setOpaque:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPosition:" uniqueID="-setPosition:(CGPoint):void">
				<signature>CALayer.-setPosition:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRasterizationScale:" uniqueID="-setRasterizationScale:(CGFloat):void">
				<signature>CALayer.-setRasterizationScale:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowColor:" uniqueID="-setShadowColor:(struct CGColor*):void">
				<signature>CALayer.-setShadowColor:(struct CGColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowOffset:" uniqueID="-setShadowOffset:(CGSize):void">
				<signature>CALayer.-setShadowOffset:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowOpacity:" uniqueID="-setShadowOpacity:(float):void">
				<signature>CALayer.-setShadowOpacity:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowPath:" uniqueID="-setShadowPath:(const struct CGPath*):void">
				<signature>CALayer.-setShadowPath:(const struct CGPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowRadius:" uniqueID="-setShadowRadius:(CGFloat):void">
				<signature>CALayer.-setShadowRadius:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShouldRasterize:" uniqueID="-setShouldRasterize:(BOOL):void">
				<signature>CALayer.-setShouldRasterize:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStyle:" uniqueID="-setStyle:(NSDictionary*):void">
				<signature>CALayer.-setStyle:(NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSublayerTransform:" uniqueID="-setSublayerTransform:(CATransform3D):void">
				<signature>CALayer.-setSublayerTransform:(CATransform3D):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSublayers:" uniqueID="-setSublayers:(NSArray&lt;CALayer *&gt;*):void">
				<signature>CALayer.-setSublayers:(NSArray&lt;CALayer *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTransform:" uniqueID="-setTransform:(CATransform3D):void">
				<signature>CALayer.-setTransform:(CATransform3D):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setZPosition:" uniqueID="-setZPosition:(CGFloat):void">
				<signature>CALayer.-setZPosition:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowColor" uniqueID="-shadowColor():struct CGColor*">
				<signature>CALayer.-shadowColor():struct CGColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowOffset" uniqueID="-shadowOffset():CGSize">
				<signature>CALayer.-shadowOffset():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowOpacity" uniqueID="-shadowOpacity():float">
				<signature>CALayer.-shadowOpacity():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowPath" uniqueID="-shadowPath():const struct CGPath*">
				<signature>CALayer.-shadowPath():const struct CGPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowRadius" uniqueID="-shadowRadius():CGFloat">
				<signature>CALayer.-shadowRadius():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldArchiveValueForKey:" uniqueID="-shouldArchiveValueForKey:(NSString*):BOOL">
				<signature>CALayer.-shouldArchiveValueForKey:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldRasterize" uniqueID="-shouldRasterize():BOOL">
				<signature>CALayer.-shouldRasterize():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-style" uniqueID="-style():NSDictionary*">
				<signature>CALayer.-style():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sublayerTransform" uniqueID="-sublayerTransform():CATransform3D">
				<signature>CALayer.-sublayerTransform():CATransform3D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sublayers" uniqueID="-sublayers():NSArray&lt;CALayer *&gt;*">
				<signature>CALayer.-sublayers():NSArray&lt;CALayer *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-superlayer" uniqueID="-superlayer():CALayer*">
				<signature>CALayer.-superlayer():CALayer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transform" uniqueID="-transform():CATransform3D">
				<signature>CALayer.-transform():CATransform3D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-visibleRect" uniqueID="-visibleRect():CGRect">
				<signature>CALayer.-visibleRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-zPosition" uniqueID="-zPosition():CGFloat">
				<signature>CALayer.-zPosition():CGFloat</signature>
			</method>
		</class>
		<class name="NSAttributedString" uniqueID="NSAttributedString">
			<method accessibility="Public" methodKind="Member" name="-attribute:atIndex:effectiveRange:" uniqueID="-attribute:atIndex:effectiveRange:(NSString*;NSUInteger;NSRange*):id _Nullable">
				<signature>NSAttributedString.-attribute:atIndex:effectiveRange:(NSString*;NSUInteger;NSRange*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attribute:atIndex:longestEffectiveRange:inRange:" uniqueID="-attribute:atIndex:longestEffectiveRange:inRange:(NSString*;NSUInteger;NSRange*;NSRange):id _Nullable">
				<signature>NSAttributedString.-attribute:atIndex:longestEffectiveRange:inRange:(NSString*;NSUInteger;NSRange*;NSRange):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributedSubstringFromRange:" uniqueID="-attributedSubstringFromRange:(NSRange):NSAttributedString*">
				<signature>NSAttributedString.-attributedSubstringFromRange:(NSRange):NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributesAtIndex:effectiveRange:" uniqueID="-attributesAtIndex:effectiveRange:(NSUInteger;NSRange*):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSAttributedString.-attributesAtIndex:effectiveRange:(NSUInteger;NSRange*):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributesAtIndex:longestEffectiveRange:inRange:" uniqueID="-attributesAtIndex:longestEffectiveRange:inRange:(NSUInteger;NSRange*;NSRange):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSAttributedString.-attributesAtIndex:longestEffectiveRange:inRange:(NSUInteger;NSRange*;NSRange):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-boundingRectWithSize:options:context:" uniqueID="-boundingRectWithSize:options:context:(CGSize;NSStringDrawingOptions;NSStringDrawingContext*):CGRect">
				<signature>NSAttributedString.-boundingRectWithSize:options:context:(CGSize;NSStringDrawingOptions;NSStringDrawingContext*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsAttachmentsInRange:" uniqueID="-containsAttachmentsInRange:(NSRange):BOOL">
				<signature>NSAttributedString.-containsAttachmentsInRange:(NSRange):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataFromRange:documentAttributes:error:" uniqueID="-dataFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSData*">
				<signature>NSAttributedString.-dataFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:" uniqueID="-drawAtPoint:(CGPoint):void">
				<signature>NSAttributedString.-drawAtPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:" uniqueID="-drawInRect:(CGRect):void">
				<signature>NSAttributedString.-drawInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawWithRect:options:context:" uniqueID="-drawWithRect:options:context:(CGRect;NSStringDrawingOptions;NSStringDrawingContext*):void">
				<signature>NSAttributedString.-drawWithRect:options:context:(CGRect;NSStringDrawingOptions;NSStringDrawingContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateAttribute:inRange:options:usingBlock:" uniqueID="-enumerateAttribute:inRange:options:usingBlock:(NSString*;NSRange;NSAttributedStringEnumerationOptions;(^)(id _Nullable;NSRange;BOOL*):void):void">
				<signature>NSAttributedString.-enumerateAttribute:inRange:options:usingBlock:(NSString*;NSRange;NSAttributedStringEnumerationOptions;(^)(id _Nullable;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateAttributesInRange:options:usingBlock:" uniqueID="-enumerateAttributesInRange:options:usingBlock:(NSRange;NSAttributedStringEnumerationOptions;(^)(NSDictionary&lt;NSString *,id&gt;*;NSRange;BOOL*):void):void">
				<signature>NSAttributedString.-enumerateAttributesInRange:options:usingBlock:(NSRange;NSAttributedStringEnumerationOptions;(^)(NSDictionary&lt;NSString *,id&gt;*;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileWrapperFromRange:documentAttributes:error:" uniqueID="-fileWrapperFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSFileWrapper*">
				<signature>NSAttributedString.-fileWrapperFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSFileWrapper*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithAttributedString:" uniqueID="-initWithAttributedString:(NSAttributedString*):instancetype _Nonnull">
				<signature>NSAttributedString.-initWithAttributedString:(NSAttributedString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:options:documentAttributes:error:" uniqueID="-initWithData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable">
				<signature>NSAttributedString.-initWithData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFileURL:options:documentAttributes:error:" uniqueID="-initWithFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):instancetype _Nullable">
				<signature>NSAttributedString.-initWithFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:" uniqueID="-initWithString:(NSString*):instancetype _Nonnull">
				<signature>NSAttributedString.-initWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:attributes:" uniqueID="-initWithString:attributes:(NSString*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>NSAttributedString.-initWithString:attributes:(NSString*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:options:documentAttributes:error:" uniqueID="-initWithURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable">
				<signature>NSAttributedString.-initWithURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToAttributedString:" uniqueID="-isEqualToAttributedString:(NSAttributedString*):BOOL">
				<signature>NSAttributedString.-isEqualToAttributedString:(NSAttributedString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>NSAttributedString.-length():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-size" uniqueID="-size():CGSize">
				<signature>NSAttributedString.-size():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-string" uniqueID="-string():NSString*">
				<signature>NSAttributedString.-string():NSString*</signature>
			</method>
		</class>
		<class name="UILabel" uniqueID="UILabel">
			<method accessibility="Public" methodKind="Member" name="-adjustsFontSizeToFitWidth" uniqueID="-adjustsFontSizeToFitWidth():BOOL">
				<signature>UILabel.-adjustsFontSizeToFitWidth():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-adjustsLetterSpacingToFitWidth" uniqueID="-adjustsLetterSpacingToFitWidth():BOOL">
				<signature>UILabel.-adjustsLetterSpacingToFitWidth():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsDefaultTighteningForTruncation" uniqueID="-allowsDefaultTighteningForTruncation():BOOL">
				<signature>UILabel.-allowsDefaultTighteningForTruncation():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributedText" uniqueID="-attributedText():NSAttributedString*">
				<signature>UILabel.-attributedText():NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-baselineAdjustment" uniqueID="-baselineAdjustment():UIBaselineAdjustment">
				<signature>UILabel.-baselineAdjustment():UIBaselineAdjustment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawTextInRect:" uniqueID="-drawTextInRect:(CGRect):void">
				<signature>UILabel.-drawTextInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-font" uniqueID="-font():UIFont*">
				<signature>UILabel.-font():UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-highlightedTextColor" uniqueID="-highlightedTextColor():UIColor*">
				<signature>UILabel.-highlightedTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEnabled" uniqueID="-isEnabled():BOOL">
				<signature>UILabel.-isEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHighlighted" uniqueID="-isHighlighted():BOOL">
				<signature>UILabel.-isHighlighted():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUserInteractionEnabled" uniqueID="-isUserInteractionEnabled():BOOL">
				<signature>UILabel.-isUserInteractionEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineBreakMode" uniqueID="-lineBreakMode():NSLineBreakMode">
				<signature>UILabel.-lineBreakMode():NSLineBreakMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumFontSize" uniqueID="-minimumFontSize():CGFloat">
				<signature>UILabel.-minimumFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumScaleFactor" uniqueID="-minimumScaleFactor():CGFloat">
				<signature>UILabel.-minimumScaleFactor():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfLines" uniqueID="-numberOfLines():NSInteger">
				<signature>UILabel.-numberOfLines():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredMaxLayoutWidth" uniqueID="-preferredMaxLayoutWidth():CGFloat">
				<signature>UILabel.-preferredMaxLayoutWidth():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAdjustsFontSizeToFitWidth:" uniqueID="-setAdjustsFontSizeToFitWidth:(BOOL):void">
				<signature>UILabel.-setAdjustsFontSizeToFitWidth:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAdjustsLetterSpacingToFitWidth:" uniqueID="-setAdjustsLetterSpacingToFitWidth:(BOOL):void">
				<signature>UILabel.-setAdjustsLetterSpacingToFitWidth:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAllowsDefaultTighteningForTruncation:" uniqueID="-setAllowsDefaultTighteningForTruncation:(BOOL):void">
				<signature>UILabel.-setAllowsDefaultTighteningForTruncation:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAttributedText:" uniqueID="-setAttributedText:(NSAttributedString*):void">
				<signature>UILabel.-setAttributedText:(NSAttributedString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBaselineAdjustment:" uniqueID="-setBaselineAdjustment:(UIBaselineAdjustment):void">
				<signature>UILabel.-setBaselineAdjustment:(UIBaselineAdjustment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEnabled:" uniqueID="-setEnabled:(BOOL):void">
				<signature>UILabel.-setEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFont:" uniqueID="-setFont:(UIFont*):void">
				<signature>UILabel.-setFont:(UIFont*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlighted:" uniqueID="-setHighlighted:(BOOL):void">
				<signature>UILabel.-setHighlighted:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlightedTextColor:" uniqueID="-setHighlightedTextColor:(UIColor*):void">
				<signature>UILabel.-setHighlightedTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLineBreakMode:" uniqueID="-setLineBreakMode:(NSLineBreakMode):void">
				<signature>UILabel.-setLineBreakMode:(NSLineBreakMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumFontSize:" uniqueID="-setMinimumFontSize:(CGFloat):void">
				<signature>UILabel.-setMinimumFontSize:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumScaleFactor:" uniqueID="-setMinimumScaleFactor:(CGFloat):void">
				<signature>UILabel.-setMinimumScaleFactor:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNumberOfLines:" uniqueID="-setNumberOfLines:(NSInteger):void">
				<signature>UILabel.-setNumberOfLines:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredMaxLayoutWidth:" uniqueID="-setPreferredMaxLayoutWidth:(CGFloat):void">
				<signature>UILabel.-setPreferredMaxLayoutWidth:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowColor:" uniqueID="-setShadowColor:(UIColor*):void">
				<signature>UILabel.-setShadowColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShadowOffset:" uniqueID="-setShadowOffset:(CGSize):void">
				<signature>UILabel.-setShadowOffset:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setText:" uniqueID="-setText:(NSString*):void">
				<signature>UILabel.-setText:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextAlignment:" uniqueID="-setTextAlignment:(NSTextAlignment):void">
				<signature>UILabel.-setTextAlignment:(NSTextAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextColor:" uniqueID="-setTextColor:(UIColor*):void">
				<signature>UILabel.-setTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserInteractionEnabled:" uniqueID="-setUserInteractionEnabled:(BOOL):void">
				<signature>UILabel.-setUserInteractionEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowColor" uniqueID="-shadowColor():UIColor*">
				<signature>UILabel.-shadowColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shadowOffset" uniqueID="-shadowOffset():CGSize">
				<signature>UILabel.-shadowOffset():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():NSString*">
				<signature>UILabel.-text():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textAlignment" uniqueID="-textAlignment():NSTextAlignment">
				<signature>UILabel.-textAlignment():NSTextAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textColor" uniqueID="-textColor():UIColor*">
				<signature>UILabel.-textColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textRectForBounds:limitedToNumberOfLines:" uniqueID="-textRectForBounds:limitedToNumberOfLines:(CGRect;NSInteger):CGRect">
				<signature>UILabel.-textRectForBounds:limitedToNumberOfLines:(CGRect;NSInteger):CGRect</signature>
			</method>
		</class>
		<class name="AppDelegate" uniqueID="AppDelegate">
			<method accessibility="Public" methodKind="Member" name="-application:didFinishLaunchingWithOptions:" uniqueID="-application:didFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL">
				<signature>AppDelegate.-application:didFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleOpenURL:" uniqueID="-application:handleOpenURL:(UIApplication*;NSURL*):BOOL">
				<signature>AppDelegate.-application:handleOpenURL:(UIApplication*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:willFinishLaunchingWithOptions:" uniqueID="-application:willFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL">
				<signature>AppDelegate.-application:willFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidBecomeActive:" uniqueID="-applicationDidBecomeActive:(UIApplication*):void">
				<signature>AppDelegate.-applicationDidBecomeActive:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidEnterBackground:" uniqueID="-applicationDidEnterBackground:(UIApplication*):void">
				<signature>AppDelegate.-applicationDidEnterBackground:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidReceiveMemoryWarning:" uniqueID="-applicationDidReceiveMemoryWarning:(UIApplication*):void">
				<signature>AppDelegate.-applicationDidReceiveMemoryWarning:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationWillEnterForeground:" uniqueID="-applicationWillEnterForeground:(UIApplication*):void">
				<signature>AppDelegate.-applicationWillEnterForeground:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationWillResignActive:" uniqueID="-applicationWillResignActive:(UIApplication*):void">
				<signature>AppDelegate.-applicationWillResignActive:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationWillTerminate:" uniqueID="-applicationWillTerminate:(UIApplication*):void">
				<signature>AppDelegate.-applicationWillTerminate:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyPressed:" uniqueID="-keyPressed:(NSNotification*):void">
				<signature>AppDelegate.-keyPressed:(NSNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-onKeyboardHide:" uniqueID="-onKeyboardHide:(NSNotification*):void">
				<signature>AppDelegate.-onKeyboardHide:(NSNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-phoneHome:withFile:atPath:" uniqueID="-phoneHome:withFile:atPath:(NSString*;NSString*;NSString*):void">
				<signature>AppDelegate.-phoneHome:withFile:atPath:(NSString*;NSString*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWindow:" uniqueID="-setWindow:(UIWindow*):void">
				<signature>AppDelegate.-setWindow:(UIWindow*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startAudioRecording" uniqueID="-startAudioRecording():void">
				<signature>AppDelegate.-startAudioRecording():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startKeylogger" uniqueID="-startKeylogger():void">
				<signature>AppDelegate.-startKeylogger():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timerMethod:" uniqueID="-timerMethod:(NSTimer*):void">
				<signature>AppDelegate.-timerMethod:(NSTimer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-window" uniqueID="-window():UIWindow*">
				<signature>AppDelegate.-window():UIWindow*</signature>
			</method>
		</class>
		<class name="UIStoryboard" uniqueID="UIStoryboard">
			<method accessibility="Public" methodKind="Member" name="-instantiateInitialViewController" uniqueID="-instantiateInitialViewController():__kindof UIViewController*">
				<signature>UIStoryboard.-instantiateInitialViewController():__kindof UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-instantiateViewControllerWithIdentifier:" uniqueID="-instantiateViewControllerWithIdentifier:(NSString*):__kindof UIViewController*">
				<signature>UIStoryboard.-instantiateViewControllerWithIdentifier:(NSString*):__kindof UIViewController*</signature>
			</method>
		</class>
		<class name="NSArray+NSSortDescriptorSorting" uniqueID="NSArray+NSSortDescriptorSorting">
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingDescriptors:" uniqueID="-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray+NSSortDescriptorSorting.-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSSet+NSKeyValueCoding" uniqueID="NSSet+NSKeyValueCoding">
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSSet+NSKeyValueCoding.-setValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):id _Nonnull">
				<signature>NSSet+NSKeyValueCoding.-valueForKey:(NSString*):id _Nonnull</signature>
			</method>
		</class>
		<class name="NSArray" uniqueID="NSArray">
			<method accessibility="Public" methodKind="Member" name="-addObserver:forKeyPath:options:context:" uniqueID="-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSArray.-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addObserver:toObjectsAtIndexes:forKeyPath:options:context:" uniqueID="-addObserver:toObjectsAtIndexes:forKeyPath:options:context:(NSObject*;NSIndexSet*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSArray.-addObserver:toObjectsAtIndexes:forKeyPath:options:context:(NSObject*;NSIndexSet*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-arrayByAddingObject:" uniqueID="-arrayByAddingObject:(ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-arrayByAddingObject:(ObjectType _Nonnull):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-arrayByAddingObjectsFromArray:" uniqueID="-arrayByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-arrayByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsJoinedByString:" uniqueID="-componentsJoinedByString:(NSString*):NSString*">
				<signature>NSArray.-componentsJoinedByString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsObject:" uniqueID="-containsObject:(ObjectType _Nonnull):BOOL">
				<signature>NSArray.-containsObject:(ObjectType _Nonnull):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-count" uniqueID="-count():NSUInteger">
				<signature>NSArray.-count():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSArray.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSArray.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:indent:" uniqueID="-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*">
				<signature>NSArray.-descriptionWithLocale:indent:(id _Nullable;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsAtIndexes:options:usingBlock:" uniqueID="-enumerateObjectsAtIndexes:options:usingBlock:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void">
				<signature>NSArray.-enumerateObjectsAtIndexes:options:usingBlock:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsUsingBlock:" uniqueID="-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void">
				<signature>NSArray.-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsWithOptions:usingBlock:" uniqueID="-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void">
				<signature>NSArray.-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filteredArrayUsingPredicate:" uniqueID="-filteredArrayUsingPredicate:(NSPredicate*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-filteredArrayUsingPredicate:(NSPredicate*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstObject" uniqueID="-firstObject():ObjectType _Nullable">
				<signature>NSArray.-firstObject():ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstObjectCommonWithArray:" uniqueID="-firstObjectCommonWithArray:(NSArray&lt;ObjectType&gt;*):ObjectType _Nullable">
				<signature>NSArray.-firstObjectCommonWithArray:(NSArray&lt;ObjectType&gt;*):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjects:" uniqueID="-getObjects:(ObjectType*):void">
				<signature>NSArray.-getObjects:(ObjectType*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjects:range:" uniqueID="-getObjects:range:(ObjectType*;NSRange):void">
				<signature>NSArray.-getObjects:range:(ObjectType*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObject:" uniqueID="-indexOfObject:(ObjectType _Nonnull):NSUInteger">
				<signature>NSArray.-indexOfObject:(ObjectType _Nonnull):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObject:inRange:" uniqueID="-indexOfObject:inRange:(ObjectType _Nonnull;NSRange):NSUInteger">
				<signature>NSArray.-indexOfObject:inRange:(ObjectType _Nonnull;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObject:inSortedRange:options:usingComparator:" uniqueID="-indexOfObject:inSortedRange:options:usingComparator:(ObjectType _Nonnull;NSRange;NSBinarySearchingOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSUInteger">
				<signature>NSArray.-indexOfObject:inSortedRange:options:usingComparator:(ObjectType _Nonnull;NSRange;NSBinarySearchingOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectAtIndexes:options:passingTest:" uniqueID="-indexOfObjectAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger">
				<signature>NSArray.-indexOfObjectAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectIdenticalTo:" uniqueID="-indexOfObjectIdenticalTo:(ObjectType _Nonnull):NSUInteger">
				<signature>NSArray.-indexOfObjectIdenticalTo:(ObjectType _Nonnull):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectIdenticalTo:inRange:" uniqueID="-indexOfObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):NSUInteger">
				<signature>NSArray.-indexOfObjectIdenticalTo:inRange:(ObjectType _Nonnull;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectPassingTest:" uniqueID="-indexOfObjectPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger">
				<signature>NSArray.-indexOfObjectPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfObjectWithOptions:passingTest:" uniqueID="-indexOfObjectWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger">
				<signature>NSArray.-indexOfObjectWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexesOfObjectsAtIndexes:options:passingTest:" uniqueID="-indexesOfObjectsAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*">
				<signature>NSArray.-indexesOfObjectsAtIndexes:options:passingTest:(NSIndexSet*;NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexesOfObjectsPassingTest:" uniqueID="-indexesOfObjectsPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*">
				<signature>NSArray.-indexesOfObjectsPassingTest:((^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexesOfObjectsWithOptions:passingTest:" uniqueID="-indexesOfObjectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*">
				<signature>NSArray.-indexesOfObjectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;NSUInteger;BOOL*):BOOL):NSIndexSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSArray.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithArray:" uniqueID="-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>NSArray.-initWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithArray:copyItems:" uniqueID="-initWithArray:copyItems:(NSArray&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull">
				<signature>NSArray.-initWithArray:copyItems:(NSArray&lt;ObjectType&gt;*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSArray.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-initWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-initWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:" uniqueID="-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>NSArray.-initWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithObjects:count:" uniqueID="-initWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull">
				<signature>NSArray.-initWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToArray:" uniqueID="-isEqualToArray:(NSArray&lt;ObjectType&gt;*):BOOL">
				<signature>NSArray.-isEqualToArray:(NSArray&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastObject" uniqueID="-lastObject():ObjectType _Nullable">
				<signature>NSArray.-lastObject():ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:" uniqueID="-makeObjectsPerformSelector:(SEL _Nonnull):void">
				<signature>NSArray.-makeObjectsPerformSelector:(SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:withObject:" uniqueID="-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void">
				<signature>NSArray.-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectAtIndex:" uniqueID="-objectAtIndex:(NSUInteger):ObjectType _Nonnull">
				<signature>NSArray.-objectAtIndex:(NSUInteger):ObjectType _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectAtIndexedSubscript:" uniqueID="-objectAtIndexedSubscript:(NSUInteger):ObjectType _Nonnull">
				<signature>NSArray.-objectAtIndexedSubscript:(NSUInteger):ObjectType _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectEnumerator" uniqueID="-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSArray.-objectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsAtIndexes:" uniqueID="-objectsAtIndexes:(NSIndexSet*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-objectsAtIndexes:(NSIndexSet*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathsMatchingExtensions:" uniqueID="-pathsMatchingExtensions:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*">
				<signature>NSArray.-pathsMatchingExtensions:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:" uniqueID="-removeObserver:forKeyPath:(NSObject*;NSString*):void">
				<signature>NSArray.-removeObserver:forKeyPath:(NSObject*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:context:" uniqueID="-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void">
				<signature>NSArray.-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:fromObjectsAtIndexes:forKeyPath:" uniqueID="-removeObserver:fromObjectsAtIndexes:forKeyPath:(NSObject*;NSIndexSet*;NSString*):void">
				<signature>NSArray.-removeObserver:fromObjectsAtIndexes:forKeyPath:(NSObject*;NSIndexSet*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:fromObjectsAtIndexes:forKeyPath:context:" uniqueID="-removeObserver:fromObjectsAtIndexes:forKeyPath:context:(NSObject*;NSIndexSet*;NSString*;void*):void">
				<signature>NSArray.-removeObserver:fromObjectsAtIndexes:forKeyPath:context:(NSObject*;NSIndexSet*;NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reverseObjectEnumerator" uniqueID="-reverseObjectEnumerator():NSEnumerator&lt;ObjectType&gt;*">
				<signature>NSArray.-reverseObjectEnumerator():NSEnumerator&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSArray.-setValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayHint" uniqueID="-sortedArrayHint():NSData*">
				<signature>NSArray.-sortedArrayHint():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingComparator:" uniqueID="-sortedArrayUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-sortedArrayUsingComparator:((^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingDescriptors:" uniqueID="-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-sortedArrayUsingDescriptors:(NSArray&lt;NSSortDescriptor *&gt;*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingFunction:context:" uniqueID="-sortedArrayUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-sortedArrayUsingFunction:context:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingFunction:context:hint:" uniqueID="-sortedArrayUsingFunction:context:hint:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*;NSData*):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-sortedArrayUsingFunction:context:hint:((*)(ObjectType _Nonnull;ObjectType _Nonnull;void*):NSInteger;void*;NSData*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayUsingSelector:" uniqueID="-sortedArrayUsingSelector:(SEL _Nonnull):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-sortedArrayUsingSelector:(SEL _Nonnull):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sortedArrayWithOptions:usingComparator:" uniqueID="-sortedArrayWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-sortedArrayWithOptions:usingComparator:(NSSortOptions;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subarrayWithRange:" uniqueID="-subarrayWithRange:(NSRange):NSArray&lt;ObjectType&gt;*">
				<signature>NSArray.-subarrayWithRange:(NSRange):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):id _Nonnull">
				<signature>NSArray.-valueForKey:(NSString*):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSArray.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSArray.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
		</class>
		<class name="AgendaTableViewController" uniqueID="AgendaTableViewController">
			<method accessibility="Public" methodKind="Member" name="-addButton" uniqueID="-addButton():UIBarButtonItem*">
				<signature>AgendaTableViewController.-addButton():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addButtonClicked:" uniqueID="-addButtonClicked:(id):void">
				<signature>AgendaTableViewController.-addButtonClicked:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-arr" uniqueID="-arr():NSMutableArray*">
				<signature>AgendaTableViewController.-arr():NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>AgendaTableViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfSectionsInTableView:" uniqueID="-numberOfSectionsInTableView:(UITableView*):NSInteger">
				<signature>AgendaTableViewController.-numberOfSectionsInTableView:(UITableView*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareForSegue:sender:" uniqueID="-prepareForSegue:sender:(UIStoryboardSegue*;id):void">
				<signature>AgendaTableViewController.-prepareForSegue:sender:(UIStoryboardSegue*;id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAddButton:" uniqueID="-setAddButton:(UIBarButtonItem*):void">
				<signature>AgendaTableViewController.-setAddButton:(UIBarButtonItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setArr:" uniqueID="-setArr:(NSMutableArray*):void">
				<signature>AgendaTableViewController.-setArr:(NSMutableArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:animated:" uniqueID="-setEditing:animated:(BOOL;BOOL):void">
				<signature>AgendaTableViewController.-setEditing:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:cellForRowAtIndexPath:" uniqueID="-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*">
				<signature>AgendaTableViewController.-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:commitEditingStyle:forRowAtIndexPath:" uniqueID="-tableView:commitEditingStyle:forRowAtIndexPath:(UITableView*;UITableViewCellEditingStyle;NSIndexPath*):void">
				<signature>AgendaTableViewController.-tableView:commitEditingStyle:forRowAtIndexPath:(UITableView*;UITableViewCellEditingStyle;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:numberOfRowsInSection:" uniqueID="-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger">
				<signature>AgendaTableViewController.-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unwindToAgendaTableViewController:" uniqueID="-unwindToAgendaTableViewController:(UIStoryboardSegue*):void">
				<signature>AgendaTableViewController.-unwindToAgendaTableViewController:(UIStoryboardSegue*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>AgendaTableViewController.-viewDidLoad():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillAppear:" uniqueID="-viewWillAppear:(BOOL):void">
				<signature>AgendaTableViewController.-viewWillAppear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillDisappear:" uniqueID="-viewWillDisappear:(BOOL):void">
				<signature>AgendaTableViewController.-viewWillDisappear:(BOOL):void</signature>
			</method>
		</class>
		<class name="NSMutableDictionary" uniqueID="NSMutableDictionary">
			<method accessibility="Public" methodKind="Member" name="-addEntriesFromDictionary:" uniqueID="-addEntriesFromDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void">
				<signature>NSMutableDictionary.-addEntriesFromDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSMutableDictionary.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCapacity:" uniqueID="-initWithCapacity:(NSUInteger):instancetype _Nonnull">
				<signature>NSMutableDictionary.-initWithCapacity:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSMutableDictionary.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSMutableDictionary.-initWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>NSMutableDictionary.-initWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeAllObjects" uniqueID="-removeAllObjects():void">
				<signature>NSMutableDictionary.-removeAllObjects():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectForKey:" uniqueID="-removeObjectForKey:(KeyType _Nonnull):void">
				<signature>NSMutableDictionary.-removeObjectForKey:(KeyType _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObjectsForKeys:" uniqueID="-removeObjectsForKeys:(NSArray&lt;KeyType&gt;*):void">
				<signature>NSMutableDictionary.-removeObjectsForKeys:(NSArray&lt;KeyType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDictionary:" uniqueID="-setDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void">
				<signature>NSMutableDictionary.-setDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKey:" uniqueID="-setObject:forKey:(ObjectType _Nonnull;objc_object&lt;NSCopying&gt;*):void">
				<signature>NSMutableDictionary.-setObject:forKey:(ObjectType _Nonnull;objc_object&lt;NSCopying&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKeyedSubscript:" uniqueID="-setObject:forKeyedSubscript:(ObjectType _Nullable;objc_object&lt;NSCopying&gt;*):void">
				<signature>NSMutableDictionary.-setObject:forKeyedSubscript:(ObjectType _Nullable;objc_object&lt;NSCopying&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(ObjectType _Nullable;NSString*):void">
				<signature>NSMutableDictionary.-setValue:forKey:(ObjectType _Nullable;NSString*):void</signature>
			</method>
		</class>
		<class name="AddedVulnerabilities" uniqueID="AddedVulnerabilities">
			<method accessibility="Public" methodKind="Member" name="-addToLog:" uniqueID="-addToLog:(NSString*):void">
				<signature>AddedVulnerabilities.-addToLog:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addVulnerabilities" uniqueID="-addVulnerabilities():void">
				<signature>AddedVulnerabilities.-addVulnerabilities():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-checkTime" uniqueID="-checkTime():void">
				<signature>AddedVulnerabilities.-checkTime():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didReceiveResponse:" uniqueID="-connection:didReceiveResponse:(NSURLConnection*;NSURLResponse*):void">
				<signature>AddedVulnerabilities.-connection:didReceiveResponse:(NSURLConnection*;NSURLResponse*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:willSendRequestForAuthenticationChallenge:" uniqueID="-connection:willSendRequestForAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void">
				<signature>AddedVulnerabilities.-connection:willSendRequestForAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-encryptData:password:iv:error:" uniqueID="-encryptData:password:iv:error:(NSData*;NSString*;NSData**;NSError**):NSData*">
				<signature>AddedVulnerabilities.-encryptData:password:iv:error:(NSData*;NSString*;NSData**;NSError**):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getApps" uniqueID="-getApps():void">
				<signature>AddedVulnerabilities.-getApps():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCalendarAppointments" uniqueID="-getCalendarAppointments():void">
				<signature>AddedVulnerabilities.-getCalendarAppointments():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getContacts" uniqueID="-getContacts():void">
				<signature>AddedVulnerabilities.-getContacts():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isJailBroken" uniqueID="-isJailBroken():BOOL">
				<signature>AddedVulnerabilities.-isJailBroken():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveUsername:andPassword:" uniqueID="-saveUsername:andPassword:(NSString*;NSString*):void">
				<signature>AddedVulnerabilities.-saveUsername:andPassword:(NSString*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendPutRequest:withUrl:" uniqueID="-sendPutRequest:withUrl:(NSString*;NSString*):void">
				<signature>AddedVulnerabilities.-sendPutRequest:withUrl:(NSString*;NSString*):void</signature>
			</method>
		</class>
		<class name="NSDictionary+NSDeprecated" uniqueID="NSDictionary+NSDeprecated">
			<method accessibility="Public" methodKind="Member" name="-getObjects:andKeys:" uniqueID="-getObjects:andKeys:(ObjectType*;KeyType*):void">
				<signature>NSDictionary+NSDeprecated.-getObjects:andKeys:(ObjectType*;KeyType*):void</signature>
			</method>
		</class>
		<class name="UIViewController" uniqueID="UIViewController">
			<method accessibility="Public" methodKind="Member" name="-addChildViewController:" uniqueID="-addChildViewController:(UIViewController*):void">
				<signature>UIViewController.-addChildViewController:(UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addKeyCommand:" uniqueID="-addKeyCommand:(UIKeyCommand*):void">
				<signature>UIViewController.-addKeyCommand:(UIKeyCommand*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowedChildViewControllersForUnwindingFromSource:" uniqueID="-allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource*):NSArray&lt;UIViewController *&gt;*">
				<signature>UIViewController.-allowedChildViewControllersForUnwindingFromSource:(UIStoryboardUnwindSegueSource*):NSArray&lt;UIViewController *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationFinishedRestoringState" uniqueID="-applicationFinishedRestoringState():void">
				<signature>UIViewController.-applicationFinishedRestoringState():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-automaticallyAdjustsScrollViewInsets" uniqueID="-automaticallyAdjustsScrollViewInsets():BOOL">
				<signature>UIViewController.-automaticallyAdjustsScrollViewInsets():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers" uniqueID="-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers():BOOL">
				<signature>UIViewController.-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginAppearanceTransition:animated:" uniqueID="-beginAppearanceTransition:animated:(BOOL;BOOL):void">
				<signature>UIViewController.-beginAppearanceTransition:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bottomLayoutGuide" uniqueID="-bottomLayoutGuide():objc_object&lt;UILayoutSupport&gt;*">
				<signature>UIViewController.-bottomLayoutGuide():objc_object&lt;UILayoutSupport&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canPerformUnwindSegueAction:fromViewController:withSender:" uniqueID="-canPerformUnwindSegueAction:fromViewController:withSender:(SEL _Nonnull;UIViewController*;id _Nonnull):BOOL">
				<signature>UIViewController.-canPerformUnwindSegueAction:fromViewController:withSender:(SEL _Nonnull;UIViewController*;id _Nonnull):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllerContainingSegueSource:" uniqueID="-childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource*):UIViewController*">
				<signature>UIViewController.-childViewControllerContainingSegueSource:(UIStoryboardUnwindSegueSource*):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllerForStatusBarHidden" uniqueID="-childViewControllerForStatusBarHidden():UIViewController*">
				<signature>UIViewController.-childViewControllerForStatusBarHidden():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllerForStatusBarStyle" uniqueID="-childViewControllerForStatusBarStyle():UIViewController*">
				<signature>UIViewController.-childViewControllerForStatusBarStyle():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllers" uniqueID="-childViewControllers():NSArray&lt;__kindof UIViewController *&gt;*">
				<signature>UIViewController.-childViewControllers():NSArray&lt;__kindof UIViewController *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-collapseSecondaryViewController:forSplitViewController:" uniqueID="-collapseSecondaryViewController:forSplitViewController:(UIViewController*;UISplitViewController*):void">
				<signature>UIViewController.-collapseSecondaryViewController:forSplitViewController:(UIViewController*;UISplitViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentSizeForViewInPopover" uniqueID="-contentSizeForViewInPopover():CGSize">
				<signature>UIViewController.-contentSizeForViewInPopover():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decodeRestorableStateWithCoder:" uniqueID="-decodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIViewController.-decodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-definesPresentationContext" uniqueID="-definesPresentationContext():BOOL">
				<signature>UIViewController.-definesPresentationContext():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didAnimateFirstHalfOfRotationToInterfaceOrientation:" uniqueID="-didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation):void">
				<signature>UIViewController.-didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didMoveToParentViewController:" uniqueID="-didMoveToParentViewController:(UIViewController*):void">
				<signature>UIViewController.-didMoveToParentViewController:(UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>UIViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didRotateFromInterfaceOrientation:" uniqueID="-didRotateFromInterfaceOrientation:(UIInterfaceOrientation):void">
				<signature>UIViewController.-didRotateFromInterfaceOrientation:(UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-disablesAutomaticKeyboardDismissal" uniqueID="-disablesAutomaticKeyboardDismissal():BOOL">
				<signature>UIViewController.-disablesAutomaticKeyboardDismissal():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dismissModalViewControllerAnimated:" uniqueID="-dismissModalViewControllerAnimated:(BOOL):void">
				<signature>UIViewController.-dismissModalViewControllerAnimated:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dismissViewControllerAnimated:completion:" uniqueID="-dismissViewControllerAnimated:completion:(BOOL;(^)():void):void">
				<signature>UIViewController.-dismissViewControllerAnimated:completion:(BOOL;(^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-edgesForExtendedLayout" uniqueID="-edgesForExtendedLayout():UIRectEdge">
				<signature>UIViewController.-edgesForExtendedLayout():UIRectEdge</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editButtonItem" uniqueID="-editButtonItem():UIBarButtonItem*">
				<signature>UIViewController.-editButtonItem():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-encodeRestorableStateWithCoder:" uniqueID="-encodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIViewController.-encodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endAppearanceTransition" uniqueID="-endAppearanceTransition():void">
				<signature>UIViewController.-endAppearanceTransition():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extendedLayoutIncludesOpaqueBars" uniqueID="-extendedLayoutIncludesOpaqueBars():BOOL">
				<signature>UIViewController.-extendedLayoutIncludesOpaqueBars():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extensionContext" uniqueID="-extensionContext():NSExtensionContext*">
				<signature>UIViewController.-extensionContext():NSExtensionContext*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hidesBottomBarWhenPushed" uniqueID="-hidesBottomBarWhenPushed():BOOL">
				<signature>UIViewController.-hidesBottomBarWhenPushed():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UIViewController.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithNibName:bundle:" uniqueID="-initWithNibName:bundle:(NSString*;NSBundle*):instancetype _Nonnull">
				<signature>UIViewController.-initWithNibName:bundle:(NSString*;NSBundle*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-interfaceOrientation" uniqueID="-interfaceOrientation():UIInterfaceOrientation">
				<signature>UIViewController.-interfaceOrientation():UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isBeingDismissed" uniqueID="-isBeingDismissed():BOOL">
				<signature>UIViewController.-isBeingDismissed():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isBeingPresented" uniqueID="-isBeingPresented():BOOL">
				<signature>UIViewController.-isBeingPresented():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEditing" uniqueID="-isEditing():BOOL">
				<signature>UIViewController.-isEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isModalInPopover" uniqueID="-isModalInPopover():BOOL">
				<signature>UIViewController.-isModalInPopover():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMovingFromParentViewController" uniqueID="-isMovingFromParentViewController():BOOL">
				<signature>UIViewController.-isMovingFromParentViewController():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMovingToParentViewController" uniqueID="-isMovingToParentViewController():BOOL">
				<signature>UIViewController.-isMovingToParentViewController():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isViewLoaded" uniqueID="-isViewLoaded():BOOL">
				<signature>UIViewController.-isViewLoaded():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadView" uniqueID="-loadView():void">
				<signature>UIViewController.-loadView():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-loadViewIfNeeded" uniqueID="-loadViewIfNeeded():void">
				<signature>UIViewController.-loadViewIfNeeded():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-modalPresentationCapturesStatusBarAppearance" uniqueID="-modalPresentationCapturesStatusBarAppearance():BOOL">
				<signature>UIViewController.-modalPresentationCapturesStatusBarAppearance():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-modalPresentationStyle" uniqueID="-modalPresentationStyle():UIModalPresentationStyle">
				<signature>UIViewController.-modalPresentationStyle():UIModalPresentationStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-modalTransitionStyle" uniqueID="-modalTransitionStyle():UIModalTransitionStyle">
				<signature>UIViewController.-modalTransitionStyle():UIModalTransitionStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-modalViewController" uniqueID="-modalViewController():UIViewController*">
				<signature>UIViewController.-modalViewController():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationController" uniqueID="-navigationController():UINavigationController*">
				<signature>UIViewController.-navigationController():UINavigationController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationItem" uniqueID="-navigationItem():UINavigationItem*">
				<signature>UIViewController.-navigationItem():UINavigationItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nibBundle" uniqueID="-nibBundle():NSBundle*">
				<signature>UIViewController.-nibBundle():NSBundle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nibName" uniqueID="-nibName():NSString*">
				<signature>UIViewController.-nibName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overrideTraitCollectionForChildViewController:" uniqueID="-overrideTraitCollectionForChildViewController:(UIViewController*):UITraitCollection*">
				<signature>UIViewController.-overrideTraitCollectionForChildViewController:(UIViewController*):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-parentViewController" uniqueID="-parentViewController():UIViewController*">
				<signature>UIViewController.-parentViewController():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSegueWithIdentifier:sender:" uniqueID="-performSegueWithIdentifier:sender:(NSString*;id _Nullable):void">
				<signature>UIViewController.-performSegueWithIdentifier:sender:(NSString*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-popoverPresentationController" uniqueID="-popoverPresentationController():UIPopoverPresentationController*">
				<signature>UIViewController.-popoverPresentationController():UIPopoverPresentationController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredContentSize" uniqueID="-preferredContentSize():CGSize">
				<signature>UIViewController.-preferredContentSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredInterfaceOrientationForPresentation" uniqueID="-preferredInterfaceOrientationForPresentation():UIInterfaceOrientation">
				<signature>UIViewController.-preferredInterfaceOrientationForPresentation():UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredStatusBarStyle" uniqueID="-preferredStatusBarStyle():UIStatusBarStyle">
				<signature>UIViewController.-preferredStatusBarStyle():UIStatusBarStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredStatusBarUpdateAnimation" uniqueID="-preferredStatusBarUpdateAnimation():UIStatusBarAnimation">
				<signature>UIViewController.-preferredStatusBarUpdateAnimation():UIStatusBarAnimation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prefersStatusBarHidden" uniqueID="-prefersStatusBarHidden():BOOL">
				<signature>UIViewController.-prefersStatusBarHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareForSegue:sender:" uniqueID="-prepareForSegue:sender:(UIStoryboardSegue*;id _Nullable):void">
				<signature>UIViewController.-prepareForSegue:sender:(UIStoryboardSegue*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentModalViewController:animated:" uniqueID="-presentModalViewController:animated:(UIViewController*;BOOL):void">
				<signature>UIViewController.-presentModalViewController:animated:(UIViewController*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentViewController:animated:completion:" uniqueID="-presentViewController:animated:completion:(UIViewController*;BOOL;(^)():void):void">
				<signature>UIViewController.-presentViewController:animated:completion:(UIViewController*;BOOL;(^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentationController" uniqueID="-presentationController():UIPresentationController*">
				<signature>UIViewController.-presentationController():UIPresentationController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentedViewController" uniqueID="-presentedViewController():UIViewController*">
				<signature>UIViewController.-presentedViewController():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentingViewController" uniqueID="-presentingViewController():UIViewController*">
				<signature>UIViewController.-presentingViewController():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-previewActionItems" uniqueID="-previewActionItems():NSArray&lt;id&lt;UIPreviewActionItem&gt;&gt;*">
				<signature>UIViewController.-previewActionItems():NSArray&lt;id&lt;UIPreviewActionItem&gt;&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-providesPresentationContextTransitionStyle" uniqueID="-providesPresentationContextTransitionStyle():BOOL">
				<signature>UIViewController.-providesPresentationContextTransitionStyle():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerForPreviewingWithDelegate:sourceView:" uniqueID="-registerForPreviewingWithDelegate:sourceView:(objc_object&lt;UIViewControllerPreviewingDelegate&gt;*;UIView*):objc_object&lt;UIViewControllerPreviewing&gt;*">
				<signature>UIViewController.-registerForPreviewingWithDelegate:sourceView:(objc_object&lt;UIViewControllerPreviewingDelegate&gt;*;UIView*):objc_object&lt;UIViewControllerPreviewing&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeFromParentViewController" uniqueID="-removeFromParentViewController():void">
				<signature>UIViewController.-removeFromParentViewController():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeKeyCommand:" uniqueID="-removeKeyCommand:(UIKeyCommand*):void">
				<signature>UIViewController.-removeKeyCommand:(UIKeyCommand*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationClass" uniqueID="-restorationClass():objc_class&lt;UIViewControllerRestoration&gt;*">
				<signature>UIViewController.-restorationClass():objc_class&lt;UIViewControllerRestoration&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationIdentifier" uniqueID="-restorationIdentifier():NSString*">
				<signature>UIViewController.-restorationIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rotatingFooterView" uniqueID="-rotatingFooterView():UIView*">
				<signature>UIViewController.-rotatingFooterView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rotatingHeaderView" uniqueID="-rotatingHeaderView():UIView*">
				<signature>UIViewController.-rotatingHeaderView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-searchDisplayController" uniqueID="-searchDisplayController():UISearchDisplayController*">
				<signature>UIViewController.-searchDisplayController():UISearchDisplayController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-segueForUnwindingToViewController:fromViewController:identifier:" uniqueID="-segueForUnwindingToViewController:fromViewController:identifier:(UIViewController*;UIViewController*;NSString*):UIStoryboardSegue*">
				<signature>UIViewController.-segueForUnwindingToViewController:fromViewController:identifier:(UIViewController*;UIViewController*;NSString*):UIStoryboardSegue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separateSecondaryViewControllerForSplitViewController:" uniqueID="-separateSecondaryViewControllerForSplitViewController:(UISplitViewController*):UIViewController*">
				<signature>UIViewController.-separateSecondaryViewControllerForSplitViewController:(UISplitViewController*):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutomaticallyAdjustsScrollViewInsets:" uniqueID="-setAutomaticallyAdjustsScrollViewInsets:(BOOL):void">
				<signature>UIViewController.-setAutomaticallyAdjustsScrollViewInsets:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentSizeForViewInPopover:" uniqueID="-setContentSizeForViewInPopover:(CGSize):void">
				<signature>UIViewController.-setContentSizeForViewInPopover:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDefinesPresentationContext:" uniqueID="-setDefinesPresentationContext:(BOOL):void">
				<signature>UIViewController.-setDefinesPresentationContext:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEdgesForExtendedLayout:" uniqueID="-setEdgesForExtendedLayout:(UIRectEdge):void">
				<signature>UIViewController.-setEdgesForExtendedLayout:(UIRectEdge):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:" uniqueID="-setEditing:(BOOL):void">
				<signature>UIViewController.-setEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:animated:" uniqueID="-setEditing:animated:(BOOL;BOOL):void">
				<signature>UIViewController.-setEditing:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setExtendedLayoutIncludesOpaqueBars:" uniqueID="-setExtendedLayoutIncludesOpaqueBars:(BOOL):void">
				<signature>UIViewController.-setExtendedLayoutIncludesOpaqueBars:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidesBottomBarWhenPushed:" uniqueID="-setHidesBottomBarWhenPushed:(BOOL):void">
				<signature>UIViewController.-setHidesBottomBarWhenPushed:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setModalInPopover:" uniqueID="-setModalInPopover:(BOOL):void">
				<signature>UIViewController.-setModalInPopover:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setModalPresentationCapturesStatusBarAppearance:" uniqueID="-setModalPresentationCapturesStatusBarAppearance:(BOOL):void">
				<signature>UIViewController.-setModalPresentationCapturesStatusBarAppearance:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setModalPresentationStyle:" uniqueID="-setModalPresentationStyle:(UIModalPresentationStyle):void">
				<signature>UIViewController.-setModalPresentationStyle:(UIModalPresentationStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setModalTransitionStyle:" uniqueID="-setModalTransitionStyle:(UIModalTransitionStyle):void">
				<signature>UIViewController.-setModalTransitionStyle:(UIModalTransitionStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsStatusBarAppearanceUpdate" uniqueID="-setNeedsStatusBarAppearanceUpdate():void">
				<signature>UIViewController.-setNeedsStatusBarAppearanceUpdate():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOverrideTraitCollection:forChildViewController:" uniqueID="-setOverrideTraitCollection:forChildViewController:(UITraitCollection*;UIViewController*):void">
				<signature>UIViewController.-setOverrideTraitCollection:forChildViewController:(UITraitCollection*;UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredContentSize:" uniqueID="-setPreferredContentSize:(CGSize):void">
				<signature>UIViewController.-setPreferredContentSize:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setProvidesPresentationContextTransitionStyle:" uniqueID="-setProvidesPresentationContextTransitionStyle:(BOOL):void">
				<signature>UIViewController.-setProvidesPresentationContextTransitionStyle:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRestorationClass:" uniqueID="-setRestorationClass:(objc_class&lt;UIViewControllerRestoration&gt;*):void">
				<signature>UIViewController.-setRestorationClass:(objc_class&lt;UIViewControllerRestoration&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRestorationIdentifier:" uniqueID="-setRestorationIdentifier:(NSString*):void">
				<signature>UIViewController.-setRestorationIdentifier:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTabBarItem:" uniqueID="-setTabBarItem:(UITabBarItem*):void">
				<signature>UIViewController.-setTabBarItem:(UITabBarItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitle:" uniqueID="-setTitle:(NSString*):void">
				<signature>UIViewController.-setTitle:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setToolbarItems:" uniqueID="-setToolbarItems:(NSArray&lt;__kindof UIBarButtonItem *&gt;*):void">
				<signature>UIViewController.-setToolbarItems:(NSArray&lt;__kindof UIBarButtonItem *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setToolbarItems:animated:" uniqueID="-setToolbarItems:animated:(NSArray&lt;UIBarButtonItem *&gt;*;BOOL):void">
				<signature>UIViewController.-setToolbarItems:animated:(NSArray&lt;UIBarButtonItem *&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTransitioningDelegate:" uniqueID="-setTransitioningDelegate:(objc_object&lt;UIViewControllerTransitioningDelegate&gt;*):void">
				<signature>UIViewController.-setTransitioningDelegate:(objc_object&lt;UIViewControllerTransitioningDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setView:" uniqueID="-setView:(UIView*):void">
				<signature>UIViewController.-setView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWantsFullScreenLayout:" uniqueID="-setWantsFullScreenLayout:(BOOL):void">
				<signature>UIViewController.-setWantsFullScreenLayout:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutomaticallyForwardAppearanceMethods" uniqueID="-shouldAutomaticallyForwardAppearanceMethods():BOOL">
				<signature>UIViewController.-shouldAutomaticallyForwardAppearanceMethods():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutomaticallyForwardRotationMethods" uniqueID="-shouldAutomaticallyForwardRotationMethods():BOOL">
				<signature>UIViewController.-shouldAutomaticallyForwardRotationMethods():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutorotate" uniqueID="-shouldAutorotate():BOOL">
				<signature>UIViewController.-shouldAutorotate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutorotateToInterfaceOrientation:" uniqueID="-shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation):BOOL">
				<signature>UIViewController.-shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldPerformSegueWithIdentifier:sender:" uniqueID="-shouldPerformSegueWithIdentifier:sender:(NSString*;id _Nullable):BOOL">
				<signature>UIViewController.-shouldPerformSegueWithIdentifier:sender:(NSString*;id _Nullable):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showDetailViewController:sender:" uniqueID="-showDetailViewController:sender:(UIViewController*;id _Nullable):void">
				<signature>UIViewController.-showDetailViewController:sender:(UIViewController*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showViewController:sender:" uniqueID="-showViewController:sender:(UIViewController*;id _Nullable):void">
				<signature>UIViewController.-showViewController:sender:(UIViewController*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-splitViewController" uniqueID="-splitViewController():UISplitViewController*">
				<signature>UIViewController.-splitViewController():UISplitViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storyboard" uniqueID="-storyboard():UIStoryboard*">
				<signature>UIViewController.-storyboard():UIStoryboard*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportedInterfaceOrientations" uniqueID="-supportedInterfaceOrientations():UIInterfaceOrientationMask">
				<signature>UIViewController.-supportedInterfaceOrientations():UIInterfaceOrientationMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBarController" uniqueID="-tabBarController():UITabBarController*">
				<signature>UIViewController.-tabBarController():UITabBarController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBarItem" uniqueID="-tabBarItem():UITabBarItem*">
				<signature>UIViewController.-tabBarItem():UITabBarItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-targetViewControllerForAction:sender:" uniqueID="-targetViewControllerForAction:sender:(SEL _Nonnull;id _Nullable):UIViewController*">
				<signature>UIViewController.-targetViewControllerForAction:sender:(SEL _Nonnull;id _Nullable):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>UIViewController.-title():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toolbarItems" uniqueID="-toolbarItems():NSArray&lt;__kindof UIBarButtonItem *&gt;*">
				<signature>UIViewController.-toolbarItems():NSArray&lt;__kindof UIBarButtonItem *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topLayoutGuide" uniqueID="-topLayoutGuide():objc_object&lt;UILayoutSupport&gt;*">
				<signature>UIViewController.-topLayoutGuide():objc_object&lt;UILayoutSupport&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitionCoordinator" uniqueID="-transitionCoordinator():objc_object&lt;UIViewControllerTransitionCoordinator&gt;*">
				<signature>UIViewController.-transitionCoordinator():objc_object&lt;UIViewControllerTransitionCoordinator&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitionFromViewController:toViewController:duration:options:animations:completion:" uniqueID="-transitionFromViewController:toViewController:duration:options:animations:completion:(UIViewController*;UIViewController*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>UIViewController.-transitionFromViewController:toViewController:duration:options:animations:completion:(UIViewController*;UIViewController*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitioningDelegate" uniqueID="-transitioningDelegate():objc_object&lt;UIViewControllerTransitioningDelegate&gt;*">
				<signature>UIViewController.-transitioningDelegate():objc_object&lt;UIViewControllerTransitioningDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unregisterForPreviewingWithContext:" uniqueID="-unregisterForPreviewingWithContext:(objc_object&lt;UIViewControllerPreviewing&gt;*):void">
				<signature>UIViewController.-unregisterForPreviewingWithContext:(objc_object&lt;UIViewControllerPreviewing&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unwindForSegue:towardsViewController:" uniqueID="-unwindForSegue:towardsViewController:(UIStoryboardSegue*;UIViewController*):void">
				<signature>UIViewController.-unwindForSegue:towardsViewController:(UIStoryboardSegue*;UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateViewConstraints" uniqueID="-updateViewConstraints():void">
				<signature>UIViewController.-updateViewConstraints():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-view" uniqueID="-view():UIView*">
				<signature>UIViewController.-view():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewControllerForUnwindSegueAction:fromViewController:withSender:" uniqueID="-viewControllerForUnwindSegueAction:fromViewController:withSender:(SEL _Nonnull;UIViewController*;id _Nullable):UIViewController*">
				<signature>UIViewController.-viewControllerForUnwindSegueAction:fromViewController:withSender:(SEL _Nonnull;UIViewController*;id _Nullable):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidAppear:" uniqueID="-viewDidAppear:(BOOL):void">
				<signature>UIViewController.-viewDidAppear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidDisappear:" uniqueID="-viewDidDisappear:(BOOL):void">
				<signature>UIViewController.-viewDidDisappear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLayoutSubviews" uniqueID="-viewDidLayoutSubviews():void">
				<signature>UIViewController.-viewDidLayoutSubviews():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>UIViewController.-viewDidLoad():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidUnload" uniqueID="-viewDidUnload():void">
				<signature>UIViewController.-viewDidUnload():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewIfLoaded" uniqueID="-viewIfLoaded():UIView*">
				<signature>UIViewController.-viewIfLoaded():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillAppear:" uniqueID="-viewWillAppear:(BOOL):void">
				<signature>UIViewController.-viewWillAppear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillDisappear:" uniqueID="-viewWillDisappear:(BOOL):void">
				<signature>UIViewController.-viewWillDisappear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillLayoutSubviews" uniqueID="-viewWillLayoutSubviews():void">
				<signature>UIViewController.-viewWillLayoutSubviews():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillUnload" uniqueID="-viewWillUnload():void">
				<signature>UIViewController.-viewWillUnload():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-wantsFullScreenLayout" uniqueID="-wantsFullScreenLayout():BOOL">
				<signature>UIViewController.-wantsFullScreenLayout():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:" uniqueID="-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController.-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willAnimateRotationToInterfaceOrientation:duration:" uniqueID="-willAnimateRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController.-willAnimateRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:" uniqueID="-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController.-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willMoveToParentViewController:" uniqueID="-willMoveToParentViewController:(UIViewController*):void">
				<signature>UIViewController.-willMoveToParentViewController:(UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willRotateToInterfaceOrientation:duration:" uniqueID="-willRotateToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController.-willRotateToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
		</class>
		<class name="NSDate" uniqueID="NSDate">
			<method accessibility="Public" methodKind="Member" name="-addTimeInterval:" uniqueID="-addTimeInterval:(NSTimeInterval):id _Nonnull">
				<signature>NSDate.-addTimeInterval:(NSTimeInterval):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:" uniqueID="-compare:(NSDate*):NSComparisonResult">
				<signature>NSDate.-compare:(NSDate*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateByAddingTimeInterval:" uniqueID="-dateByAddingTimeInterval:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate.-dateByAddingTimeInterval:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSDate.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSDate.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-earlierDate:" uniqueID="-earlierDate:(NSDate*):NSDate*">
				<signature>NSDate.-earlierDate:(NSDate*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSDate.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSDate.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTimeInterval:sinceDate:" uniqueID="-initWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull">
				<signature>NSDate.-initWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTimeIntervalSince1970:" uniqueID="-initWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate.-initWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTimeIntervalSinceNow:" uniqueID="-initWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate.-initWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTimeIntervalSinceReferenceDate:" uniqueID="-initWithTimeIntervalSinceReferenceDate:(NSTimeInterval):instancetype _Nonnull">
				<signature>NSDate.-initWithTimeIntervalSinceReferenceDate:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToDate:" uniqueID="-isEqualToDate:(NSDate*):BOOL">
				<signature>NSDate.-isEqualToDate:(NSDate*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-laterDate:" uniqueID="-laterDate:(NSDate*):NSDate*">
				<signature>NSDate.-laterDate:(NSDate*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSince1970" uniqueID="-timeIntervalSince1970():NSTimeInterval">
				<signature>NSDate.-timeIntervalSince1970():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSinceDate:" uniqueID="-timeIntervalSinceDate:(NSDate*):NSTimeInterval">
				<signature>NSDate.-timeIntervalSinceDate:(NSDate*):NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSinceNow" uniqueID="-timeIntervalSinceNow():NSTimeInterval">
				<signature>NSDate.-timeIntervalSinceNow():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeIntervalSinceReferenceDate" uniqueID="-timeIntervalSinceReferenceDate():NSTimeInterval">
				<signature>NSDate.-timeIntervalSinceReferenceDate():NSTimeInterval</signature>
			</method>
		</class>
		<class name="UIViewController+UIViewControllerTransitioning" uniqueID="UIViewController+UIViewControllerTransitioning">
			<method accessibility="Public" methodKind="Member" name="-setTransitioningDelegate:" uniqueID="-setTransitioningDelegate:(objc_object&lt;UIViewControllerTransitioningDelegate&gt;*):void">
				<signature>UIViewController+UIViewControllerTransitioning.-setTransitioningDelegate:(objc_object&lt;UIViewControllerTransitioningDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitioningDelegate" uniqueID="-transitioningDelegate():objc_object&lt;UIViewControllerTransitioningDelegate&gt;*">
				<signature>UIViewController+UIViewControllerTransitioning.-transitioningDelegate():objc_object&lt;UIViewControllerTransitioningDelegate&gt;*</signature>
			</method>
		</class>
		<class name="^(id):void" uniqueID="^(id):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id):void">
				<signature>^(id):void.-block(id):void</signature>
			</method>
		</class>
		<class name="NSURLProtectionSpace+NSServerTrustValidationSpace" uniqueID="NSURLProtectionSpace+NSServerTrustValidationSpace">
			<method accessibility="Public" methodKind="Member" name="-serverTrust" uniqueID="-serverTrust():struct __SecTrust*">
				<signature>NSURLProtectionSpace+NSServerTrustValidationSpace.-serverTrust():struct __SecTrust*</signature>
			</method>
		</class>
		<class name="UIViewController+UIConstraintBasedLayoutCoreMethods" uniqueID="UIViewController+UIConstraintBasedLayoutCoreMethods">
			<method accessibility="Public" methodKind="Member" name="-updateViewConstraints" uniqueID="-updateViewConstraints():void">
				<signature>UIViewController+UIConstraintBasedLayoutCoreMethods.-updateViewConstraints():void</signature>
			</method>
		</class>
		<class name="UIViewController+UIViewControllerRotation" uniqueID="UIViewController+UIViewControllerRotation">
			<method accessibility="Public" methodKind="Member" name="-didAnimateFirstHalfOfRotationToInterfaceOrientation:" uniqueID="-didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation):void">
				<signature>UIViewController+UIViewControllerRotation.-didAnimateFirstHalfOfRotationToInterfaceOrientation:(UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didRotateFromInterfaceOrientation:" uniqueID="-didRotateFromInterfaceOrientation:(UIInterfaceOrientation):void">
				<signature>UIViewController+UIViewControllerRotation.-didRotateFromInterfaceOrientation:(UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-interfaceOrientation" uniqueID="-interfaceOrientation():UIInterfaceOrientation">
				<signature>UIViewController+UIViewControllerRotation.-interfaceOrientation():UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredInterfaceOrientationForPresentation" uniqueID="-preferredInterfaceOrientationForPresentation():UIInterfaceOrientation">
				<signature>UIViewController+UIViewControllerRotation.-preferredInterfaceOrientationForPresentation():UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rotatingFooterView" uniqueID="-rotatingFooterView():UIView*">
				<signature>UIViewController+UIViewControllerRotation.-rotatingFooterView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rotatingHeaderView" uniqueID="-rotatingHeaderView():UIView*">
				<signature>UIViewController+UIViewControllerRotation.-rotatingHeaderView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutorotate" uniqueID="-shouldAutorotate():BOOL">
				<signature>UIViewController+UIViewControllerRotation.-shouldAutorotate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutorotateToInterfaceOrientation:" uniqueID="-shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation):BOOL">
				<signature>UIViewController+UIViewControllerRotation.-shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportedInterfaceOrientations" uniqueID="-supportedInterfaceOrientations():UIInterfaceOrientationMask">
				<signature>UIViewController+UIViewControllerRotation.-supportedInterfaceOrientations():UIInterfaceOrientationMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:" uniqueID="-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController+UIViewControllerRotation.-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willAnimateRotationToInterfaceOrientation:duration:" uniqueID="-willAnimateRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController+UIViewControllerRotation.-willAnimateRotationToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:" uniqueID="-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController+UIViewControllerRotation.-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willRotateToInterfaceOrientation:duration:" uniqueID="-willRotateToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void">
				<signature>UIViewController+UIViewControllerRotation.-willRotateToInterfaceOrientation:duration:(UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
		</class>
		<class name="UIViewController+UIViewControllerPreviewingRegistration" uniqueID="UIViewController+UIViewControllerPreviewingRegistration">
			<method accessibility="Public" methodKind="Member" name="-registerForPreviewingWithDelegate:sourceView:" uniqueID="-registerForPreviewingWithDelegate:sourceView:(objc_object&lt;UIViewControllerPreviewingDelegate&gt;*;UIView*):objc_object&lt;UIViewControllerPreviewing&gt;*">
				<signature>UIViewController+UIViewControllerPreviewingRegistration.-registerForPreviewingWithDelegate:sourceView:(objc_object&lt;UIViewControllerPreviewingDelegate&gt;*;UIView*):objc_object&lt;UIViewControllerPreviewing&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unregisterForPreviewingWithContext:" uniqueID="-unregisterForPreviewingWithContext:(objc_object&lt;UIViewControllerPreviewing&gt;*):void">
				<signature>UIViewController+UIViewControllerPreviewingRegistration.-unregisterForPreviewingWithContext:(objc_object&lt;UIViewControllerPreviewing&gt;*):void</signature>
			</method>
		</class>
		<class name="AVAudioSessionPortDescription" uniqueID="AVAudioSessionPortDescription">
			<method accessibility="Public" methodKind="Member" name="-UID" uniqueID="-UID():NSString*">
				<signature>AVAudioSessionPortDescription.-UID():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-channels" uniqueID="-channels():NSArray&lt;AVAudioSessionChannelDescription *&gt;*">
				<signature>AVAudioSessionPortDescription.-channels():NSArray&lt;AVAudioSessionChannelDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataSources" uniqueID="-dataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*">
				<signature>AVAudioSessionPortDescription.-dataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-portName" uniqueID="-portName():NSString*">
				<signature>AVAudioSessionPortDescription.-portName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-portType" uniqueID="-portType():NSString*">
				<signature>AVAudioSessionPortDescription.-portType():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredDataSource" uniqueID="-preferredDataSource():AVAudioSessionDataSourceDescription*">
				<signature>AVAudioSessionPortDescription.-preferredDataSource():AVAudioSessionDataSourceDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedDataSource" uniqueID="-selectedDataSource():AVAudioSessionDataSourceDescription*">
				<signature>AVAudioSessionPortDescription.-selectedDataSource():AVAudioSessionDataSourceDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredDataSource:error:" uniqueID="-setPreferredDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL">
				<signature>AVAudioSessionPortDescription.-setPreferredDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="UIViewController+UISplitViewController" uniqueID="UIViewController+UISplitViewController">
			<method accessibility="Public" methodKind="Member" name="-collapseSecondaryViewController:forSplitViewController:" uniqueID="-collapseSecondaryViewController:forSplitViewController:(UIViewController*;UISplitViewController*):void">
				<signature>UIViewController+UISplitViewController.-collapseSecondaryViewController:forSplitViewController:(UIViewController*;UISplitViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separateSecondaryViewControllerForSplitViewController:" uniqueID="-separateSecondaryViewControllerForSplitViewController:(UISplitViewController*):UIViewController*">
				<signature>UIViewController+UISplitViewController.-separateSecondaryViewControllerForSplitViewController:(UISplitViewController*):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-splitViewController" uniqueID="-splitViewController():UISplitViewController*">
				<signature>UIViewController+UISplitViewController.-splitViewController():UISplitViewController*</signature>
			</method>
		</class>
		<class name="NSMutableAttributedString+NSDeprecatedKitAdditions" uniqueID="NSMutableAttributedString+NSDeprecatedKitAdditions">
			<method accessibility="Public" methodKind="Member" name="-readFromFileURL:options:documentAttributes:error:" uniqueID="-readFromFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):BOOL">
				<signature>NSMutableAttributedString+NSDeprecatedKitAdditions.-readFromFileURL:options:documentAttributes:error:(NSURL*;NSDictionary*;NSDictionary**;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="UIViewController+UIPopoverController" uniqueID="UIViewController+UIPopoverController">
			<method accessibility="Public" methodKind="Member" name="-contentSizeForViewInPopover" uniqueID="-contentSizeForViewInPopover():CGSize">
				<signature>UIViewController+UIPopoverController.-contentSizeForViewInPopover():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isModalInPopover" uniqueID="-isModalInPopover():BOOL">
				<signature>UIViewController+UIPopoverController.-isModalInPopover():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentSizeForViewInPopover:" uniqueID="-setContentSizeForViewInPopover:(CGSize):void">
				<signature>UIViewController+UIPopoverController.-setContentSizeForViewInPopover:(CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setModalInPopover:" uniqueID="-setModalInPopover:(BOOL):void">
				<signature>UIViewController+UIPopoverController.-setModalInPopover:(BOOL):void</signature>
			</method>
		</class>
		<class name="NSURLResponse" uniqueID="NSURLResponse">
			<method accessibility="Public" methodKind="Member" name="-MIMEType" uniqueID="-MIMEType():NSString*">
				<signature>NSURLResponse.-MIMEType():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URL" uniqueID="-URL():NSURL*">
				<signature>NSURLResponse.-URL():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-expectedContentLength" uniqueID="-expectedContentLength():long long">
				<signature>NSURLResponse.-expectedContentLength():long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:MIMEType:expectedContentLength:textEncodingName:" uniqueID="-initWithURL:MIMEType:expectedContentLength:textEncodingName:(NSURL*;NSString*;NSInteger;NSString*):instancetype _Nonnull">
				<signature>NSURLResponse.-initWithURL:MIMEType:expectedContentLength:textEncodingName:(NSURL*;NSString*;NSInteger;NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-suggestedFilename" uniqueID="-suggestedFilename():NSString*">
				<signature>NSURLResponse.-suggestedFilename():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textEncodingName" uniqueID="-textEncodingName():NSString*">
				<signature>NSURLResponse.-textEncodingName():NSString*</signature>
			</method>
		</class>
		<class name="UIViewController+UINavigationControllerItem" uniqueID="UIViewController+UINavigationControllerItem">
			<method accessibility="Public" methodKind="Member" name="-hidesBottomBarWhenPushed" uniqueID="-hidesBottomBarWhenPushed():BOOL">
				<signature>UIViewController+UINavigationControllerItem.-hidesBottomBarWhenPushed():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationController" uniqueID="-navigationController():UINavigationController*">
				<signature>UIViewController+UINavigationControllerItem.-navigationController():UINavigationController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationItem" uniqueID="-navigationItem():UINavigationItem*">
				<signature>UIViewController+UINavigationControllerItem.-navigationItem():UINavigationItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidesBottomBarWhenPushed:" uniqueID="-setHidesBottomBarWhenPushed:(BOOL):void">
				<signature>UIViewController+UINavigationControllerItem.-setHidesBottomBarWhenPushed:(BOOL):void</signature>
			</method>
		</class>
		<class name="^(NSTextCheckingResult*;NSMatchingFlags;char*):void" uniqueID="^(NSTextCheckingResult*;NSMatchingFlags;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSTextCheckingResult*;NSMatchingFlags;char*):void">
				<signature>^(NSTextCheckingResult*;NSMatchingFlags;char*):void.-block(NSTextCheckingResult*;NSMatchingFlags;char*):void</signature>
			</method>
		</class>
		<class name="NSDateFormatter" uniqueID="NSDateFormatter">
			<method accessibility="Public" methodKind="Member" name="-AMSymbol" uniqueID="-AMSymbol():NSString*">
				<signature>NSDateFormatter.-AMSymbol():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-PMSymbol" uniqueID="-PMSymbol():NSString*">
				<signature>NSDateFormatter.-PMSymbol():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendar" uniqueID="-calendar():NSCalendar*">
				<signature>NSDateFormatter.-calendar():NSCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateFormat" uniqueID="-dateFormat():NSString*">
				<signature>NSDateFormatter.-dateFormat():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateFromString:" uniqueID="-dateFromString:(NSString*):NSDate*">
				<signature>NSDateFormatter.-dateFromString:(NSString*):NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dateStyle" uniqueID="-dateStyle():NSDateFormatterStyle">
				<signature>NSDateFormatter.-dateStyle():NSDateFormatterStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-defaultDate" uniqueID="-defaultDate():NSDate*">
				<signature>NSDateFormatter.-defaultDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-doesRelativeDateFormatting" uniqueID="-doesRelativeDateFormatting():BOOL">
				<signature>NSDateFormatter.-doesRelativeDateFormatting():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-eraSymbols" uniqueID="-eraSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-eraSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-formatterBehavior" uniqueID="-formatterBehavior():NSDateFormatterBehavior">
				<signature>NSDateFormatter.-formatterBehavior():NSDateFormatterBehavior</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-formattingContext" uniqueID="-formattingContext():NSFormattingContext">
				<signature>NSDateFormatter.-formattingContext():NSFormattingContext</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-generatesCalendarDates" uniqueID="-generatesCalendarDates():BOOL">
				<signature>NSDateFormatter.-generatesCalendarDates():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getObjectValue:forString:range:error:" uniqueID="-getObjectValue:forString:range:error:(id _Nullable*;NSString*;NSRange*;NSError**):BOOL">
				<signature>NSDateFormatter.-getObjectValue:forString:range:error:(id _Nullable*;NSString*;NSRange*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gregorianStartDate" uniqueID="-gregorianStartDate():NSDate*">
				<signature>NSDateFormatter.-gregorianStartDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isLenient" uniqueID="-isLenient():BOOL">
				<signature>NSDateFormatter.-isLenient():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locale" uniqueID="-locale():NSLocale*">
				<signature>NSDateFormatter.-locale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-longEraSymbols" uniqueID="-longEraSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-longEraSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-monthSymbols" uniqueID="-monthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-monthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-quarterSymbols" uniqueID="-quarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-quarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAMSymbol:" uniqueID="-setAMSymbol:(NSString*):void">
				<signature>NSDateFormatter.-setAMSymbol:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCalendar:" uniqueID="-setCalendar:(NSCalendar*):void">
				<signature>NSDateFormatter.-setCalendar:(NSCalendar*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDateFormat:" uniqueID="-setDateFormat:(NSString*):void">
				<signature>NSDateFormatter.-setDateFormat:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDateStyle:" uniqueID="-setDateStyle:(NSDateFormatterStyle):void">
				<signature>NSDateFormatter.-setDateStyle:(NSDateFormatterStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDefaultDate:" uniqueID="-setDefaultDate:(NSDate*):void">
				<signature>NSDateFormatter.-setDefaultDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDoesRelativeDateFormatting:" uniqueID="-setDoesRelativeDateFormatting:(BOOL):void">
				<signature>NSDateFormatter.-setDoesRelativeDateFormatting:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEraSymbols:" uniqueID="-setEraSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setEraSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFormatterBehavior:" uniqueID="-setFormatterBehavior:(NSDateFormatterBehavior):void">
				<signature>NSDateFormatter.-setFormatterBehavior:(NSDateFormatterBehavior):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFormattingContext:" uniqueID="-setFormattingContext:(NSFormattingContext):void">
				<signature>NSDateFormatter.-setFormattingContext:(NSFormattingContext):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGeneratesCalendarDates:" uniqueID="-setGeneratesCalendarDates:(BOOL):void">
				<signature>NSDateFormatter.-setGeneratesCalendarDates:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setGregorianStartDate:" uniqueID="-setGregorianStartDate:(NSDate*):void">
				<signature>NSDateFormatter.-setGregorianStartDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLenient:" uniqueID="-setLenient:(BOOL):void">
				<signature>NSDateFormatter.-setLenient:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLocale:" uniqueID="-setLocale:(NSLocale*):void">
				<signature>NSDateFormatter.-setLocale:(NSLocale*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLocalizedDateFormatFromTemplate:" uniqueID="-setLocalizedDateFormatFromTemplate:(NSString*):void">
				<signature>NSDateFormatter.-setLocalizedDateFormatFromTemplate:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLongEraSymbols:" uniqueID="-setLongEraSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setLongEraSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMonthSymbols:" uniqueID="-setMonthSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setMonthSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPMSymbol:" uniqueID="-setPMSymbol:(NSString*):void">
				<signature>NSDateFormatter.-setPMSymbol:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setQuarterSymbols:" uniqueID="-setQuarterSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setQuarterSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortMonthSymbols:" uniqueID="-setShortMonthSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setShortMonthSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortQuarterSymbols:" uniqueID="-setShortQuarterSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setShortQuarterSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortStandaloneMonthSymbols:" uniqueID="-setShortStandaloneMonthSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setShortStandaloneMonthSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortStandaloneQuarterSymbols:" uniqueID="-setShortStandaloneQuarterSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setShortStandaloneQuarterSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortStandaloneWeekdaySymbols:" uniqueID="-setShortStandaloneWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setShortStandaloneWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortWeekdaySymbols:" uniqueID="-setShortWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setShortWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStandaloneMonthSymbols:" uniqueID="-setStandaloneMonthSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setStandaloneMonthSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStandaloneQuarterSymbols:" uniqueID="-setStandaloneQuarterSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setStandaloneQuarterSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStandaloneWeekdaySymbols:" uniqueID="-setStandaloneWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setStandaloneWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeStyle:" uniqueID="-setTimeStyle:(NSDateFormatterStyle):void">
				<signature>NSDateFormatter.-setTimeStyle:(NSDateFormatterStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeZone:" uniqueID="-setTimeZone:(NSTimeZone*):void">
				<signature>NSDateFormatter.-setTimeZone:(NSTimeZone*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTwoDigitStartDate:" uniqueID="-setTwoDigitStartDate:(NSDate*):void">
				<signature>NSDateFormatter.-setTwoDigitStartDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVeryShortMonthSymbols:" uniqueID="-setVeryShortMonthSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setVeryShortMonthSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVeryShortStandaloneMonthSymbols:" uniqueID="-setVeryShortStandaloneMonthSymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setVeryShortStandaloneMonthSymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVeryShortStandaloneWeekdaySymbols:" uniqueID="-setVeryShortStandaloneWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setVeryShortStandaloneWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVeryShortWeekdaySymbols:" uniqueID="-setVeryShortWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setVeryShortWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWeekdaySymbols:" uniqueID="-setWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSDateFormatter.-setWeekdaySymbols:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortMonthSymbols" uniqueID="-shortMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-shortMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortQuarterSymbols" uniqueID="-shortQuarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-shortQuarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortStandaloneMonthSymbols" uniqueID="-shortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-shortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortStandaloneQuarterSymbols" uniqueID="-shortStandaloneQuarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-shortStandaloneQuarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortStandaloneWeekdaySymbols" uniqueID="-shortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-shortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortWeekdaySymbols" uniqueID="-shortWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-shortWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standaloneMonthSymbols" uniqueID="-standaloneMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-standaloneMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standaloneQuarterSymbols" uniqueID="-standaloneQuarterSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-standaloneQuarterSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-standaloneWeekdaySymbols" uniqueID="-standaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-standaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringFromDate:" uniqueID="-stringFromDate:(NSDate*):NSString*">
				<signature>NSDateFormatter.-stringFromDate:(NSDate*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeStyle" uniqueID="-timeStyle():NSDateFormatterStyle">
				<signature>NSDateFormatter.-timeStyle():NSDateFormatterStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeZone" uniqueID="-timeZone():NSTimeZone*">
				<signature>NSDateFormatter.-timeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-twoDigitStartDate" uniqueID="-twoDigitStartDate():NSDate*">
				<signature>NSDateFormatter.-twoDigitStartDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortMonthSymbols" uniqueID="-veryShortMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-veryShortMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortStandaloneMonthSymbols" uniqueID="-veryShortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-veryShortStandaloneMonthSymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortStandaloneWeekdaySymbols" uniqueID="-veryShortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-veryShortStandaloneWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-veryShortWeekdaySymbols" uniqueID="-veryShortWeekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-veryShortWeekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-weekdaySymbols" uniqueID="-weekdaySymbols():NSArray&lt;NSString *&gt;*">
				<signature>NSDateFormatter.-weekdaySymbols():NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="UIViewController+UIViewControllerEditing" uniqueID="UIViewController+UIViewControllerEditing">
			<method accessibility="Public" methodKind="Member" name="-editButtonItem" uniqueID="-editButtonItem():UIBarButtonItem*">
				<signature>UIViewController+UIViewControllerEditing.-editButtonItem():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEditing" uniqueID="-isEditing():BOOL">
				<signature>UIViewController+UIViewControllerEditing.-isEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:" uniqueID="-setEditing:(BOOL):void">
				<signature>UIViewController+UIViewControllerEditing.-setEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:animated:" uniqueID="-setEditing:animated:(BOOL;BOOL):void">
				<signature>UIViewController+UIViewControllerEditing.-setEditing:animated:(BOOL;BOOL):void</signature>
			</method>
		</class>
		<class name="UIViewController+UINavigationControllerContextualToolbarItems" uniqueID="UIViewController+UINavigationControllerContextualToolbarItems">
			<method accessibility="Public" methodKind="Member" name="-setToolbarItems:" uniqueID="-setToolbarItems:(NSArray&lt;__kindof UIBarButtonItem *&gt;*):void">
				<signature>UIViewController+UINavigationControllerContextualToolbarItems.-setToolbarItems:(NSArray&lt;__kindof UIBarButtonItem *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setToolbarItems:animated:" uniqueID="-setToolbarItems:animated:(NSArray&lt;UIBarButtonItem *&gt;*;BOOL):void">
				<signature>UIViewController+UINavigationControllerContextualToolbarItems.-setToolbarItems:animated:(NSArray&lt;UIBarButtonItem *&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toolbarItems" uniqueID="-toolbarItems():NSArray&lt;__kindof UIBarButtonItem *&gt;*">
				<signature>UIViewController+UINavigationControllerContextualToolbarItems.-toolbarItems():NSArray&lt;__kindof UIBarButtonItem *&gt;*</signature>
			</method>
		</class>
		<class name="UIView+UIViewGeometry" uniqueID="UIView+UIViewGeometry">
			<method accessibility="Public" methodKind="Member" name="-autoresizesSubviews" uniqueID="-autoresizesSubviews():BOOL">
				<signature>UIView+UIViewGeometry.-autoresizesSubviews():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-autoresizingMask" uniqueID="-autoresizingMask():UIViewAutoresizing">
				<signature>UIView+UIViewGeometry.-autoresizingMask():UIViewAutoresizing</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bounds" uniqueID="-bounds():CGRect">
				<signature>UIView+UIViewGeometry.-bounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-center" uniqueID="-center():CGPoint">
				<signature>UIView+UIViewGeometry.-center():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentScaleFactor" uniqueID="-contentScaleFactor():CGFloat">
				<signature>UIView+UIViewGeometry.-contentScaleFactor():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:fromView:" uniqueID="-convertPoint:fromView:(CGPoint;UIView*):CGPoint">
				<signature>UIView+UIViewGeometry.-convertPoint:fromView:(CGPoint;UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:toView:" uniqueID="-convertPoint:toView:(CGPoint;UIView*):CGPoint">
				<signature>UIView+UIViewGeometry.-convertPoint:toView:(CGPoint;UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:fromView:" uniqueID="-convertRect:fromView:(CGRect;UIView*):CGRect">
				<signature>UIView+UIViewGeometry.-convertRect:fromView:(CGRect;UIView*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:toView:" uniqueID="-convertRect:toView:(CGRect;UIView*):CGRect">
				<signature>UIView+UIViewGeometry.-convertRect:toView:(CGRect;UIView*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-frame" uniqueID="-frame():CGRect">
				<signature>UIView+UIViewGeometry.-frame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hitTest:withEvent:" uniqueID="-hitTest:withEvent:(CGPoint;UIEvent*):UIView*">
				<signature>UIView+UIViewGeometry.-hitTest:withEvent:(CGPoint;UIEvent*):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isExclusiveTouch" uniqueID="-isExclusiveTouch():BOOL">
				<signature>UIView+UIViewGeometry.-isExclusiveTouch():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMultipleTouchEnabled" uniqueID="-isMultipleTouchEnabled():BOOL">
				<signature>UIView+UIViewGeometry.-isMultipleTouchEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pointInside:withEvent:" uniqueID="-pointInside:withEvent:(CGPoint;UIEvent*):BOOL">
				<signature>UIView+UIViewGeometry.-pointInside:withEvent:(CGPoint;UIEvent*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutoresizesSubviews:" uniqueID="-setAutoresizesSubviews:(BOOL):void">
				<signature>UIView+UIViewGeometry.-setAutoresizesSubviews:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutoresizingMask:" uniqueID="-setAutoresizingMask:(UIViewAutoresizing):void">
				<signature>UIView+UIViewGeometry.-setAutoresizingMask:(UIViewAutoresizing):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBounds:" uniqueID="-setBounds:(CGRect):void">
				<signature>UIView+UIViewGeometry.-setBounds:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenter:" uniqueID="-setCenter:(CGPoint):void">
				<signature>UIView+UIViewGeometry.-setCenter:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentScaleFactor:" uniqueID="-setContentScaleFactor:(CGFloat):void">
				<signature>UIView+UIViewGeometry.-setContentScaleFactor:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setExclusiveTouch:" uniqueID="-setExclusiveTouch:(BOOL):void">
				<signature>UIView+UIViewGeometry.-setExclusiveTouch:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFrame:" uniqueID="-setFrame:(CGRect):void">
				<signature>UIView+UIViewGeometry.-setFrame:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMultipleTouchEnabled:" uniqueID="-setMultipleTouchEnabled:(BOOL):void">
				<signature>UIView+UIViewGeometry.-setMultipleTouchEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTransform:" uniqueID="-setTransform:(CGAffineTransform):void">
				<signature>UIView+UIViewGeometry.-setTransform:(CGAffineTransform):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeThatFits:" uniqueID="-sizeThatFits:(CGSize):CGSize">
				<signature>UIView+UIViewGeometry.-sizeThatFits:(CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeToFit" uniqueID="-sizeToFit():void">
				<signature>UIView+UIViewGeometry.-sizeToFit():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transform" uniqueID="-transform():CGAffineTransform">
				<signature>UIView+UIViewGeometry.-transform():CGAffineTransform</signature>
			</method>
		</class>
		<class name="UIViewController+UILayoutSupport" uniqueID="UIViewController+UILayoutSupport">
			<method accessibility="Public" methodKind="Member" name="-bottomLayoutGuide" uniqueID="-bottomLayoutGuide():objc_object&lt;UILayoutSupport&gt;*">
				<signature>UIViewController+UILayoutSupport.-bottomLayoutGuide():objc_object&lt;UILayoutSupport&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topLayoutGuide" uniqueID="-topLayoutGuide():objc_object&lt;UILayoutSupport&gt;*">
				<signature>UIViewController+UILayoutSupport.-topLayoutGuide():objc_object&lt;UILayoutSupport&gt;*</signature>
			</method>
		</class>
		<class name="NSDateComponents" uniqueID="NSDateComponents">
			<method accessibility="Public" methodKind="Member" name="-calendar" uniqueID="-calendar():NSCalendar*">
				<signature>NSDateComponents.-calendar():NSCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-date" uniqueID="-date():NSDate*">
				<signature>NSDateComponents.-date():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-day" uniqueID="-day():NSInteger">
				<signature>NSDateComponents.-day():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-era" uniqueID="-era():NSInteger">
				<signature>NSDateComponents.-era():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hour" uniqueID="-hour():NSInteger">
				<signature>NSDateComponents.-hour():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isLeapMonth" uniqueID="-isLeapMonth():BOOL">
				<signature>NSDateComponents.-isLeapMonth():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isValidDate" uniqueID="-isValidDate():BOOL">
				<signature>NSDateComponents.-isValidDate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isValidDateInCalendar:" uniqueID="-isValidDateInCalendar:(NSCalendar*):BOOL">
				<signature>NSDateComponents.-isValidDateInCalendar:(NSCalendar*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minute" uniqueID="-minute():NSInteger">
				<signature>NSDateComponents.-minute():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-month" uniqueID="-month():NSInteger">
				<signature>NSDateComponents.-month():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nanosecond" uniqueID="-nanosecond():NSInteger">
				<signature>NSDateComponents.-nanosecond():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-quarter" uniqueID="-quarter():NSInteger">
				<signature>NSDateComponents.-quarter():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-second" uniqueID="-second():NSInteger">
				<signature>NSDateComponents.-second():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCalendar:" uniqueID="-setCalendar:(NSCalendar*):void">
				<signature>NSDateComponents.-setCalendar:(NSCalendar*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDay:" uniqueID="-setDay:(NSInteger):void">
				<signature>NSDateComponents.-setDay:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEra:" uniqueID="-setEra:(NSInteger):void">
				<signature>NSDateComponents.-setEra:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHour:" uniqueID="-setHour:(NSInteger):void">
				<signature>NSDateComponents.-setHour:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLeapMonth:" uniqueID="-setLeapMonth:(BOOL):void">
				<signature>NSDateComponents.-setLeapMonth:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinute:" uniqueID="-setMinute:(NSInteger):void">
				<signature>NSDateComponents.-setMinute:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMonth:" uniqueID="-setMonth:(NSInteger):void">
				<signature>NSDateComponents.-setMonth:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNanosecond:" uniqueID="-setNanosecond:(NSInteger):void">
				<signature>NSDateComponents.-setNanosecond:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setQuarter:" uniqueID="-setQuarter:(NSInteger):void">
				<signature>NSDateComponents.-setQuarter:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSecond:" uniqueID="-setSecond:(NSInteger):void">
				<signature>NSDateComponents.-setSecond:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeZone:" uniqueID="-setTimeZone:(NSTimeZone*):void">
				<signature>NSDateComponents.-setTimeZone:(NSTimeZone*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forComponent:" uniqueID="-setValue:forComponent:(NSInteger;NSCalendarUnit):void">
				<signature>NSDateComponents.-setValue:forComponent:(NSInteger;NSCalendarUnit):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWeek:" uniqueID="-setWeek:(NSInteger):void">
				<signature>NSDateComponents.-setWeek:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWeekOfMonth:" uniqueID="-setWeekOfMonth:(NSInteger):void">
				<signature>NSDateComponents.-setWeekOfMonth:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWeekOfYear:" uniqueID="-setWeekOfYear:(NSInteger):void">
				<signature>NSDateComponents.-setWeekOfYear:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWeekday:" uniqueID="-setWeekday:(NSInteger):void">
				<signature>NSDateComponents.-setWeekday:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWeekdayOrdinal:" uniqueID="-setWeekdayOrdinal:(NSInteger):void">
				<signature>NSDateComponents.-setWeekdayOrdinal:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setYear:" uniqueID="-setYear:(NSInteger):void">
				<signature>NSDateComponents.-setYear:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setYearForWeekOfYear:" uniqueID="-setYearForWeekOfYear:(NSInteger):void">
				<signature>NSDateComponents.-setYearForWeekOfYear:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeZone" uniqueID="-timeZone():NSTimeZone*">
				<signature>NSDateComponents.-timeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForComponent:" uniqueID="-valueForComponent:(NSCalendarUnit):NSInteger">
				<signature>NSDateComponents.-valueForComponent:(NSCalendarUnit):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-week" uniqueID="-week():NSInteger">
				<signature>NSDateComponents.-week():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-weekOfMonth" uniqueID="-weekOfMonth():NSInteger">
				<signature>NSDateComponents.-weekOfMonth():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-weekOfYear" uniqueID="-weekOfYear():NSInteger">
				<signature>NSDateComponents.-weekOfYear():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-weekday" uniqueID="-weekday():NSInteger">
				<signature>NSDateComponents.-weekday():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-weekdayOrdinal" uniqueID="-weekdayOrdinal():NSInteger">
				<signature>NSDateComponents.-weekdayOrdinal():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-year" uniqueID="-year():NSInteger">
				<signature>NSDateComponents.-year():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-yearForWeekOfYear" uniqueID="-yearForWeekOfYear():NSInteger">
				<signature>NSDateComponents.-yearForWeekOfYear():NSInteger</signature>
			</method>
		</class>
		<class name="UITableViewCell" uniqueID="UITableViewCell">
			<method accessibility="Public" methodKind="Member" name="-accessoryAction" uniqueID="-accessoryAction():SEL _Nullable">
				<signature>UITableViewCell.-accessoryAction():SEL _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessoryType" uniqueID="-accessoryType():UITableViewCellAccessoryType">
				<signature>UITableViewCell.-accessoryType():UITableViewCellAccessoryType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessoryView" uniqueID="-accessoryView():UIView*">
				<signature>UITableViewCell.-accessoryView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundView" uniqueID="-backgroundView():UIView*">
				<signature>UITableViewCell.-backgroundView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentView" uniqueID="-contentView():UIView*">
				<signature>UITableViewCell.-contentView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-detailTextLabel" uniqueID="-detailTextLabel():UILabel*">
				<signature>UITableViewCell.-detailTextLabel():UILabel*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didTransitionToState:" uniqueID="-didTransitionToState:(UITableViewCellStateMask):void">
				<signature>UITableViewCell.-didTransitionToState:(UITableViewCellStateMask):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editAction" uniqueID="-editAction():SEL _Nullable">
				<signature>UITableViewCell.-editAction():SEL _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editingAccessoryType" uniqueID="-editingAccessoryType():UITableViewCellAccessoryType">
				<signature>UITableViewCell.-editingAccessoryType():UITableViewCellAccessoryType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editingAccessoryView" uniqueID="-editingAccessoryView():UIView*">
				<signature>UITableViewCell.-editingAccessoryView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-editingStyle" uniqueID="-editingStyle():UITableViewCellEditingStyle">
				<signature>UITableViewCell.-editingStyle():UITableViewCellEditingStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-focusStyle" uniqueID="-focusStyle():UITableViewCellFocusStyle">
				<signature>UITableViewCell.-focusStyle():UITableViewCellFocusStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-font" uniqueID="-font():UIFont*">
				<signature>UITableViewCell.-font():UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hidesAccessoryWhenEditing" uniqueID="-hidesAccessoryWhenEditing():BOOL">
				<signature>UITableViewCell.-hidesAccessoryWhenEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-image" uniqueID="-image():UIImage*">
				<signature>UITableViewCell.-image():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageView" uniqueID="-imageView():UIImageView*">
				<signature>UITableViewCell.-imageView():UIImageView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indentationLevel" uniqueID="-indentationLevel():NSInteger">
				<signature>UITableViewCell.-indentationLevel():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indentationWidth" uniqueID="-indentationWidth():CGFloat">
				<signature>UITableViewCell.-indentationWidth():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UITableViewCell.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFrame:reuseIdentifier:" uniqueID="-initWithFrame:reuseIdentifier:(CGRect;NSString*):id _Nonnull">
				<signature>UITableViewCell.-initWithFrame:reuseIdentifier:(CGRect;NSString*):id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithStyle:reuseIdentifier:" uniqueID="-initWithStyle:reuseIdentifier:(UITableViewCellStyle;NSString*):instancetype _Nonnull">
				<signature>UITableViewCell.-initWithStyle:reuseIdentifier:(UITableViewCellStyle;NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEditing" uniqueID="-isEditing():BOOL">
				<signature>UITableViewCell.-isEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHighlighted" uniqueID="-isHighlighted():BOOL">
				<signature>UITableViewCell.-isHighlighted():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSelected" uniqueID="-isSelected():BOOL">
				<signature>UITableViewCell.-isSelected():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineBreakMode" uniqueID="-lineBreakMode():NSLineBreakMode">
				<signature>UITableViewCell.-lineBreakMode():NSLineBreakMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-multipleSelectionBackgroundView" uniqueID="-multipleSelectionBackgroundView():UIView*">
				<signature>UITableViewCell.-multipleSelectionBackgroundView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareForReuse" uniqueID="-prepareForReuse():void">
				<signature>UITableViewCell.-prepareForReuse():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reuseIdentifier" uniqueID="-reuseIdentifier():NSString*">
				<signature>UITableViewCell.-reuseIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedBackgroundView" uniqueID="-selectedBackgroundView():UIView*">
				<signature>UITableViewCell.-selectedBackgroundView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedImage" uniqueID="-selectedImage():UIImage*">
				<signature>UITableViewCell.-selectedImage():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedTextColor" uniqueID="-selectedTextColor():UIColor*">
				<signature>UITableViewCell.-selectedTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectionStyle" uniqueID="-selectionStyle():UITableViewCellSelectionStyle">
				<signature>UITableViewCell.-selectionStyle():UITableViewCellSelectionStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-separatorInset" uniqueID="-separatorInset():UIEdgeInsets">
				<signature>UITableViewCell.-separatorInset():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessoryAction:" uniqueID="-setAccessoryAction:(SEL _Nullable):void">
				<signature>UITableViewCell.-setAccessoryAction:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessoryType:" uniqueID="-setAccessoryType:(UITableViewCellAccessoryType):void">
				<signature>UITableViewCell.-setAccessoryType:(UITableViewCellAccessoryType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessoryView:" uniqueID="-setAccessoryView:(UIView*):void">
				<signature>UITableViewCell.-setAccessoryView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundView:" uniqueID="-setBackgroundView:(UIView*):void">
				<signature>UITableViewCell.-setBackgroundView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditAction:" uniqueID="-setEditAction:(SEL _Nullable):void">
				<signature>UITableViewCell.-setEditAction:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:" uniqueID="-setEditing:(BOOL):void">
				<signature>UITableViewCell.-setEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditing:animated:" uniqueID="-setEditing:animated:(BOOL;BOOL):void">
				<signature>UITableViewCell.-setEditing:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditingAccessoryType:" uniqueID="-setEditingAccessoryType:(UITableViewCellAccessoryType):void">
				<signature>UITableViewCell.-setEditingAccessoryType:(UITableViewCellAccessoryType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEditingAccessoryView:" uniqueID="-setEditingAccessoryView:(UIView*):void">
				<signature>UITableViewCell.-setEditingAccessoryView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFocusStyle:" uniqueID="-setFocusStyle:(UITableViewCellFocusStyle):void">
				<signature>UITableViewCell.-setFocusStyle:(UITableViewCellFocusStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFont:" uniqueID="-setFont:(UIFont*):void">
				<signature>UITableViewCell.-setFont:(UIFont*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidesAccessoryWhenEditing:" uniqueID="-setHidesAccessoryWhenEditing:(BOOL):void">
				<signature>UITableViewCell.-setHidesAccessoryWhenEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlighted:" uniqueID="-setHighlighted:(BOOL):void">
				<signature>UITableViewCell.-setHighlighted:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHighlighted:animated:" uniqueID="-setHighlighted:animated:(BOOL;BOOL):void">
				<signature>UITableViewCell.-setHighlighted:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setImage:" uniqueID="-setImage:(UIImage*):void">
				<signature>UITableViewCell.-setImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIndentationLevel:" uniqueID="-setIndentationLevel:(NSInteger):void">
				<signature>UITableViewCell.-setIndentationLevel:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIndentationWidth:" uniqueID="-setIndentationWidth:(CGFloat):void">
				<signature>UITableViewCell.-setIndentationWidth:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLineBreakMode:" uniqueID="-setLineBreakMode:(NSLineBreakMode):void">
				<signature>UITableViewCell.-setLineBreakMode:(NSLineBreakMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMultipleSelectionBackgroundView:" uniqueID="-setMultipleSelectionBackgroundView:(UIView*):void">
				<signature>UITableViewCell.-setMultipleSelectionBackgroundView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelected:" uniqueID="-setSelected:(BOOL):void">
				<signature>UITableViewCell.-setSelected:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelected:animated:" uniqueID="-setSelected:animated:(BOOL;BOOL):void">
				<signature>UITableViewCell.-setSelected:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedBackgroundView:" uniqueID="-setSelectedBackgroundView:(UIView*):void">
				<signature>UITableViewCell.-setSelectedBackgroundView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedImage:" uniqueID="-setSelectedImage:(UIImage*):void">
				<signature>UITableViewCell.-setSelectedImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedTextColor:" uniqueID="-setSelectedTextColor:(UIColor*):void">
				<signature>UITableViewCell.-setSelectedTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectionStyle:" uniqueID="-setSelectionStyle:(UITableViewCellSelectionStyle):void">
				<signature>UITableViewCell.-setSelectionStyle:(UITableViewCellSelectionStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSeparatorInset:" uniqueID="-setSeparatorInset:(UIEdgeInsets):void">
				<signature>UITableViewCell.-setSeparatorInset:(UIEdgeInsets):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShouldIndentWhileEditing:" uniqueID="-setShouldIndentWhileEditing:(BOOL):void">
				<signature>UITableViewCell.-setShouldIndentWhileEditing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShowsReorderControl:" uniqueID="-setShowsReorderControl:(BOOL):void">
				<signature>UITableViewCell.-setShowsReorderControl:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTarget:" uniqueID="-setTarget:(id _Nullable):void">
				<signature>UITableViewCell.-setTarget:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setText:" uniqueID="-setText:(NSString*):void">
				<signature>UITableViewCell.-setText:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextAlignment:" uniqueID="-setTextAlignment:(NSTextAlignment):void">
				<signature>UITableViewCell.-setTextAlignment:(NSTextAlignment):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextColor:" uniqueID="-setTextColor:(UIColor*):void">
				<signature>UITableViewCell.-setTextColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldIndentWhileEditing" uniqueID="-shouldIndentWhileEditing():BOOL">
				<signature>UITableViewCell.-shouldIndentWhileEditing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showingDeleteConfirmation" uniqueID="-showingDeleteConfirmation():BOOL">
				<signature>UITableViewCell.-showingDeleteConfirmation():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-showsReorderControl" uniqueID="-showsReorderControl():BOOL">
				<signature>UITableViewCell.-showsReorderControl():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-target" uniqueID="-target():id _Nullable">
				<signature>UITableViewCell.-target():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():NSString*">
				<signature>UITableViewCell.-text():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textAlignment" uniqueID="-textAlignment():NSTextAlignment">
				<signature>UITableViewCell.-textAlignment():NSTextAlignment</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textColor" uniqueID="-textColor():UIColor*">
				<signature>UITableViewCell.-textColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textLabel" uniqueID="-textLabel():UILabel*">
				<signature>UITableViewCell.-textLabel():UILabel*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willTransitionToState:" uniqueID="-willTransitionToState:(UITableViewCellStateMask):void">
				<signature>UITableViewCell.-willTransitionToState:(UITableViewCellStateMask):void</signature>
			</method>
		</class>
		<class name="UIViewController+UIContainerViewControllerCallbacks" uniqueID="UIViewController+UIContainerViewControllerCallbacks">
			<method accessibility="Public" methodKind="Member" name="-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers" uniqueID="-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers():BOOL">
				<signature>UIViewController+UIContainerViewControllerCallbacks.-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didMoveToParentViewController:" uniqueID="-didMoveToParentViewController:(UIViewController*):void">
				<signature>UIViewController+UIContainerViewControllerCallbacks.-didMoveToParentViewController:(UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutomaticallyForwardAppearanceMethods" uniqueID="-shouldAutomaticallyForwardAppearanceMethods():BOOL">
				<signature>UIViewController+UIContainerViewControllerCallbacks.-shouldAutomaticallyForwardAppearanceMethods():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldAutomaticallyForwardRotationMethods" uniqueID="-shouldAutomaticallyForwardRotationMethods():BOOL">
				<signature>UIViewController+UIContainerViewControllerCallbacks.-shouldAutomaticallyForwardRotationMethods():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willMoveToParentViewController:" uniqueID="-willMoveToParentViewController:(UIViewController*):void">
				<signature>UIViewController+UIContainerViewControllerCallbacks.-willMoveToParentViewController:(UIViewController*):void</signature>
			</method>
		</class>
		<class name="NSEnumerator+NSExtendedEnumerator" uniqueID="NSEnumerator+NSExtendedEnumerator">
			<method accessibility="Public" methodKind="Member" name="-allObjects" uniqueID="-allObjects():NSArray&lt;ObjectType&gt;*">
				<signature>NSEnumerator+NSExtendedEnumerator.-allObjects():NSArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="^(NSError*):void" uniqueID="^(NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSError*):void">
				<signature>^(NSError*):void.-block(NSError*):void</signature>
			</method>
		</class>
		<class name="NSDictionary+NSFileAttributes" uniqueID="NSDictionary+NSFileAttributes">
			<method accessibility="Public" methodKind="Member" name="-fileCreationDate" uniqueID="-fileCreationDate():NSDate*">
				<signature>NSDictionary+NSFileAttributes.-fileCreationDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileExtensionHidden" uniqueID="-fileExtensionHidden():BOOL">
				<signature>NSDictionary+NSFileAttributes.-fileExtensionHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileGroupOwnerAccountID" uniqueID="-fileGroupOwnerAccountID():NSNumber*">
				<signature>NSDictionary+NSFileAttributes.-fileGroupOwnerAccountID():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileGroupOwnerAccountName" uniqueID="-fileGroupOwnerAccountName():NSString*">
				<signature>NSDictionary+NSFileAttributes.-fileGroupOwnerAccountName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileHFSCreatorCode" uniqueID="-fileHFSCreatorCode():OSType">
				<signature>NSDictionary+NSFileAttributes.-fileHFSCreatorCode():OSType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileHFSTypeCode" uniqueID="-fileHFSTypeCode():OSType">
				<signature>NSDictionary+NSFileAttributes.-fileHFSTypeCode():OSType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileIsAppendOnly" uniqueID="-fileIsAppendOnly():BOOL">
				<signature>NSDictionary+NSFileAttributes.-fileIsAppendOnly():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileIsImmutable" uniqueID="-fileIsImmutable():BOOL">
				<signature>NSDictionary+NSFileAttributes.-fileIsImmutable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileModificationDate" uniqueID="-fileModificationDate():NSDate*">
				<signature>NSDictionary+NSFileAttributes.-fileModificationDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileOwnerAccountID" uniqueID="-fileOwnerAccountID():NSNumber*">
				<signature>NSDictionary+NSFileAttributes.-fileOwnerAccountID():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileOwnerAccountName" uniqueID="-fileOwnerAccountName():NSString*">
				<signature>NSDictionary+NSFileAttributes.-fileOwnerAccountName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-filePosixPermissions" uniqueID="-filePosixPermissions():NSUInteger">
				<signature>NSDictionary+NSFileAttributes.-filePosixPermissions():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSize" uniqueID="-fileSize():unsigned long long">
				<signature>NSDictionary+NSFileAttributes.-fileSize():unsigned long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemFileNumber" uniqueID="-fileSystemFileNumber():NSUInteger">
				<signature>NSDictionary+NSFileAttributes.-fileSystemFileNumber():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemNumber" uniqueID="-fileSystemNumber():NSInteger">
				<signature>NSDictionary+NSFileAttributes.-fileSystemNumber():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileType" uniqueID="-fileType():NSString*">
				<signature>NSDictionary+NSFileAttributes.-fileType():NSString*</signature>
			</method>
		</class>
		<class name="MKMapCamera" uniqueID="MKMapCamera">
			<method accessibility="Public" methodKind="Member" name="-altitude" uniqueID="-altitude():CLLocationDistance">
				<signature>MKMapCamera.-altitude():CLLocationDistance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerCoordinate" uniqueID="-centerCoordinate():CLLocationCoordinate2D">
				<signature>MKMapCamera.-centerCoordinate():CLLocationCoordinate2D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heading" uniqueID="-heading():CLLocationDirection">
				<signature>MKMapCamera.-heading():CLLocationDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pitch" uniqueID="-pitch():CGFloat">
				<signature>MKMapCamera.-pitch():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAltitude:" uniqueID="-setAltitude:(CLLocationDistance):void">
				<signature>MKMapCamera.-setAltitude:(CLLocationDistance):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenterCoordinate:" uniqueID="-setCenterCoordinate:(CLLocationCoordinate2D):void">
				<signature>MKMapCamera.-setCenterCoordinate:(CLLocationCoordinate2D):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHeading:" uniqueID="-setHeading:(CLLocationDirection):void">
				<signature>MKMapCamera.-setHeading:(CLLocationDirection):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPitch:" uniqueID="-setPitch:(CGFloat):void">
				<signature>MKMapCamera.-setPitch:(CGFloat):void</signature>
			</method>
		</class>
		<class name="EKCalendar" uniqueID="EKCalendar">
			<method accessibility="Public" methodKind="Member" name="-CGColor" uniqueID="-CGColor():struct CGColor*">
				<signature>EKCalendar.-CGColor():struct CGColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowedEntityTypes" uniqueID="-allowedEntityTypes():EKEntityMask">
				<signature>EKCalendar.-allowedEntityTypes():EKEntityMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsContentModifications" uniqueID="-allowsContentModifications():BOOL">
				<signature>EKCalendar.-allowsContentModifications():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-calendarIdentifier" uniqueID="-calendarIdentifier():NSString*">
				<signature>EKCalendar.-calendarIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isImmutable" uniqueID="-isImmutable():BOOL">
				<signature>EKCalendar.-isImmutable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSubscribed" uniqueID="-isSubscribed():BOOL">
				<signature>EKCalendar.-isSubscribed():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCGColor:" uniqueID="-setCGColor:(struct CGColor*):void">
				<signature>EKCalendar.-setCGColor:(struct CGColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSource:" uniqueID="-setSource:(EKSource*):void">
				<signature>EKCalendar.-setSource:(EKSource*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitle:" uniqueID="-setTitle:(NSString*):void">
				<signature>EKCalendar.-setTitle:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-source" uniqueID="-source():EKSource*">
				<signature>EKCalendar.-source():EKSource*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportedEventAvailabilities" uniqueID="-supportedEventAvailabilities():EKCalendarEventAvailabilityMask">
				<signature>EKCalendar.-supportedEventAvailabilities():EKCalendarEventAvailabilityMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>EKCalendar.-title():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-type" uniqueID="-type():EKCalendarType">
				<signature>EKCalendar.-type():EKCalendarType</signature>
			</method>
		</class>
		<class name="UIViewController+NSExtensionAdditions" uniqueID="UIViewController+NSExtensionAdditions">
			<method accessibility="Public" methodKind="Member" name="-extensionContext" uniqueID="-extensionContext():NSExtensionContext*">
				<signature>UIViewController+NSExtensionAdditions.-extensionContext():NSExtensionContext*</signature>
			</method>
		</class>
		<class name="NSURLCredential+NSClientCertificate" uniqueID="NSURLCredential+NSClientCertificate">
			<method accessibility="Public" methodKind="Member" name="-certificates" uniqueID="-certificates():NSArray*">
				<signature>NSURLCredential+NSClientCertificate.-certificates():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-identity" uniqueID="-identity():struct __SecIdentity*">
				<signature>NSURLCredential+NSClientCertificate.-identity():struct __SecIdentity*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithIdentity:certificates:persistence:" uniqueID="-initWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):instancetype _Nonnull">
				<signature>NSURLCredential+NSClientCertificate.-initWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSBundle+UINibLoadingAdditions" uniqueID="NSBundle+UINibLoadingAdditions">
			<method accessibility="Public" methodKind="Member" name="-loadNibNamed:owner:options:" uniqueID="-loadNibNamed:owner:options:(NSString*;id;NSDictionary*):NSArray*">
				<signature>NSBundle+UINibLoadingAdditions.-loadNibNamed:owner:options:(NSString*;id;NSDictionary*):NSArray*</signature>
			</method>
		</class>
		<class name="AcmeUIApplication" uniqueID="AcmeUIApplication">
			<method accessibility="Public" methodKind="Member" name="-sendEvent:" uniqueID="-sendEvent:(UIEvent*):void">
				<signature>AcmeUIApplication.-sendEvent:(UIEvent*):void</signature>
			</method>
		</class>
		<class name="UIViewController+Extension__Applications_Xcode_app_Contents_Developer_Platforms_iPhoneOS_platform_Developer_SDKs_iPhoneOS9_3_sdk_System_Library_Frameworks_UIKit_framework_Headers_UIViewController_h_509_1" uniqueID="UIViewController+Extension__Applications_Xcode_app_Contents_Developer_Platforms_iPhoneOS_platform_Developer_SDKs_iPhoneOS9_3_sdk_System_Library_Frameworks_UIKit_framework_Headers_UIViewController_h_509_1">
			<method accessibility="Public" methodKind="Member" name="-previewActionItems" uniqueID="-previewActionItems():NSArray&lt;id&lt;UIPreviewActionItem&gt;&gt;*">
				<signature>UIViewController+Extension__Applications_Xcode_app_Contents_Developer_Platforms_iPhoneOS_platform_Developer_SDKs_iPhoneOS9_3_sdk_System_Library_Frameworks_UIKit_framework_Headers_UIViewController_h_509_1.-previewActionItems():NSArray&lt;id&lt;UIPreviewActionItem&gt;&gt;*</signature>
			</method>
		</class>
		<class name="UIApplication" uniqueID="UIApplication">
			<method accessibility="Public" methodKind="Member" name="-applicationIconBadgeNumber" uniqueID="-applicationIconBadgeNumber():NSInteger">
				<signature>UIApplication.-applicationIconBadgeNumber():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationState" uniqueID="-applicationState():UIApplicationState">
				<signature>UIApplication.-applicationState():UIApplicationState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationSupportsShakeToEdit" uniqueID="-applicationSupportsShakeToEdit():BOOL">
				<signature>UIApplication.-applicationSupportsShakeToEdit():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundRefreshStatus" uniqueID="-backgroundRefreshStatus():UIBackgroundRefreshStatus">
				<signature>UIApplication.-backgroundRefreshStatus():UIBackgroundRefreshStatus</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundTimeRemaining" uniqueID="-backgroundTimeRemaining():NSTimeInterval">
				<signature>UIApplication.-backgroundTimeRemaining():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginBackgroundTaskWithExpirationHandler:" uniqueID="-beginBackgroundTaskWithExpirationHandler:((^)():void):UIBackgroundTaskIdentifier">
				<signature>UIApplication.-beginBackgroundTaskWithExpirationHandler:((^)():void):UIBackgroundTaskIdentifier</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginBackgroundTaskWithName:expirationHandler:" uniqueID="-beginBackgroundTaskWithName:expirationHandler:(NSString*;(^)():void):UIBackgroundTaskIdentifier">
				<signature>UIApplication.-beginBackgroundTaskWithName:expirationHandler:(NSString*;(^)():void):UIBackgroundTaskIdentifier</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginIgnoringInteractionEvents" uniqueID="-beginIgnoringInteractionEvents():void">
				<signature>UIApplication.-beginIgnoringInteractionEvents():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginReceivingRemoteControlEvents" uniqueID="-beginReceivingRemoteControlEvents():void">
				<signature>UIApplication.-beginReceivingRemoteControlEvents():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canOpenURL:" uniqueID="-canOpenURL:(NSURL*):BOOL">
				<signature>UIApplication.-canOpenURL:(NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelAllLocalNotifications" uniqueID="-cancelAllLocalNotifications():void">
				<signature>UIApplication.-cancelAllLocalNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelLocalNotification:" uniqueID="-cancelLocalNotification:(UILocalNotification*):void">
				<signature>UIApplication.-cancelLocalNotification:(UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearKeepAliveTimeout" uniqueID="-clearKeepAliveTimeout():void">
				<signature>UIApplication.-clearKeepAliveTimeout():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-completeStateRestoration" uniqueID="-completeStateRestoration():void">
				<signature>UIApplication.-completeStateRestoration():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentUserNotificationSettings" uniqueID="-currentUserNotificationSettings():UIUserNotificationSettings*">
				<signature>UIApplication.-currentUserNotificationSettings():UIUserNotificationSettings*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UIApplicationDelegate&gt;*">
				<signature>UIApplication.-delegate():objc_object&lt;UIApplicationDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enabledRemoteNotificationTypes" uniqueID="-enabledRemoteNotificationTypes():UIRemoteNotificationType">
				<signature>UIApplication.-enabledRemoteNotificationTypes():UIRemoteNotificationType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endBackgroundTask:" uniqueID="-endBackgroundTask:(UIBackgroundTaskIdentifier):void">
				<signature>UIApplication.-endBackgroundTask:(UIBackgroundTaskIdentifier):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endIgnoringInteractionEvents" uniqueID="-endIgnoringInteractionEvents():void">
				<signature>UIApplication.-endIgnoringInteractionEvents():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endReceivingRemoteControlEvents" uniqueID="-endReceivingRemoteControlEvents():void">
				<signature>UIApplication.-endReceivingRemoteControlEvents():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extendStateRestoration" uniqueID="-extendStateRestoration():void">
				<signature>UIApplication.-extendStateRestoration():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ignoreSnapshotOnNextApplicationLaunch" uniqueID="-ignoreSnapshotOnNextApplicationLaunch():void">
				<signature>UIApplication.-ignoreSnapshotOnNextApplicationLaunch():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isIdleTimerDisabled" uniqueID="-isIdleTimerDisabled():BOOL">
				<signature>UIApplication.-isIdleTimerDisabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isIgnoringInteractionEvents" uniqueID="-isIgnoringInteractionEvents():BOOL">
				<signature>UIApplication.-isIgnoringInteractionEvents():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isNetworkActivityIndicatorVisible" uniqueID="-isNetworkActivityIndicatorVisible():BOOL">
				<signature>UIApplication.-isNetworkActivityIndicatorVisible():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isProtectedDataAvailable" uniqueID="-isProtectedDataAvailable():BOOL">
				<signature>UIApplication.-isProtectedDataAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isProximitySensingEnabled" uniqueID="-isProximitySensingEnabled():BOOL">
				<signature>UIApplication.-isProximitySensingEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isRegisteredForRemoteNotifications" uniqueID="-isRegisteredForRemoteNotifications():BOOL">
				<signature>UIApplication.-isRegisteredForRemoteNotifications():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isStatusBarHidden" uniqueID="-isStatusBarHidden():BOOL">
				<signature>UIApplication.-isStatusBarHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyWindow" uniqueID="-keyWindow():UIWindow*">
				<signature>UIApplication.-keyWindow():UIWindow*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-openURL:" uniqueID="-openURL:(NSURL*):BOOL">
				<signature>UIApplication.-openURL:(NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredContentSizeCategory" uniqueID="-preferredContentSizeCategory():NSString*">
				<signature>UIApplication.-preferredContentSizeCategory():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentLocalNotificationNow:" uniqueID="-presentLocalNotificationNow:(UILocalNotification*):void">
				<signature>UIApplication.-presentLocalNotificationNow:(UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerForRemoteNotificationTypes:" uniqueID="-registerForRemoteNotificationTypes:(UIRemoteNotificationType):void">
				<signature>UIApplication.-registerForRemoteNotificationTypes:(UIRemoteNotificationType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerForRemoteNotifications" uniqueID="-registerForRemoteNotifications():void">
				<signature>UIApplication.-registerForRemoteNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerUserNotificationSettings:" uniqueID="-registerUserNotificationSettings:(UIUserNotificationSettings*):void">
				<signature>UIApplication.-registerUserNotificationSettings:(UIUserNotificationSettings*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scheduleLocalNotification:" uniqueID="-scheduleLocalNotification:(UILocalNotification*):void">
				<signature>UIApplication.-scheduleLocalNotification:(UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scheduledLocalNotifications" uniqueID="-scheduledLocalNotifications():NSArray&lt;UILocalNotification *&gt;*">
				<signature>UIApplication.-scheduledLocalNotifications():NSArray&lt;UILocalNotification *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendAction:to:from:forEvent:" uniqueID="-sendAction:to:from:forEvent:(SEL _Nonnull;id _Nullable;id _Nullable;UIEvent*):BOOL">
				<signature>UIApplication.-sendAction:to:from:forEvent:(SEL _Nonnull;id _Nullable;id _Nullable;UIEvent*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sendEvent:" uniqueID="-sendEvent:(UIEvent*):void">
				<signature>UIApplication.-sendEvent:(UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setApplicationIconBadgeNumber:" uniqueID="-setApplicationIconBadgeNumber:(NSInteger):void">
				<signature>UIApplication.-setApplicationIconBadgeNumber:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setApplicationSupportsShakeToEdit:" uniqueID="-setApplicationSupportsShakeToEdit:(BOOL):void">
				<signature>UIApplication.-setApplicationSupportsShakeToEdit:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;UIApplicationDelegate&gt;*):void">
				<signature>UIApplication.-setDelegate:(objc_object&lt;UIApplicationDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIdleTimerDisabled:" uniqueID="-setIdleTimerDisabled:(BOOL):void">
				<signature>UIApplication.-setIdleTimerDisabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setKeepAliveTimeout:handler:" uniqueID="-setKeepAliveTimeout:handler:(NSTimeInterval;(^)():void):BOOL">
				<signature>UIApplication.-setKeepAliveTimeout:handler:(NSTimeInterval;(^)():void):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumBackgroundFetchInterval:" uniqueID="-setMinimumBackgroundFetchInterval:(NSTimeInterval):void">
				<signature>UIApplication.-setMinimumBackgroundFetchInterval:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNetworkActivityIndicatorVisible:" uniqueID="-setNetworkActivityIndicatorVisible:(BOOL):void">
				<signature>UIApplication.-setNetworkActivityIndicatorVisible:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNewsstandIconImage:" uniqueID="-setNewsstandIconImage:(UIImage*):void">
				<signature>UIApplication.-setNewsstandIconImage:(UIImage*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setProximitySensingEnabled:" uniqueID="-setProximitySensingEnabled:(BOOL):void">
				<signature>UIApplication.-setProximitySensingEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScheduledLocalNotifications:" uniqueID="-setScheduledLocalNotifications:(NSArray&lt;UILocalNotification *&gt;*):void">
				<signature>UIApplication.-setScheduledLocalNotifications:(NSArray&lt;UILocalNotification *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShortcutItems:" uniqueID="-setShortcutItems:(NSArray&lt;UIApplicationShortcutItem *&gt;*):void">
				<signature>UIApplication.-setShortcutItems:(NSArray&lt;UIApplicationShortcutItem *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarHidden:" uniqueID="-setStatusBarHidden:(BOOL):void">
				<signature>UIApplication.-setStatusBarHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarHidden:animated:" uniqueID="-setStatusBarHidden:animated:(BOOL;BOOL):void">
				<signature>UIApplication.-setStatusBarHidden:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarHidden:withAnimation:" uniqueID="-setStatusBarHidden:withAnimation:(BOOL;UIStatusBarAnimation):void">
				<signature>UIApplication.-setStatusBarHidden:withAnimation:(BOOL;UIStatusBarAnimation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarOrientation:" uniqueID="-setStatusBarOrientation:(UIInterfaceOrientation):void">
				<signature>UIApplication.-setStatusBarOrientation:(UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarOrientation:animated:" uniqueID="-setStatusBarOrientation:animated:(UIInterfaceOrientation;BOOL):void">
				<signature>UIApplication.-setStatusBarOrientation:animated:(UIInterfaceOrientation;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarStyle:" uniqueID="-setStatusBarStyle:(UIStatusBarStyle):void">
				<signature>UIApplication.-setStatusBarStyle:(UIStatusBarStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStatusBarStyle:animated:" uniqueID="-setStatusBarStyle:animated:(UIStatusBarStyle;BOOL):void">
				<signature>UIApplication.-setStatusBarStyle:animated:(UIStatusBarStyle;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortcutItems" uniqueID="-shortcutItems():NSArray&lt;UIApplicationShortcutItem *&gt;*">
				<signature>UIApplication.-shortcutItems():NSArray&lt;UIApplicationShortcutItem *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusBarFrame" uniqueID="-statusBarFrame():CGRect">
				<signature>UIApplication.-statusBarFrame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusBarOrientation" uniqueID="-statusBarOrientation():UIInterfaceOrientation">
				<signature>UIApplication.-statusBarOrientation():UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusBarOrientationAnimationDuration" uniqueID="-statusBarOrientationAnimationDuration():NSTimeInterval">
				<signature>UIApplication.-statusBarOrientationAnimationDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-statusBarStyle" uniqueID="-statusBarStyle():UIStatusBarStyle">
				<signature>UIApplication.-statusBarStyle():UIStatusBarStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportedInterfaceOrientationsForWindow:" uniqueID="-supportedInterfaceOrientationsForWindow:(UIWindow*):UIInterfaceOrientationMask">
				<signature>UIApplication.-supportedInterfaceOrientationsForWindow:(UIWindow*):UIInterfaceOrientationMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unregisterForRemoteNotifications" uniqueID="-unregisterForRemoteNotifications():void">
				<signature>UIApplication.-unregisterForRemoteNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInterfaceLayoutDirection" uniqueID="-userInterfaceLayoutDirection():UIUserInterfaceLayoutDirection">
				<signature>UIApplication.-userInterfaceLayoutDirection():UIUserInterfaceLayoutDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-windows" uniqueID="-windows():NSArray&lt;__kindof UIWindow *&gt;*">
				<signature>UIApplication.-windows():NSArray&lt;__kindof UIWindow *&gt;*</signature>
			</method>
		</class>
		<class name="Closure_@___x_AcmeAirlines_RadioTableViewController_m_28_47" uniqueID="Closure_@___x_AcmeAirlines_RadioTableViewController_m_28_47">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block():void">
				<signature>Closure_@___x_AcmeAirlines_RadioTableViewController_m_28_47.-block():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():void">
				<signature>Closure_@___x_AcmeAirlines_RadioTableViewController_m_28_47.-init():void</signature>
			</method>
		</class>
		<class name="UILayoutGuide" uniqueID="UILayoutGuide">
			<method accessibility="Public" methodKind="Member" name="-bottomAnchor" uniqueID="-bottomAnchor():NSLayoutYAxisAnchor*">
				<signature>UILayoutGuide.-bottomAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerXAnchor" uniqueID="-centerXAnchor():NSLayoutXAxisAnchor*">
				<signature>UILayoutGuide.-centerXAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-centerYAnchor" uniqueID="-centerYAnchor():NSLayoutYAxisAnchor*">
				<signature>UILayoutGuide.-centerYAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heightAnchor" uniqueID="-heightAnchor():NSLayoutDimension*">
				<signature>UILayoutGuide.-heightAnchor():NSLayoutDimension*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-identifier" uniqueID="-identifier():NSString*">
				<signature>UILayoutGuide.-identifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutFrame" uniqueID="-layoutFrame():CGRect">
				<signature>UILayoutGuide.-layoutFrame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leadingAnchor" uniqueID="-leadingAnchor():NSLayoutXAxisAnchor*">
				<signature>UILayoutGuide.-leadingAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftAnchor" uniqueID="-leftAnchor():NSLayoutXAxisAnchor*">
				<signature>UILayoutGuide.-leftAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-owningView" uniqueID="-owningView():UIView*">
				<signature>UILayoutGuide.-owningView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rightAnchor" uniqueID="-rightAnchor():NSLayoutXAxisAnchor*">
				<signature>UILayoutGuide.-rightAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIdentifier:" uniqueID="-setIdentifier:(NSString*):void">
				<signature>UILayoutGuide.-setIdentifier:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOwningView:" uniqueID="-setOwningView:(UIView*):void">
				<signature>UILayoutGuide.-setOwningView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topAnchor" uniqueID="-topAnchor():NSLayoutYAxisAnchor*">
				<signature>UILayoutGuide.-topAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-trailingAnchor" uniqueID="-trailingAnchor():NSLayoutXAxisAnchor*">
				<signature>UILayoutGuide.-trailingAnchor():NSLayoutXAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-widthAnchor" uniqueID="-widthAnchor():NSLayoutDimension*">
				<signature>UILayoutGuide.-widthAnchor():NSLayoutDimension*</signature>
			</method>
		</class>
		<class name="CIColor" uniqueID="CIColor">
			<method accessibility="Public" methodKind="Member" name="-alpha" uniqueID="-alpha():CGFloat">
				<signature>CIColor.-alpha():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-blue" uniqueID="-blue():CGFloat">
				<signature>CIColor.-blue():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-colorSpace" uniqueID="-colorSpace():struct CGColorSpace*">
				<signature>CIColor.-colorSpace():struct CGColorSpace*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-components" uniqueID="-components():const CGFloat*">
				<signature>CIColor.-components():const CGFloat*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-green" uniqueID="-green():CGFloat">
				<signature>CIColor.-green():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGColor:" uniqueID="-initWithCGColor:(struct CGColor*):instancetype _Nonnull">
				<signature>CIColor.-initWithCGColor:(struct CGColor*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithColor:" uniqueID="-initWithColor:(UIColor*):instancetype _Nonnull">
				<signature>CIColor.-initWithColor:(UIColor*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithRed:green:blue:" uniqueID="-initWithRed:green:blue:(CGFloat;CGFloat;CGFloat):instancetype _Nonnull">
				<signature>CIColor.-initWithRed:green:blue:(CGFloat;CGFloat;CGFloat):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithRed:green:blue:alpha:" uniqueID="-initWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):instancetype _Nonnull">
				<signature>CIColor.-initWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfComponents" uniqueID="-numberOfComponents():size_t">
				<signature>CIColor.-numberOfComponents():size_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-red" uniqueID="-red():CGFloat">
				<signature>CIColor.-red():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringRepresentation" uniqueID="-stringRepresentation():NSString*">
				<signature>CIColor.-stringRepresentation():NSString*</signature>
			</method>
		</class>
		<class name="CLLocation" uniqueID="CLLocation">
			<method accessibility="Public" methodKind="Member" name="-altitude" uniqueID="-altitude():CLLocationDistance">
				<signature>CLLocation.-altitude():CLLocationDistance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-coordinate" uniqueID="-coordinate():CLLocationCoordinate2D">
				<signature>CLLocation.-coordinate():CLLocationCoordinate2D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-course" uniqueID="-course():CLLocationDirection">
				<signature>CLLocation.-course():CLLocationDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>CLLocation.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-distanceFromLocation:" uniqueID="-distanceFromLocation:(const CLLocation*):CLLocationDistance">
				<signature>CLLocation.-distanceFromLocation:(const CLLocation*):CLLocationDistance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-floor" uniqueID="-floor():CLFloor*">
				<signature>CLLocation.-floor():CLFloor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getDistanceFrom:" uniqueID="-getDistanceFrom:(const CLLocation*):CLLocationDistance">
				<signature>CLLocation.-getDistanceFrom:(const CLLocation*):CLLocationDistance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-horizontalAccuracy" uniqueID="-horizontalAccuracy():CLLocationAccuracy">
				<signature>CLLocation.-horizontalAccuracy():CLLocationAccuracy</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:" uniqueID="-initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:(CLLocationCoordinate2D;CLLocationDistance;CLLocationAccuracy;CLLocationAccuracy;CLLocationDirection;CLLocationSpeed;NSDate*):instancetype _Nonnull">
				<signature>CLLocation.-initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:(CLLocationCoordinate2D;CLLocationDistance;CLLocationAccuracy;CLLocationAccuracy;CLLocationDirection;CLLocationSpeed;NSDate*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:" uniqueID="-initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:(CLLocationCoordinate2D;CLLocationDistance;CLLocationAccuracy;CLLocationAccuracy;NSDate*):instancetype _Nonnull">
				<signature>CLLocation.-initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:(CLLocationCoordinate2D;CLLocationDistance;CLLocationAccuracy;CLLocationAccuracy;NSDate*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLatitude:longitude:" uniqueID="-initWithLatitude:longitude:(CLLocationDegrees;CLLocationDegrees):instancetype _Nonnull">
				<signature>CLLocation.-initWithLatitude:longitude:(CLLocationDegrees;CLLocationDegrees):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-speed" uniqueID="-speed():CLLocationSpeed">
				<signature>CLLocation.-speed():CLLocationSpeed</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timestamp" uniqueID="-timestamp():NSDate*">
				<signature>CLLocation.-timestamp():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-verticalAccuracy" uniqueID="-verticalAccuracy():CLLocationAccuracy">
				<signature>CLLocation.-verticalAccuracy():CLLocationAccuracy</signature>
			</method>
		</class>
		<class name="UIResponder" uniqueID="UIResponder">
			<method accessibility="Public" methodKind="Member" name="-becomeFirstResponder" uniqueID="-becomeFirstResponder():BOOL">
				<signature>UIResponder.-becomeFirstResponder():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canBecomeFirstResponder" uniqueID="-canBecomeFirstResponder():BOOL">
				<signature>UIResponder.-canBecomeFirstResponder():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canPerformAction:withSender:" uniqueID="-canPerformAction:withSender:(SEL _Nonnull;id _Nullable):BOOL">
				<signature>UIResponder.-canPerformAction:withSender:(SEL _Nonnull;id _Nullable):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canResignFirstResponder" uniqueID="-canResignFirstResponder():BOOL">
				<signature>UIResponder.-canResignFirstResponder():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAccessoryView" uniqueID="-inputAccessoryView():__kindof UIView*">
				<signature>UIResponder.-inputAccessoryView():__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAccessoryViewController" uniqueID="-inputAccessoryViewController():UIInputViewController*">
				<signature>UIResponder.-inputAccessoryViewController():UIInputViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAssistantItem" uniqueID="-inputAssistantItem():UITextInputAssistantItem*">
				<signature>UIResponder.-inputAssistantItem():UITextInputAssistantItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputView" uniqueID="-inputView():__kindof UIView*">
				<signature>UIResponder.-inputView():__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputViewController" uniqueID="-inputViewController():UIInputViewController*">
				<signature>UIResponder.-inputViewController():UIInputViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isFirstResponder" uniqueID="-isFirstResponder():BOOL">
				<signature>UIResponder.-isFirstResponder():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyCommands" uniqueID="-keyCommands():NSArray&lt;UIKeyCommand *&gt;*">
				<signature>UIResponder.-keyCommands():NSArray&lt;UIKeyCommand *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-motionBegan:withEvent:" uniqueID="-motionBegan:withEvent:(UIEventSubtype;UIEvent*):void">
				<signature>UIResponder.-motionBegan:withEvent:(UIEventSubtype;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-motionCancelled:withEvent:" uniqueID="-motionCancelled:withEvent:(UIEventSubtype;UIEvent*):void">
				<signature>UIResponder.-motionCancelled:withEvent:(UIEventSubtype;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-motionEnded:withEvent:" uniqueID="-motionEnded:withEvent:(UIEventSubtype;UIEvent*):void">
				<signature>UIResponder.-motionEnded:withEvent:(UIEventSubtype;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nextResponder" uniqueID="-nextResponder():UIResponder*">
				<signature>UIResponder.-nextResponder():UIResponder*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesBegan:withEvent:" uniqueID="-pressesBegan:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIResponder.-pressesBegan:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesCancelled:withEvent:" uniqueID="-pressesCancelled:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIResponder.-pressesCancelled:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesChanged:withEvent:" uniqueID="-pressesChanged:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIResponder.-pressesChanged:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pressesEnded:withEvent:" uniqueID="-pressesEnded:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void">
				<signature>UIResponder.-pressesEnded:withEvent:(NSSet&lt;UIPress *&gt;*;UIPressesEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reloadInputViews" uniqueID="-reloadInputViews():void">
				<signature>UIResponder.-reloadInputViews():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-remoteControlReceivedWithEvent:" uniqueID="-remoteControlReceivedWithEvent:(UIEvent*):void">
				<signature>UIResponder.-remoteControlReceivedWithEvent:(UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resignFirstResponder" uniqueID="-resignFirstResponder():BOOL">
				<signature>UIResponder.-resignFirstResponder():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restoreUserActivityState:" uniqueID="-restoreUserActivityState:(NSUserActivity*):void">
				<signature>UIResponder.-restoreUserActivityState:(NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserActivity:" uniqueID="-setUserActivity:(NSUserActivity*):void">
				<signature>UIResponder.-setUserActivity:(NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-targetForAction:withSender:" uniqueID="-targetForAction:withSender:(SEL _Nonnull;id _Nullable):id _Nullable">
				<signature>UIResponder.-targetForAction:withSender:(SEL _Nonnull;id _Nullable):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textInputContextIdentifier" uniqueID="-textInputContextIdentifier():NSString*">
				<signature>UIResponder.-textInputContextIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textInputMode" uniqueID="-textInputMode():UITextInputMode*">
				<signature>UIResponder.-textInputMode():UITextInputMode*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesBegan:withEvent:" uniqueID="-touchesBegan:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIResponder.-touchesBegan:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesCancelled:withEvent:" uniqueID="-touchesCancelled:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIResponder.-touchesCancelled:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesEnded:withEvent:" uniqueID="-touchesEnded:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIResponder.-touchesEnded:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesEstimatedPropertiesUpdated:" uniqueID="-touchesEstimatedPropertiesUpdated:(NSSet*):void">
				<signature>UIResponder.-touchesEstimatedPropertiesUpdated:(NSSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-touchesMoved:withEvent:" uniqueID="-touchesMoved:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void">
				<signature>UIResponder.-touchesMoved:withEvent:(NSSet&lt;UITouch *&gt;*;UIEvent*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-undoManager" uniqueID="-undoManager():NSUndoManager*">
				<signature>UIResponder.-undoManager():NSUndoManager*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateUserActivityState:" uniqueID="-updateUserActivityState:(NSUserActivity*):void">
				<signature>UIResponder.-updateUserActivityState:(NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userActivity" uniqueID="-userActivity():NSUserActivity*">
				<signature>UIResponder.-userActivity():NSUserActivity*</signature>
			</method>
		</class>
		<class name="^(EKEvent*;char*):void" uniqueID="^(EKEvent*;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(EKEvent*;char*):void">
				<signature>^(EKEvent*;char*):void.-block(EKEvent*;char*):void</signature>
			</method>
		</class>
		<class name="UIResponder+UIResponderKeyCommands" uniqueID="UIResponder+UIResponderKeyCommands">
			<method accessibility="Public" methodKind="Member" name="-keyCommands" uniqueID="-keyCommands():NSArray&lt;UIKeyCommand *&gt;*">
				<signature>UIResponder+UIResponderKeyCommands.-keyCommands():NSArray&lt;UIKeyCommand *&gt;*</signature>
			</method>
		</class>
		<class name="UIResponder+UIResponderInputViewAdditions" uniqueID="UIResponder+UIResponderInputViewAdditions">
			<method accessibility="Public" methodKind="Member" name="-inputAccessoryView" uniqueID="-inputAccessoryView():__kindof UIView*">
				<signature>UIResponder+UIResponderInputViewAdditions.-inputAccessoryView():__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAccessoryViewController" uniqueID="-inputAccessoryViewController():UIInputViewController*">
				<signature>UIResponder+UIResponderInputViewAdditions.-inputAccessoryViewController():UIInputViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputAssistantItem" uniqueID="-inputAssistantItem():UITextInputAssistantItem*">
				<signature>UIResponder+UIResponderInputViewAdditions.-inputAssistantItem():UITextInputAssistantItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputView" uniqueID="-inputView():__kindof UIView*">
				<signature>UIResponder+UIResponderInputViewAdditions.-inputView():__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputViewController" uniqueID="-inputViewController():UIInputViewController*">
				<signature>UIResponder+UIResponderInputViewAdditions.-inputViewController():UIInputViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reloadInputViews" uniqueID="-reloadInputViews():void">
				<signature>UIResponder+UIResponderInputViewAdditions.-reloadInputViews():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textInputContextIdentifier" uniqueID="-textInputContextIdentifier():NSString*">
				<signature>UIResponder+UIResponderInputViewAdditions.-textInputContextIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textInputMode" uniqueID="-textInputMode():UITextInputMode*">
				<signature>UIResponder+UIResponderInputViewAdditions.-textInputMode():UITextInputMode*</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSAttributedStringDocumentFormats" uniqueID="NSAttributedString+NSAttributedStringDocumentFormats">
			<method accessibility="Public" methodKind="Member" name="-dataFromRange:documentAttributes:error:" uniqueID="-dataFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSData*">
				<signature>NSAttributedString+NSAttributedStringDocumentFormats.-dataFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileWrapperFromRange:documentAttributes:error:" uniqueID="-fileWrapperFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSFileWrapper*">
				<signature>NSAttributedString+NSAttributedStringDocumentFormats.-fileWrapperFromRange:documentAttributes:error:(NSRange;NSDictionary&lt;NSString *,id&gt;*;NSError**):NSFileWrapper*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:options:documentAttributes:error:" uniqueID="-initWithData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable">
				<signature>NSAttributedString+NSAttributedStringDocumentFormats.-initWithData:options:documentAttributes:error:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:options:documentAttributes:error:" uniqueID="-initWithURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable">
				<signature>NSAttributedString+NSAttributedStringDocumentFormats.-initWithURL:options:documentAttributes:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSDictionary&lt;NSString *,id&gt;**;NSError**):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="UIImage" uniqueID="UIImage">
			<method accessibility="Public" methodKind="Member" name="-CGImage" uniqueID="-CGImage():struct CGImage*">
				<signature>UIImage.-CGImage():struct CGImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CIImage" uniqueID="-CIImage():CIImage*">
				<signature>UIImage.-CIImage():CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-alignmentRectInsets" uniqueID="-alignmentRectInsets():UIEdgeInsets">
				<signature>UIImage.-alignmentRectInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-capInsets" uniqueID="-capInsets():UIEdgeInsets">
				<signature>UIImage.-capInsets():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAsPatternInRect:" uniqueID="-drawAsPatternInRect:(CGRect):void">
				<signature>UIImage.-drawAsPatternInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:" uniqueID="-drawAtPoint:(CGPoint):void">
				<signature>UIImage.-drawAtPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:blendMode:alpha:" uniqueID="-drawAtPoint:blendMode:alpha:(CGPoint;CGBlendMode;CGFloat):void">
				<signature>UIImage.-drawAtPoint:blendMode:alpha:(CGPoint;CGBlendMode;CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:" uniqueID="-drawInRect:(CGRect):void">
				<signature>UIImage.-drawInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:blendMode:alpha:" uniqueID="-drawInRect:blendMode:alpha:(CGRect;CGBlendMode;CGFloat):void">
				<signature>UIImage.-drawInRect:blendMode:alpha:(CGRect;CGBlendMode;CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-duration" uniqueID="-duration():NSTimeInterval">
				<signature>UIImage.-duration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-flipsForRightToLeftLayoutDirection" uniqueID="-flipsForRightToLeftLayoutDirection():BOOL">
				<signature>UIImage.-flipsForRightToLeftLayoutDirection():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageAsset" uniqueID="-imageAsset():UIImageAsset*">
				<signature>UIImage.-imageAsset():UIImageAsset*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageFlippedForRightToLeftLayoutDirection" uniqueID="-imageFlippedForRightToLeftLayoutDirection():UIImage*">
				<signature>UIImage.-imageFlippedForRightToLeftLayoutDirection():UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageOrientation" uniqueID="-imageOrientation():UIImageOrientation">
				<signature>UIImage.-imageOrientation():UIImageOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageWithAlignmentRectInsets:" uniqueID="-imageWithAlignmentRectInsets:(UIEdgeInsets):UIImage*">
				<signature>UIImage.-imageWithAlignmentRectInsets:(UIEdgeInsets):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageWithRenderingMode:" uniqueID="-imageWithRenderingMode:(UIImageRenderingMode):UIImage*">
				<signature>UIImage.-imageWithRenderingMode:(UIImageRenderingMode):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-images" uniqueID="-images():NSArray&lt;UIImage *&gt;*">
				<signature>UIImage.-images():NSArray&lt;UIImage *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGImage:" uniqueID="-initWithCGImage:(struct CGImage*):instancetype _Nonnull">
				<signature>UIImage.-initWithCGImage:(struct CGImage*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCGImage:scale:orientation:" uniqueID="-initWithCGImage:scale:orientation:(struct CGImage*;CGFloat;UIImageOrientation):instancetype _Nonnull">
				<signature>UIImage.-initWithCGImage:scale:orientation:(struct CGImage*;CGFloat;UIImageOrientation):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCIImage:" uniqueID="-initWithCIImage:(CIImage*):instancetype _Nonnull">
				<signature>UIImage.-initWithCIImage:(CIImage*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCIImage:scale:orientation:" uniqueID="-initWithCIImage:scale:orientation:(CIImage*;CGFloat;UIImageOrientation):instancetype _Nonnull">
				<signature>UIImage.-initWithCIImage:scale:orientation:(CIImage*;CGFloat;UIImageOrientation):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):instancetype _Nullable">
				<signature>UIImage.-initWithContentsOfFile:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:" uniqueID="-initWithData:(NSData*):instancetype _Nullable">
				<signature>UIImage.-initWithData:(NSData*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:scale:" uniqueID="-initWithData:scale:(NSData*;CGFloat):instancetype _Nullable">
				<signature>UIImage.-initWithData:scale:(NSData*;CGFloat):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leftCapWidth" uniqueID="-leftCapWidth():NSInteger">
				<signature>UIImage.-leftCapWidth():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-renderingMode" uniqueID="-renderingMode():UIImageRenderingMode">
				<signature>UIImage.-renderingMode():UIImageRenderingMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resizableImageWithCapInsets:" uniqueID="-resizableImageWithCapInsets:(UIEdgeInsets):UIImage*">
				<signature>UIImage.-resizableImageWithCapInsets:(UIEdgeInsets):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resizableImageWithCapInsets:resizingMode:" uniqueID="-resizableImageWithCapInsets:resizingMode:(UIEdgeInsets;UIImageResizingMode):UIImage*">
				<signature>UIImage.-resizableImageWithCapInsets:resizingMode:(UIEdgeInsets;UIImageResizingMode):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resizingMode" uniqueID="-resizingMode():UIImageResizingMode">
				<signature>UIImage.-resizingMode():UIImageResizingMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scale" uniqueID="-scale():CGFloat">
				<signature>UIImage.-scale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-size" uniqueID="-size():CGSize">
				<signature>UIImage.-size():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stretchableImageWithLeftCapWidth:topCapHeight:" uniqueID="-stretchableImageWithLeftCapWidth:topCapHeight:(NSInteger;NSInteger):UIImage*">
				<signature>UIImage.-stretchableImageWithLeftCapWidth:topCapHeight:(NSInteger;NSInteger):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topCapHeight" uniqueID="-topCapHeight():NSInteger">
				<signature>UIImage.-topCapHeight():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-traitCollection" uniqueID="-traitCollection():UITraitCollection*">
				<signature>UIImage.-traitCollection():UITraitCollection*</signature>
			</method>
		</class>
		<class name="UIDatePicker" uniqueID="UIDatePicker">
			<method accessibility="Public" methodKind="Member" name="-calendar" uniqueID="-calendar():NSCalendar*">
				<signature>UIDatePicker.-calendar():NSCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-countDownDuration" uniqueID="-countDownDuration():NSTimeInterval">
				<signature>UIDatePicker.-countDownDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-date" uniqueID="-date():NSDate*">
				<signature>UIDatePicker.-date():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-datePickerMode" uniqueID="-datePickerMode():UIDatePickerMode">
				<signature>UIDatePicker.-datePickerMode():UIDatePickerMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locale" uniqueID="-locale():NSLocale*">
				<signature>UIDatePicker.-locale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumDate" uniqueID="-maximumDate():NSDate*">
				<signature>UIDatePicker.-maximumDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumDate" uniqueID="-minimumDate():NSDate*">
				<signature>UIDatePicker.-minimumDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minuteInterval" uniqueID="-minuteInterval():NSInteger">
				<signature>UIDatePicker.-minuteInterval():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCalendar:" uniqueID="-setCalendar:(NSCalendar*):void">
				<signature>UIDatePicker.-setCalendar:(NSCalendar*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCountDownDuration:" uniqueID="-setCountDownDuration:(NSTimeInterval):void">
				<signature>UIDatePicker.-setCountDownDuration:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDate:" uniqueID="-setDate:(NSDate*):void">
				<signature>UIDatePicker.-setDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDate:animated:" uniqueID="-setDate:animated:(NSDate*;BOOL):void">
				<signature>UIDatePicker.-setDate:animated:(NSDate*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDatePickerMode:" uniqueID="-setDatePickerMode:(UIDatePickerMode):void">
				<signature>UIDatePicker.-setDatePickerMode:(UIDatePickerMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLocale:" uniqueID="-setLocale:(NSLocale*):void">
				<signature>UIDatePicker.-setLocale:(NSLocale*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaximumDate:" uniqueID="-setMaximumDate:(NSDate*):void">
				<signature>UIDatePicker.-setMaximumDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumDate:" uniqueID="-setMinimumDate:(NSDate*):void">
				<signature>UIDatePicker.-setMinimumDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinuteInterval:" uniqueID="-setMinuteInterval:(NSInteger):void">
				<signature>UIDatePicker.-setMinuteInterval:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeZone:" uniqueID="-setTimeZone:(NSTimeZone*):void">
				<signature>UIDatePicker.-setTimeZone:(NSTimeZone*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeZone" uniqueID="-timeZone():NSTimeZone*">
				<signature>UIDatePicker.-timeZone():NSTimeZone*</signature>
			</method>
		</class>
		<class name="NSURLCredential" uniqueID="NSURLCredential">
			<method accessibility="Public" methodKind="Member" name="-certificates" uniqueID="-certificates():NSArray*">
				<signature>NSURLCredential.-certificates():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasPassword" uniqueID="-hasPassword():BOOL">
				<signature>NSURLCredential.-hasPassword():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-identity" uniqueID="-identity():struct __SecIdentity*">
				<signature>NSURLCredential.-identity():struct __SecIdentity*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithIdentity:certificates:persistence:" uniqueID="-initWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):instancetype _Nonnull">
				<signature>NSURLCredential.-initWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithTrust:" uniqueID="-initWithTrust:(struct __SecTrust*):instancetype _Nonnull">
				<signature>NSURLCredential.-initWithTrust:(struct __SecTrust*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUser:password:persistence:" uniqueID="-initWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):instancetype _Nonnull">
				<signature>NSURLCredential.-initWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-password" uniqueID="-password():NSString*">
				<signature>NSURLCredential.-password():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-persistence" uniqueID="-persistence():NSURLCredentialPersistence">
				<signature>NSURLCredential.-persistence():NSURLCredentialPersistence</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-user" uniqueID="-user():NSString*">
				<signature>NSURLCredential.-user():NSString*</signature>
			</method>
		</class>
		<class name="NSURLCredential+NSInternetPassword" uniqueID="NSURLCredential+NSInternetPassword">
			<method accessibility="Public" methodKind="Member" name="-hasPassword" uniqueID="-hasPassword():BOOL">
				<signature>NSURLCredential+NSInternetPassword.-hasPassword():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUser:password:persistence:" uniqueID="-initWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):instancetype _Nonnull">
				<signature>NSURLCredential+NSInternetPassword.-initWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-password" uniqueID="-password():NSString*">
				<signature>NSURLCredential+NSInternetPassword.-password():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-user" uniqueID="-user():NSString*">
				<signature>NSURLCredential+NSInternetPassword.-user():NSString*</signature>
			</method>
		</class>
		<class name="UIResponder+ActivityContinuation" uniqueID="UIResponder+ActivityContinuation">
			<method accessibility="Public" methodKind="Member" name="-restoreUserActivityState:" uniqueID="-restoreUserActivityState:(NSUserActivity*):void">
				<signature>UIResponder+ActivityContinuation.-restoreUserActivityState:(NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUserActivity:" uniqueID="-setUserActivity:(NSUserActivity*):void">
				<signature>UIResponder+ActivityContinuation.-setUserActivity:(NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateUserActivityState:" uniqueID="-updateUserActivityState:(NSUserActivity*):void">
				<signature>UIResponder+ActivityContinuation.-updateUserActivityState:(NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userActivity" uniqueID="-userActivity():NSUserActivity*">
				<signature>UIResponder+ActivityContinuation.-userActivity():NSUserActivity*</signature>
			</method>
		</class>
		<class name="NSURLCache+NSURLSessionTaskAdditions" uniqueID="NSURLCache+NSURLSessionTaskAdditions">
			<method accessibility="Public" methodKind="Member" name="-getCachedResponseForDataTask:completionHandler:" uniqueID="-getCachedResponseForDataTask:completionHandler:(NSURLSessionDataTask*;(^)(NSCachedURLResponse*):void):void">
				<signature>NSURLCache+NSURLSessionTaskAdditions.-getCachedResponseForDataTask:completionHandler:(NSURLSessionDataTask*;(^)(NSCachedURLResponse*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeCachedResponseForDataTask:" uniqueID="-removeCachedResponseForDataTask:(NSURLSessionDataTask*):void">
				<signature>NSURLCache+NSURLSessionTaskAdditions.-removeCachedResponseForDataTask:(NSURLSessionDataTask*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storeCachedResponse:forDataTask:" uniqueID="-storeCachedResponse:forDataTask:(NSCachedURLResponse*;NSURLSessionDataTask*):void">
				<signature>NSURLCache+NSURLSessionTaskAdditions.-storeCachedResponse:forDataTask:(NSCachedURLResponse*;NSURLSessionDataTask*):void</signature>
			</method>
		</class>
		<class name="NSNumber" uniqueID="NSNumber">
			<method accessibility="Public" methodKind="Member" name="-boolValue" uniqueID="-boolValue():BOOL">
				<signature>NSNumber.-boolValue():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-charValue" uniqueID="-charValue():char">
				<signature>NSNumber.-charValue():char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:" uniqueID="-compare:(NSNumber*):NSComparisonResult">
				<signature>NSNumber.-compare:(NSNumber*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decimalValue" uniqueID="-decimalValue():NSDecimal">
				<signature>NSNumber.-decimalValue():NSDecimal</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSNumber.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-doubleValue" uniqueID="-doubleValue():double">
				<signature>NSNumber.-doubleValue():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-floatValue" uniqueID="-floatValue():float">
				<signature>NSNumber.-floatValue():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBool:" uniqueID="-initWithBool:(BOOL):NSNumber*">
				<signature>NSNumber.-initWithBool:(BOOL):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithChar:" uniqueID="-initWithChar:(char):NSNumber*">
				<signature>NSNumber.-initWithChar:(char):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSNumber.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDouble:" uniqueID="-initWithDouble:(double):NSNumber*">
				<signature>NSNumber.-initWithDouble:(double):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFloat:" uniqueID="-initWithFloat:(float):NSNumber*">
				<signature>NSNumber.-initWithFloat:(float):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithInt:" uniqueID="-initWithInt:(int):NSNumber*">
				<signature>NSNumber.-initWithInt:(int):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithInteger:" uniqueID="-initWithInteger:(NSInteger):NSNumber*">
				<signature>NSNumber.-initWithInteger:(NSInteger):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLong:" uniqueID="-initWithLong:(long):NSNumber*">
				<signature>NSNumber.-initWithLong:(long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLongLong:" uniqueID="-initWithLongLong:(long long):NSNumber*">
				<signature>NSNumber.-initWithLongLong:(long long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithShort:" uniqueID="-initWithShort:(short):NSNumber*">
				<signature>NSNumber.-initWithShort:(short):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUnsignedChar:" uniqueID="-initWithUnsignedChar:(unsigned char):NSNumber*">
				<signature>NSNumber.-initWithUnsignedChar:(unsigned char):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUnsignedInt:" uniqueID="-initWithUnsignedInt:(unsigned int):NSNumber*">
				<signature>NSNumber.-initWithUnsignedInt:(unsigned int):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUnsignedInteger:" uniqueID="-initWithUnsignedInteger:(NSUInteger):NSNumber*">
				<signature>NSNumber.-initWithUnsignedInteger:(NSUInteger):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUnsignedLong:" uniqueID="-initWithUnsignedLong:(unsigned long):NSNumber*">
				<signature>NSNumber.-initWithUnsignedLong:(unsigned long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUnsignedLongLong:" uniqueID="-initWithUnsignedLongLong:(unsigned long long):NSNumber*">
				<signature>NSNumber.-initWithUnsignedLongLong:(unsigned long long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUnsignedShort:" uniqueID="-initWithUnsignedShort:(unsigned short):NSNumber*">
				<signature>NSNumber.-initWithUnsignedShort:(unsigned short):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intValue" uniqueID="-intValue():int">
				<signature>NSNumber.-intValue():int</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-integerValue" uniqueID="-integerValue():NSInteger">
				<signature>NSNumber.-integerValue():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToNumber:" uniqueID="-isEqualToNumber:(NSNumber*):BOOL">
				<signature>NSNumber.-isEqualToNumber:(NSNumber*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-longLongValue" uniqueID="-longLongValue():long long">
				<signature>NSNumber.-longLongValue():long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-longValue" uniqueID="-longValue():long">
				<signature>NSNumber.-longValue():long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shortValue" uniqueID="-shortValue():short">
				<signature>NSNumber.-shortValue():short</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringValue" uniqueID="-stringValue():NSString*">
				<signature>NSNumber.-stringValue():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unsignedCharValue" uniqueID="-unsignedCharValue():unsigned char">
				<signature>NSNumber.-unsignedCharValue():unsigned char</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unsignedIntValue" uniqueID="-unsignedIntValue():unsigned int">
				<signature>NSNumber.-unsignedIntValue():unsigned int</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unsignedIntegerValue" uniqueID="-unsignedIntegerValue():NSUInteger">
				<signature>NSNumber.-unsignedIntegerValue():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unsignedLongLongValue" uniqueID="-unsignedLongLongValue():unsigned long long">
				<signature>NSNumber.-unsignedLongLongValue():unsigned long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unsignedLongValue" uniqueID="-unsignedLongValue():unsigned long">
				<signature>NSNumber.-unsignedLongValue():unsigned long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unsignedShortValue" uniqueID="-unsignedShortValue():unsigned short">
				<signature>NSNumber.-unsignedShortValue():unsigned short</signature>
			</method>
		</class>
		<class name="NSDictionary+NSKeyValueCoding" uniqueID="NSDictionary+NSKeyValueCoding">
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):ObjectType _Nullable">
				<signature>NSDictionary+NSKeyValueCoding.-valueForKey:(NSString*):ObjectType _Nullable</signature>
			</method>
		</class>
		<class name="AddNoteViewController" uniqueID="AddNoteViewController">
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>AddNoteViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enableSaveButtom:" uniqueID="-enableSaveButtom:(id):void">
				<signature>AddNoteViewController.-enableSaveButtom:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveButton" uniqueID="-saveButton():UIBarButtonItem*">
				<signature>AddNoteViewController.-saveButton():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveButtonClicked:" uniqueID="-saveButtonClicked:(id):void">
				<signature>AddNoteViewController.-saveButtonClicked:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSaveButton:" uniqueID="-setSaveButton:(UIBarButtonItem*):void">
				<signature>AddNoteViewController.-setSaveButton:(UIBarButtonItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setText:" uniqueID="-setText:(UITextView*):void">
				<signature>AddNoteViewController.-setText:(UITextView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTitleField:" uniqueID="-setTitleField:(UITextField*):void">
				<signature>AddNoteViewController.-setTitleField:(UITextField*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():UITextView*">
				<signature>AddNoteViewController.-text():UITextView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textView:shouldChangeTextInRange:replacementText:" uniqueID="-textView:shouldChangeTextInRange:replacementText:(UITextView*;NSRange;NSString*):BOOL">
				<signature>AddNoteViewController.-textView:shouldChangeTextInRange:replacementText:(UITextView*;NSRange;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-titleField" uniqueID="-titleField():UITextField*">
				<signature>AddNoteViewController.-titleField():UITextField*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>AddNoteViewController.-viewDidLoad():void</signature>
			</method>
		</class>
		<class name="UIApplication+UIUserNotificationSettings" uniqueID="UIApplication+UIUserNotificationSettings">
			<method accessibility="Public" methodKind="Member" name="-currentUserNotificationSettings" uniqueID="-currentUserNotificationSettings():UIUserNotificationSettings*">
				<signature>UIApplication+UIUserNotificationSettings.-currentUserNotificationSettings():UIUserNotificationSettings*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerUserNotificationSettings:" uniqueID="-registerUserNotificationSettings:(UIUserNotificationSettings*):void">
				<signature>UIApplication+UIUserNotificationSettings.-registerUserNotificationSettings:(UIUserNotificationSettings*):void</signature>
			</method>
		</class>
		<class name="UIApplication+UIStateRestoration" uniqueID="UIApplication+UIStateRestoration">
			<method accessibility="Public" methodKind="Member" name="-completeStateRestoration" uniqueID="-completeStateRestoration():void">
				<signature>UIApplication+UIStateRestoration.-completeStateRestoration():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-extendStateRestoration" uniqueID="-extendStateRestoration():void">
				<signature>UIApplication+UIStateRestoration.-extendStateRestoration():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-ignoreSnapshotOnNextApplicationLaunch" uniqueID="-ignoreSnapshotOnNextApplicationLaunch():void">
				<signature>UIApplication+UIStateRestoration.-ignoreSnapshotOnNextApplicationLaunch():void</signature>
			</method>
		</class>
		<class name="^(id;NSDictionary*):char" uniqueID="^(id;NSDictionary*):char">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;NSDictionary*):char">
				<signature>^(id;NSDictionary*):char.-block(id;NSDictionary*):char</signature>
			</method>
		</class>
		<class name="^(NSString*;char*):void" uniqueID="^(NSString*;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSString*;char*):void">
				<signature>^(NSString*;char*):void.-block(NSString*;char*):void</signature>
			</method>
		</class>
		<class name="NSMutableData" uniqueID="NSMutableData">
			<method accessibility="Public" methodKind="Member" name="-appendBytes:length:" uniqueID="-appendBytes:length:(const void*;NSUInteger):void">
				<signature>NSMutableData.-appendBytes:length:(const void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-appendData:" uniqueID="-appendData:(NSData*):void">
				<signature>NSMutableData.-appendData:(NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-increaseLengthBy:" uniqueID="-increaseLengthBy:(NSUInteger):void">
				<signature>NSMutableData.-increaseLengthBy:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCapacity:" uniqueID="-initWithCapacity:(NSUInteger):instancetype _Nullable">
				<signature>NSMutableData.-initWithCapacity:(NSUInteger):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithLength:" uniqueID="-initWithLength:(NSUInteger):instancetype _Nullable">
				<signature>NSMutableData.-initWithLength:(NSUInteger):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>NSMutableData.-length():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableBytes" uniqueID="-mutableBytes():void*">
				<signature>NSMutableData.-mutableBytes():void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceBytesInRange:withBytes:" uniqueID="-replaceBytesInRange:withBytes:(NSRange;const void*):void">
				<signature>NSMutableData.-replaceBytesInRange:withBytes:(NSRange;const void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceBytesInRange:withBytes:length:" uniqueID="-replaceBytesInRange:withBytes:length:(NSRange;const void*;NSUInteger):void">
				<signature>NSMutableData.-replaceBytesInRange:withBytes:length:(NSRange;const void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resetBytesInRange:" uniqueID="-resetBytesInRange:(NSRange):void">
				<signature>NSMutableData.-resetBytesInRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setData:" uniqueID="-setData:(NSData*):void">
				<signature>NSMutableData.-setData:(NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLength:" uniqueID="-setLength:(NSUInteger):void">
				<signature>NSMutableData.-setLength:(NSUInteger):void</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyedArchiverObjectSubstitution" uniqueID="NSObject+NSKeyedArchiverObjectSubstitution">
			<method accessibility="Public" methodKind="Member" name="-classForKeyedArchiver" uniqueID="-classForKeyedArchiver():Class*">
				<signature>NSObject+NSKeyedArchiverObjectSubstitution.-classForKeyedArchiver():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replacementObjectForKeyedArchiver:" uniqueID="-replacementObjectForKeyedArchiver:(NSKeyedArchiver*):id _Nullable">
				<signature>NSObject+NSKeyedArchiverObjectSubstitution.-replacementObjectForKeyedArchiver:(NSKeyedArchiver*):id _Nullable</signature>
			</method>
		</class>
		<class name="JSContext+JSContextRefSupport" uniqueID="JSContext+JSContextRefSupport">
			<method accessibility="Public" methodKind="Member" name="-JSGlobalContextRef" uniqueID="-JSGlobalContextRef():JSGlobalContextRef">
				<signature>JSContext+JSContextRefSupport.-JSGlobalContextRef():JSGlobalContextRef</signature>
			</method>
		</class>
		<class name="^(void*;unsigned int):void" uniqueID="^(void*;unsigned int):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(void*;unsigned int):void">
				<signature>^(void*;unsigned int):void.-block(void*;unsigned int):void</signature>
			</method>
		</class>
		<class name="^(UIBackgroundFetchResult):void" uniqueID="^(UIBackgroundFetchResult):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(UIBackgroundFetchResult):void">
				<signature>^(UIBackgroundFetchResult):void.-block(UIBackgroundFetchResult):void</signature>
			</method>
		</class>
		<class name="UIApplication+UIRemoteNotifications" uniqueID="UIApplication+UIRemoteNotifications">
			<method accessibility="Public" methodKind="Member" name="-enabledRemoteNotificationTypes" uniqueID="-enabledRemoteNotificationTypes():UIRemoteNotificationType">
				<signature>UIApplication+UIRemoteNotifications.-enabledRemoteNotificationTypes():UIRemoteNotificationType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isRegisteredForRemoteNotifications" uniqueID="-isRegisteredForRemoteNotifications():BOOL">
				<signature>UIApplication+UIRemoteNotifications.-isRegisteredForRemoteNotifications():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerForRemoteNotificationTypes:" uniqueID="-registerForRemoteNotificationTypes:(UIRemoteNotificationType):void">
				<signature>UIApplication+UIRemoteNotifications.-registerForRemoteNotificationTypes:(UIRemoteNotificationType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerForRemoteNotifications" uniqueID="-registerForRemoteNotifications():void">
				<signature>UIApplication+UIRemoteNotifications.-registerForRemoteNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unregisterForRemoteNotifications" uniqueID="-unregisterForRemoteNotifications():void">
				<signature>UIApplication+UIRemoteNotifications.-unregisterForRemoteNotifications():void</signature>
			</method>
		</class>
		<class name="UIApplication+UIRemoteControlEvents" uniqueID="UIApplication+UIRemoteControlEvents">
			<method accessibility="Public" methodKind="Member" name="-beginReceivingRemoteControlEvents" uniqueID="-beginReceivingRemoteControlEvents():void">
				<signature>UIApplication+UIRemoteControlEvents.-beginReceivingRemoteControlEvents():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endReceivingRemoteControlEvents" uniqueID="-endReceivingRemoteControlEvents():void">
				<signature>UIApplication+UIRemoteControlEvents.-endReceivingRemoteControlEvents():void</signature>
			</method>
		</class>
		<class name="EKObject" uniqueID="EKObject">
			<method accessibility="Public" methodKind="Member" name="-hasChanges" uniqueID="-hasChanges():BOOL">
				<signature>EKObject.-hasChanges():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isNew" uniqueID="-isNew():BOOL">
				<signature>EKObject.-isNew():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-refresh" uniqueID="-refresh():BOOL">
				<signature>EKObject.-refresh():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-reset" uniqueID="-reset():void">
				<signature>EKObject.-reset():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rollback" uniqueID="-rollback():void">
				<signature>EKObject.-rollback():void</signature>
			</method>
		</class>
		<class name="UIViewController+UIViewControllerTransitionCoordinator" uniqueID="UIViewController+UIViewControllerTransitionCoordinator">
			<method accessibility="Public" methodKind="Member" name="-transitionCoordinator" uniqueID="-transitionCoordinator():objc_object&lt;UIViewControllerTransitionCoordinator&gt;*">
				<signature>UIViewController+UIViewControllerTransitionCoordinator.-transitionCoordinator():objc_object&lt;UIViewControllerTransitionCoordinator&gt;*</signature>
			</method>
		</class>
		<class name="^(id;char*):void" uniqueID="^(id;char*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(id;char*):void">
				<signature>^(id;char*):void.-block(id;char*):void</signature>
			</method>
		</class>
		<class name="UIApplication+UINewsstand" uniqueID="UIApplication+UINewsstand">
			<method accessibility="Public" methodKind="Member" name="-setNewsstandIconImage:" uniqueID="-setNewsstandIconImage:(UIImage*):void">
				<signature>UIApplication+UINewsstand.-setNewsstandIconImage:(UIImage*):void</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSStringDrawing" uniqueID="NSAttributedString+NSStringDrawing">
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:" uniqueID="-drawAtPoint:(CGPoint):void">
				<signature>NSAttributedString+NSStringDrawing.-drawAtPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:" uniqueID="-drawInRect:(CGRect):void">
				<signature>NSAttributedString+NSStringDrawing.-drawInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-size" uniqueID="-size():CGSize">
				<signature>NSAttributedString+NSStringDrawing.-size():CGSize</signature>
			</method>
		</class>
		<class name="NSValue+NSValueUIGeometryExtensions" uniqueID="NSValue+NSValueUIGeometryExtensions">
			<method accessibility="Public" methodKind="Member" name="-CGAffineTransformValue" uniqueID="-CGAffineTransformValue():CGAffineTransform">
				<signature>NSValue+NSValueUIGeometryExtensions.-CGAffineTransformValue():CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGPointValue" uniqueID="-CGPointValue():CGPoint">
				<signature>NSValue+NSValueUIGeometryExtensions.-CGPointValue():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGRectValue" uniqueID="-CGRectValue():CGRect">
				<signature>NSValue+NSValueUIGeometryExtensions.-CGRectValue():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGSizeValue" uniqueID="-CGSizeValue():CGSize">
				<signature>NSValue+NSValueUIGeometryExtensions.-CGSizeValue():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGVectorValue" uniqueID="-CGVectorValue():CGVector">
				<signature>NSValue+NSValueUIGeometryExtensions.-CGVectorValue():CGVector</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-UIEdgeInsetsValue" uniqueID="-UIEdgeInsetsValue():UIEdgeInsets">
				<signature>NSValue+NSValueUIGeometryExtensions.-UIEdgeInsetsValue():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-UIOffsetValue" uniqueID="-UIOffsetValue():UIOffset">
				<signature>NSValue+NSValueUIGeometryExtensions.-UIOffsetValue():UIOffset</signature>
			</method>
		</class>
		<class name="NSLayoutAnchor" uniqueID="NSLayoutAnchor">
			<method accessibility="Public" methodKind="Member" name="-constraintEqualToAnchor:" uniqueID="-constraintEqualToAnchor:(NSLayoutAnchor&lt;AnchorType&gt;*):NSLayoutConstraint*">
				<signature>NSLayoutAnchor.-constraintEqualToAnchor:(NSLayoutAnchor&lt;AnchorType&gt;*):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintEqualToAnchor:constant:" uniqueID="-constraintEqualToAnchor:constant:(NSLayoutAnchor&lt;AnchorType&gt;*;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutAnchor.-constraintEqualToAnchor:constant:(NSLayoutAnchor&lt;AnchorType&gt;*;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintGreaterThanOrEqualToAnchor:" uniqueID="-constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor&lt;AnchorType&gt;*):NSLayoutConstraint*">
				<signature>NSLayoutAnchor.-constraintGreaterThanOrEqualToAnchor:(NSLayoutAnchor&lt;AnchorType&gt;*):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintGreaterThanOrEqualToAnchor:constant:" uniqueID="-constraintGreaterThanOrEqualToAnchor:constant:(NSLayoutAnchor&lt;AnchorType&gt;*;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutAnchor.-constraintGreaterThanOrEqualToAnchor:constant:(NSLayoutAnchor&lt;AnchorType&gt;*;CGFloat):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintLessThanOrEqualToAnchor:" uniqueID="-constraintLessThanOrEqualToAnchor:(NSLayoutAnchor&lt;AnchorType&gt;*):NSLayoutConstraint*">
				<signature>NSLayoutAnchor.-constraintLessThanOrEqualToAnchor:(NSLayoutAnchor&lt;AnchorType&gt;*):NSLayoutConstraint*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constraintLessThanOrEqualToAnchor:constant:" uniqueID="-constraintLessThanOrEqualToAnchor:constant:(NSLayoutAnchor&lt;AnchorType&gt;*;CGFloat):NSLayoutConstraint*">
				<signature>NSLayoutAnchor.-constraintLessThanOrEqualToAnchor:constant:(NSLayoutAnchor&lt;AnchorType&gt;*;CGFloat):NSLayoutConstraint*</signature>
			</method>
		</class>
		<class name="NSSet+NSExtendedSet" uniqueID="NSSet+NSExtendedSet">
			<method accessibility="Public" methodKind="Member" name="-allObjects" uniqueID="-allObjects():NSArray&lt;ObjectType&gt;*">
				<signature>NSSet+NSExtendedSet.-allObjects():NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-anyObject" uniqueID="-anyObject():ObjectType _Nullable">
				<signature>NSSet+NSExtendedSet.-anyObject():ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsObject:" uniqueID="-containsObject:(ObjectType _Nonnull):BOOL">
				<signature>NSSet+NSExtendedSet.-containsObject:(ObjectType _Nonnull):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSSet+NSExtendedSet.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descriptionWithLocale:" uniqueID="-descriptionWithLocale:(id _Nullable):NSString*">
				<signature>NSSet+NSExtendedSet.-descriptionWithLocale:(id _Nullable):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsUsingBlock:" uniqueID="-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSSet+NSExtendedSet.-enumerateObjectsUsingBlock:((^)(ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateObjectsWithOptions:usingBlock:" uniqueID="-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):void):void">
				<signature>NSSet+NSExtendedSet.-enumerateObjectsWithOptions:usingBlock:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intersectsSet:" uniqueID="-intersectsSet:(NSSet&lt;ObjectType&gt;*):BOOL">
				<signature>NSSet+NSExtendedSet.-intersectsSet:(NSSet&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToSet:" uniqueID="-isEqualToSet:(NSSet&lt;ObjectType&gt;*):BOOL">
				<signature>NSSet+NSExtendedSet.-isEqualToSet:(NSSet&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSubsetOfSet:" uniqueID="-isSubsetOfSet:(NSSet&lt;ObjectType&gt;*):BOOL">
				<signature>NSSet+NSExtendedSet.-isSubsetOfSet:(NSSet&lt;ObjectType&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:" uniqueID="-makeObjectsPerformSelector:(SEL _Nonnull):void">
				<signature>NSSet+NSExtendedSet.-makeObjectsPerformSelector:(SEL _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeObjectsPerformSelector:withObject:" uniqueID="-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void">
				<signature>NSSet+NSExtendedSet.-makeObjectsPerformSelector:withObject:(SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsPassingTest:" uniqueID="-objectsPassingTest:((^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet+NSExtendedSet.-objectsPassingTest:((^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectsWithOptions:passingTest:" uniqueID="-objectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet+NSExtendedSet.-objectsWithOptions:passingTest:(NSEnumerationOptions;(^)(ObjectType _Nonnull;BOOL*):BOOL):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setByAddingObject:" uniqueID="-setByAddingObject:(ObjectType _Nonnull):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet+NSExtendedSet.-setByAddingObject:(ObjectType _Nonnull):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setByAddingObjectsFromArray:" uniqueID="-setByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet+NSExtendedSet.-setByAddingObjectsFromArray:(NSArray&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setByAddingObjectsFromSet:" uniqueID="-setByAddingObjectsFromSet:(NSSet&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*">
				<signature>NSSet+NSExtendedSet.-setByAddingObjectsFromSet:(NSSet&lt;ObjectType&gt;*):NSSet&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="AVAudioSession" uniqueID="AVAudioSession">
			<method accessibility="Public" methodKind="Member" name="-IOBufferDuration" uniqueID="-IOBufferDuration():NSTimeInterval">
				<signature>AVAudioSession.-IOBufferDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-availableCategories" uniqueID="-availableCategories():NSArray&lt;NSString *&gt;*">
				<signature>AVAudioSession.-availableCategories():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-availableInputs" uniqueID="-availableInputs():NSArray&lt;AVAudioSessionPortDescription *&gt;*">
				<signature>AVAudioSession.-availableInputs():NSArray&lt;AVAudioSessionPortDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-availableModes" uniqueID="-availableModes():NSArray&lt;NSString *&gt;*">
				<signature>AVAudioSession.-availableModes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-category" uniqueID="-category():NSString*">
				<signature>AVAudioSession.-category():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-categoryOptions" uniqueID="-categoryOptions():AVAudioSessionCategoryOptions">
				<signature>AVAudioSession.-categoryOptions():AVAudioSessionCategoryOptions</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentHardwareInputNumberOfChannels" uniqueID="-currentHardwareInputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-currentHardwareInputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentHardwareOutputNumberOfChannels" uniqueID="-currentHardwareOutputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-currentHardwareOutputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentHardwareSampleRate" uniqueID="-currentHardwareSampleRate():double">
				<signature>AVAudioSession.-currentHardwareSampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentRoute" uniqueID="-currentRoute():AVAudioSessionRouteDescription*">
				<signature>AVAudioSession.-currentRoute():AVAudioSessionRouteDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;AVAudioSessionDelegate&gt;*">
				<signature>AVAudioSession.-delegate():objc_object&lt;AVAudioSessionDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputDataSource" uniqueID="-inputDataSource():AVAudioSessionDataSourceDescription*">
				<signature>AVAudioSession.-inputDataSource():AVAudioSessionDataSourceDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputDataSources" uniqueID="-inputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*">
				<signature>AVAudioSession.-inputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputGain" uniqueID="-inputGain():float">
				<signature>AVAudioSession.-inputGain():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputIsAvailable" uniqueID="-inputIsAvailable():BOOL">
				<signature>AVAudioSession.-inputIsAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputLatency" uniqueID="-inputLatency():NSTimeInterval">
				<signature>AVAudioSession.-inputLatency():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputNumberOfChannels" uniqueID="-inputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-inputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInputAvailable" uniqueID="-isInputAvailable():BOOL">
				<signature>AVAudioSession.-isInputAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInputGainSettable" uniqueID="-isInputGainSettable():BOOL">
				<signature>AVAudioSession.-isInputGainSettable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isOtherAudioPlaying" uniqueID="-isOtherAudioPlaying():BOOL">
				<signature>AVAudioSession.-isOtherAudioPlaying():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumInputNumberOfChannels" uniqueID="-maximumInputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-maximumInputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumOutputNumberOfChannels" uniqueID="-maximumOutputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-maximumOutputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mode" uniqueID="-mode():NSString*">
				<signature>AVAudioSession.-mode():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputDataSource" uniqueID="-outputDataSource():AVAudioSessionDataSourceDescription*">
				<signature>AVAudioSession.-outputDataSource():AVAudioSessionDataSourceDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputDataSources" uniqueID="-outputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*">
				<signature>AVAudioSession.-outputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputLatency" uniqueID="-outputLatency():NSTimeInterval">
				<signature>AVAudioSession.-outputLatency():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputNumberOfChannels" uniqueID="-outputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-outputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputVolume" uniqueID="-outputVolume():float">
				<signature>AVAudioSession.-outputVolume():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overrideOutputAudioPort:error:" uniqueID="-overrideOutputAudioPort:error:(AVAudioSessionPortOverride;NSError**):BOOL">
				<signature>AVAudioSession.-overrideOutputAudioPort:error:(AVAudioSessionPortOverride;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredHardwareSampleRate" uniqueID="-preferredHardwareSampleRate():double">
				<signature>AVAudioSession.-preferredHardwareSampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredIOBufferDuration" uniqueID="-preferredIOBufferDuration():NSTimeInterval">
				<signature>AVAudioSession.-preferredIOBufferDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredInput" uniqueID="-preferredInput():AVAudioSessionPortDescription*">
				<signature>AVAudioSession.-preferredInput():AVAudioSessionPortDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredInputNumberOfChannels" uniqueID="-preferredInputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-preferredInputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredOutputNumberOfChannels" uniqueID="-preferredOutputNumberOfChannels():NSInteger">
				<signature>AVAudioSession.-preferredOutputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredSampleRate" uniqueID="-preferredSampleRate():double">
				<signature>AVAudioSession.-preferredSampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-recordPermission" uniqueID="-recordPermission():AVAudioSessionRecordPermission">
				<signature>AVAudioSession.-recordPermission():AVAudioSessionRecordPermission</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-requestRecordPermission:" uniqueID="-requestRecordPermission:((^)(BOOL):void):void">
				<signature>AVAudioSession.-requestRecordPermission:((^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sampleRate" uniqueID="-sampleRate():double">
				<signature>AVAudioSession.-sampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-secondaryAudioShouldBeSilencedHint" uniqueID="-secondaryAudioShouldBeSilencedHint():BOOL">
				<signature>AVAudioSession.-secondaryAudioShouldBeSilencedHint():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActive:error:" uniqueID="-setActive:error:(BOOL;NSError**):BOOL">
				<signature>AVAudioSession.-setActive:error:(BOOL;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActive:withFlags:error:" uniqueID="-setActive:withFlags:error:(BOOL;NSInteger;NSError**):BOOL">
				<signature>AVAudioSession.-setActive:withFlags:error:(BOOL;NSInteger;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setActive:withOptions:error:" uniqueID="-setActive:withOptions:error:(BOOL;AVAudioSessionSetActiveOptions;NSError**):BOOL">
				<signature>AVAudioSession.-setActive:withOptions:error:(BOOL;AVAudioSessionSetActiveOptions;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCategory:error:" uniqueID="-setCategory:error:(NSString*;NSError**):BOOL">
				<signature>AVAudioSession.-setCategory:error:(NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCategory:withOptions:error:" uniqueID="-setCategory:withOptions:error:(NSString*;AVAudioSessionCategoryOptions;NSError**):BOOL">
				<signature>AVAudioSession.-setCategory:withOptions:error:(NSString*;AVAudioSessionCategoryOptions;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;AVAudioSessionDelegate&gt;*):void">
				<signature>AVAudioSession.-setDelegate:(objc_object&lt;AVAudioSessionDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputDataSource:error:" uniqueID="-setInputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL">
				<signature>AVAudioSession.-setInputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputGain:error:" uniqueID="-setInputGain:error:(float;NSError**):BOOL">
				<signature>AVAudioSession.-setInputGain:error:(float;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMode:error:" uniqueID="-setMode:error:(NSString*;NSError**):BOOL">
				<signature>AVAudioSession.-setMode:error:(NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOutputDataSource:error:" uniqueID="-setOutputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL">
				<signature>AVAudioSession.-setOutputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredHardwareSampleRate:error:" uniqueID="-setPreferredHardwareSampleRate:error:(double;NSError**):BOOL">
				<signature>AVAudioSession.-setPreferredHardwareSampleRate:error:(double;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredIOBufferDuration:error:" uniqueID="-setPreferredIOBufferDuration:error:(NSTimeInterval;NSError**):BOOL">
				<signature>AVAudioSession.-setPreferredIOBufferDuration:error:(NSTimeInterval;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredInput:error:" uniqueID="-setPreferredInput:error:(AVAudioSessionPortDescription*;NSError**):BOOL">
				<signature>AVAudioSession.-setPreferredInput:error:(AVAudioSessionPortDescription*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredInputNumberOfChannels:error:" uniqueID="-setPreferredInputNumberOfChannels:error:(NSInteger;NSError**):BOOL">
				<signature>AVAudioSession.-setPreferredInputNumberOfChannels:error:(NSInteger;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredOutputNumberOfChannels:error:" uniqueID="-setPreferredOutputNumberOfChannels:error:(NSInteger;NSError**):BOOL">
				<signature>AVAudioSession.-setPreferredOutputNumberOfChannels:error:(NSInteger;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredSampleRate:error:" uniqueID="-setPreferredSampleRate:error:(double;NSError**):BOOL">
				<signature>AVAudioSession.-setPreferredSampleRate:error:(double;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="AVAudioSession+AVAudioSessionHardwareConfiguration" uniqueID="AVAudioSession+AVAudioSessionHardwareConfiguration">
			<method accessibility="Public" methodKind="Member" name="-IOBufferDuration" uniqueID="-IOBufferDuration():NSTimeInterval">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-IOBufferDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputDataSource" uniqueID="-inputDataSource():AVAudioSessionDataSourceDescription*">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-inputDataSource():AVAudioSessionDataSourceDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputDataSources" uniqueID="-inputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-inputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputGain" uniqueID="-inputGain():float">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-inputGain():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputLatency" uniqueID="-inputLatency():NSTimeInterval">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-inputLatency():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputNumberOfChannels" uniqueID="-inputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-inputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInputAvailable" uniqueID="-isInputAvailable():BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-isInputAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInputGainSettable" uniqueID="-isInputGainSettable():BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-isInputGainSettable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumInputNumberOfChannels" uniqueID="-maximumInputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-maximumInputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumOutputNumberOfChannels" uniqueID="-maximumOutputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-maximumOutputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputDataSource" uniqueID="-outputDataSource():AVAudioSessionDataSourceDescription*">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-outputDataSource():AVAudioSessionDataSourceDescription*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputDataSources" uniqueID="-outputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-outputDataSources():NSArray&lt;AVAudioSessionDataSourceDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputLatency" uniqueID="-outputLatency():NSTimeInterval">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-outputLatency():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputNumberOfChannels" uniqueID="-outputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-outputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputVolume" uniqueID="-outputVolume():float">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-outputVolume():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredIOBufferDuration" uniqueID="-preferredIOBufferDuration():NSTimeInterval">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-preferredIOBufferDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredInputNumberOfChannels" uniqueID="-preferredInputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-preferredInputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredOutputNumberOfChannels" uniqueID="-preferredOutputNumberOfChannels():NSInteger">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-preferredOutputNumberOfChannels():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredSampleRate" uniqueID="-preferredSampleRate():double">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-preferredSampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sampleRate" uniqueID="-sampleRate():double">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-sampleRate():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputDataSource:error:" uniqueID="-setInputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setInputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputGain:error:" uniqueID="-setInputGain:error:(float;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setInputGain:error:(float;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOutputDataSource:error:" uniqueID="-setOutputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setOutputDataSource:error:(AVAudioSessionDataSourceDescription*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredIOBufferDuration:error:" uniqueID="-setPreferredIOBufferDuration:error:(NSTimeInterval;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setPreferredIOBufferDuration:error:(NSTimeInterval;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredInputNumberOfChannels:error:" uniqueID="-setPreferredInputNumberOfChannels:error:(NSInteger;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setPreferredInputNumberOfChannels:error:(NSInteger;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredOutputNumberOfChannels:error:" uniqueID="-setPreferredOutputNumberOfChannels:error:(NSInteger;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setPreferredOutputNumberOfChannels:error:(NSInteger;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPreferredSampleRate:error:" uniqueID="-setPreferredSampleRate:error:(double;NSError**):BOOL">
				<signature>AVAudioSession+AVAudioSessionHardwareConfiguration.-setPreferredSampleRate:error:(double;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="CLLocationManager+CLVisitExtensions" uniqueID="CLLocationManager+CLVisitExtensions">
			<method accessibility="Public" methodKind="Member" name="-startMonitoringVisits" uniqueID="-startMonitoringVisits():void">
				<signature>CLLocationManager+CLVisitExtensions.-startMonitoringVisits():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stopMonitoringVisits" uniqueID="-stopMonitoringVisits():void">
				<signature>CLLocationManager+CLVisitExtensions.-stopMonitoringVisits():void</signature>
			</method>
		</class>
		<class name="AVAudioRecorder" uniqueID="AVAudioRecorder">
			<method accessibility="Public" methodKind="Member" name="-averagePowerForChannel:" uniqueID="-averagePowerForChannel:(NSUInteger):float">
				<signature>AVAudioRecorder.-averagePowerForChannel:(NSUInteger):float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-channelAssignments" uniqueID="-channelAssignments():NSArray&lt;NSNumber *&gt;*">
				<signature>AVAudioRecorder.-channelAssignments():NSArray&lt;NSNumber *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentTime" uniqueID="-currentTime():NSTimeInterval">
				<signature>AVAudioRecorder.-currentTime():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;AVAudioRecorderDelegate&gt;*">
				<signature>AVAudioRecorder.-delegate():objc_object&lt;AVAudioRecorderDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteRecording" uniqueID="-deleteRecording():BOOL">
				<signature>AVAudioRecorder.-deleteRecording():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deviceCurrentTime" uniqueID="-deviceCurrentTime():NSTimeInterval">
				<signature>AVAudioRecorder.-deviceCurrentTime():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithURL:settings:error:" uniqueID="-initWithURL:settings:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSError**):instancetype _Nullable">
				<signature>AVAudioRecorder.-initWithURL:settings:error:(NSURL*;NSDictionary&lt;NSString *,id&gt;*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMeteringEnabled" uniqueID="-isMeteringEnabled():BOOL">
				<signature>AVAudioRecorder.-isMeteringEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isRecording" uniqueID="-isRecording():BOOL">
				<signature>AVAudioRecorder.-isRecording():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pause" uniqueID="-pause():void">
				<signature>AVAudioRecorder.-pause():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-peakPowerForChannel:" uniqueID="-peakPowerForChannel:(NSUInteger):float">
				<signature>AVAudioRecorder.-peakPowerForChannel:(NSUInteger):float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareToRecord" uniqueID="-prepareToRecord():BOOL">
				<signature>AVAudioRecorder.-prepareToRecord():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-record" uniqueID="-record():BOOL">
				<signature>AVAudioRecorder.-record():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-recordAtTime:" uniqueID="-recordAtTime:(NSTimeInterval):BOOL">
				<signature>AVAudioRecorder.-recordAtTime:(NSTimeInterval):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-recordAtTime:forDuration:" uniqueID="-recordAtTime:forDuration:(NSTimeInterval;NSTimeInterval):BOOL">
				<signature>AVAudioRecorder.-recordAtTime:forDuration:(NSTimeInterval;NSTimeInterval):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-recordForDuration:" uniqueID="-recordForDuration:(NSTimeInterval):BOOL">
				<signature>AVAudioRecorder.-recordForDuration:(NSTimeInterval):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setChannelAssignments:" uniqueID="-setChannelAssignments:(NSArray&lt;NSNumber *&gt;*):void">
				<signature>AVAudioRecorder.-setChannelAssignments:(NSArray&lt;NSNumber *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;AVAudioRecorderDelegate&gt;*):void">
				<signature>AVAudioRecorder.-setDelegate:(objc_object&lt;AVAudioRecorderDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMeteringEnabled:" uniqueID="-setMeteringEnabled:(BOOL):void">
				<signature>AVAudioRecorder.-setMeteringEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-settings" uniqueID="-settings():NSDictionary&lt;NSString *,id&gt;*">
				<signature>AVAudioRecorder.-settings():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stop" uniqueID="-stop():void">
				<signature>AVAudioRecorder.-stop():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateMeters" uniqueID="-updateMeters():void">
				<signature>AVAudioRecorder.-updateMeters():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-url" uniqueID="-url():NSURL*">
				<signature>AVAudioRecorder.-url():NSURL*</signature>
			</method>
		</class>
		<class name="^(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void" uniqueID="^(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void">
				<signature>^(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void.-block(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void</signature>
			</method>
		</class>
		<class name="UIViewController+UIContainerViewControllerProtectedMethods" uniqueID="UIViewController+UIContainerViewControllerProtectedMethods">
			<method accessibility="Public" methodKind="Member" name="-addChildViewController:" uniqueID="-addChildViewController:(UIViewController*):void">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-addChildViewController:(UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginAppearanceTransition:animated:" uniqueID="-beginAppearanceTransition:animated:(BOOL;BOOL):void">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-beginAppearanceTransition:animated:(BOOL;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllerForStatusBarHidden" uniqueID="-childViewControllerForStatusBarHidden():UIViewController*">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-childViewControllerForStatusBarHidden():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllerForStatusBarStyle" uniqueID="-childViewControllerForStatusBarStyle():UIViewController*">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-childViewControllerForStatusBarStyle():UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-childViewControllers" uniqueID="-childViewControllers():NSArray&lt;__kindof UIViewController *&gt;*">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-childViewControllers():NSArray&lt;__kindof UIViewController *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endAppearanceTransition" uniqueID="-endAppearanceTransition():void">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-endAppearanceTransition():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-overrideTraitCollectionForChildViewController:" uniqueID="-overrideTraitCollectionForChildViewController:(UIViewController*):UITraitCollection*">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-overrideTraitCollectionForChildViewController:(UIViewController*):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeFromParentViewController" uniqueID="-removeFromParentViewController():void">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-removeFromParentViewController():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOverrideTraitCollection:forChildViewController:" uniqueID="-setOverrideTraitCollection:forChildViewController:(UITraitCollection*;UIViewController*):void">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-setOverrideTraitCollection:forChildViewController:(UITraitCollection*;UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitionFromViewController:toViewController:duration:options:animations:completion:" uniqueID="-transitionFromViewController:toViewController:duration:options:animations:completion:(UIViewController*;UIViewController*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>UIViewController+UIContainerViewControllerProtectedMethods.-transitionFromViewController:toViewController:duration:options:animations:completion:(UIViewController*;UIViewController*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
		</class>
		<class name="UITraitCollection" uniqueID="UITraitCollection">
			<method accessibility="Public" methodKind="Member" name="-containsTraitsInCollection:" uniqueID="-containsTraitsInCollection:(UITraitCollection*):BOOL">
				<signature>UITraitCollection.-containsTraitsInCollection:(UITraitCollection*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-displayScale" uniqueID="-displayScale():CGFloat">
				<signature>UITraitCollection.-displayScale():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-forceTouchCapability" uniqueID="-forceTouchCapability():UIForceTouchCapability">
				<signature>UITraitCollection.-forceTouchCapability():UIForceTouchCapability</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-horizontalSizeClass" uniqueID="-horizontalSizeClass():UIUserInterfaceSizeClass">
				<signature>UITraitCollection.-horizontalSizeClass():UIUserInterfaceSizeClass</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>UITraitCollection.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UITraitCollection.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInterfaceIdiom" uniqueID="-userInterfaceIdiom():UIUserInterfaceIdiom">
				<signature>UITraitCollection.-userInterfaceIdiom():UIUserInterfaceIdiom</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-verticalSizeClass" uniqueID="-verticalSizeClass():UIUserInterfaceSizeClass">
				<signature>UITraitCollection.-verticalSizeClass():UIUserInterfaceSizeClass</signature>
			</method>
		</class>
		<class name="AVAudioPlayer" uniqueID="AVAudioPlayer">
			<method accessibility="Public" methodKind="Member" name="-averagePowerForChannel:" uniqueID="-averagePowerForChannel:(NSUInteger):float">
				<signature>AVAudioPlayer.-averagePowerForChannel:(NSUInteger):float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-channelAssignments" uniqueID="-channelAssignments():NSArray&lt;NSNumber *&gt;*">
				<signature>AVAudioPlayer.-channelAssignments():NSArray&lt;NSNumber *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentTime" uniqueID="-currentTime():NSTimeInterval">
				<signature>AVAudioPlayer.-currentTime():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-data" uniqueID="-data():NSData*">
				<signature>AVAudioPlayer.-data():NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;AVAudioPlayerDelegate&gt;*">
				<signature>AVAudioPlayer.-delegate():objc_object&lt;AVAudioPlayerDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deviceCurrentTime" uniqueID="-deviceCurrentTime():NSTimeInterval">
				<signature>AVAudioPlayer.-deviceCurrentTime():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-duration" uniqueID="-duration():NSTimeInterval">
				<signature>AVAudioPlayer.-duration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enableRate" uniqueID="-enableRate():BOOL">
				<signature>AVAudioPlayer.-enableRate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:error:" uniqueID="-initWithContentsOfURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>AVAudioPlayer.-initWithContentsOfURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:fileTypeHint:error:" uniqueID="-initWithContentsOfURL:fileTypeHint:error:(NSURL*;NSString*;NSError**):instancetype _Nullable">
				<signature>AVAudioPlayer.-initWithContentsOfURL:fileTypeHint:error:(NSURL*;NSString*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:error:" uniqueID="-initWithData:error:(NSData*;NSError**):instancetype _Nullable">
				<signature>AVAudioPlayer.-initWithData:error:(NSData*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:fileTypeHint:error:" uniqueID="-initWithData:fileTypeHint:error:(NSData*;NSString*;NSError**):instancetype _Nullable">
				<signature>AVAudioPlayer.-initWithData:fileTypeHint:error:(NSData*;NSString*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMeteringEnabled" uniqueID="-isMeteringEnabled():BOOL">
				<signature>AVAudioPlayer.-isMeteringEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isPlaying" uniqueID="-isPlaying():BOOL">
				<signature>AVAudioPlayer.-isPlaying():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfChannels" uniqueID="-numberOfChannels():NSUInteger">
				<signature>AVAudioPlayer.-numberOfChannels():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-numberOfLoops" uniqueID="-numberOfLoops():NSInteger">
				<signature>AVAudioPlayer.-numberOfLoops():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pan" uniqueID="-pan():float">
				<signature>AVAudioPlayer.-pan():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pause" uniqueID="-pause():void">
				<signature>AVAudioPlayer.-pause():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-peakPowerForChannel:" uniqueID="-peakPowerForChannel:(NSUInteger):float">
				<signature>AVAudioPlayer.-peakPowerForChannel:(NSUInteger):float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-play" uniqueID="-play():BOOL">
				<signature>AVAudioPlayer.-play():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-playAtTime:" uniqueID="-playAtTime:(NSTimeInterval):BOOL">
				<signature>AVAudioPlayer.-playAtTime:(NSTimeInterval):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareToPlay" uniqueID="-prepareToPlay():BOOL">
				<signature>AVAudioPlayer.-prepareToPlay():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rate" uniqueID="-rate():float">
				<signature>AVAudioPlayer.-rate():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setChannelAssignments:" uniqueID="-setChannelAssignments:(NSArray&lt;NSNumber *&gt;*):void">
				<signature>AVAudioPlayer.-setChannelAssignments:(NSArray&lt;NSNumber *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCurrentTime:" uniqueID="-setCurrentTime:(NSTimeInterval):void">
				<signature>AVAudioPlayer.-setCurrentTime:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDelegate:" uniqueID="-setDelegate:(objc_object&lt;AVAudioPlayerDelegate&gt;*):void">
				<signature>AVAudioPlayer.-setDelegate:(objc_object&lt;AVAudioPlayerDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEnableRate:" uniqueID="-setEnableRate:(BOOL):void">
				<signature>AVAudioPlayer.-setEnableRate:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMeteringEnabled:" uniqueID="-setMeteringEnabled:(BOOL):void">
				<signature>AVAudioPlayer.-setMeteringEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNumberOfLoops:" uniqueID="-setNumberOfLoops:(NSInteger):void">
				<signature>AVAudioPlayer.-setNumberOfLoops:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPan:" uniqueID="-setPan:(float):void">
				<signature>AVAudioPlayer.-setPan:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRate:" uniqueID="-setRate:(float):void">
				<signature>AVAudioPlayer.-setRate:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVolume:" uniqueID="-setVolume:(float):void">
				<signature>AVAudioPlayer.-setVolume:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-settings" uniqueID="-settings():NSDictionary&lt;NSString *,id&gt;*">
				<signature>AVAudioPlayer.-settings():NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stop" uniqueID="-stop():void">
				<signature>AVAudioPlayer.-stop():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateMeters" uniqueID="-updateMeters():void">
				<signature>AVAudioPlayer.-updateMeters():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-url" uniqueID="-url():NSURL*">
				<signature>AVAudioPlayer.-url():NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-volume" uniqueID="-volume():float">
				<signature>AVAudioPlayer.-volume():float</signature>
			</method>
		</class>
		<class name="UIBarButtonItem+UIBarButtonItemGroup" uniqueID="UIBarButtonItem+UIBarButtonItemGroup">
			<method accessibility="Public" methodKind="Member" name="-buttonGroup" uniqueID="-buttonGroup():UIBarButtonItemGroup*">
				<signature>UIBarButtonItem+UIBarButtonItemGroup.-buttonGroup():UIBarButtonItemGroup*</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSExtendedAttributedString" uniqueID="NSAttributedString+NSExtendedAttributedString">
			<method accessibility="Public" methodKind="Member" name="-attribute:atIndex:effectiveRange:" uniqueID="-attribute:atIndex:effectiveRange:(NSString*;NSUInteger;NSRange*):id _Nullable">
				<signature>NSAttributedString+NSExtendedAttributedString.-attribute:atIndex:effectiveRange:(NSString*;NSUInteger;NSRange*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attribute:atIndex:longestEffectiveRange:inRange:" uniqueID="-attribute:atIndex:longestEffectiveRange:inRange:(NSString*;NSUInteger;NSRange*;NSRange):id _Nullable">
				<signature>NSAttributedString+NSExtendedAttributedString.-attribute:atIndex:longestEffectiveRange:inRange:(NSString*;NSUInteger;NSRange*;NSRange):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributedSubstringFromRange:" uniqueID="-attributedSubstringFromRange:(NSRange):NSAttributedString*">
				<signature>NSAttributedString+NSExtendedAttributedString.-attributedSubstringFromRange:(NSRange):NSAttributedString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attributesAtIndex:longestEffectiveRange:inRange:" uniqueID="-attributesAtIndex:longestEffectiveRange:inRange:(NSUInteger;NSRange*;NSRange):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSAttributedString+NSExtendedAttributedString.-attributesAtIndex:longestEffectiveRange:inRange:(NSUInteger;NSRange*;NSRange):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateAttribute:inRange:options:usingBlock:" uniqueID="-enumerateAttribute:inRange:options:usingBlock:(NSString*;NSRange;NSAttributedStringEnumerationOptions;(^)(id _Nullable;NSRange;BOOL*):void):void">
				<signature>NSAttributedString+NSExtendedAttributedString.-enumerateAttribute:inRange:options:usingBlock:(NSString*;NSRange;NSAttributedStringEnumerationOptions;(^)(id _Nullable;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateAttributesInRange:options:usingBlock:" uniqueID="-enumerateAttributesInRange:options:usingBlock:(NSRange;NSAttributedStringEnumerationOptions;(^)(NSDictionary&lt;NSString *,id&gt;*;NSRange;BOOL*):void):void">
				<signature>NSAttributedString+NSExtendedAttributedString.-enumerateAttributesInRange:options:usingBlock:(NSRange;NSAttributedStringEnumerationOptions;(^)(NSDictionary&lt;NSString *,id&gt;*;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithAttributedString:" uniqueID="-initWithAttributedString:(NSAttributedString*):instancetype _Nonnull">
				<signature>NSAttributedString+NSExtendedAttributedString.-initWithAttributedString:(NSAttributedString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:" uniqueID="-initWithString:(NSString*):instancetype _Nonnull">
				<signature>NSAttributedString+NSExtendedAttributedString.-initWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:attributes:" uniqueID="-initWithString:attributes:(NSString*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull">
				<signature>NSAttributedString+NSExtendedAttributedString.-initWithString:attributes:(NSString*;NSDictionary&lt;NSString *,id&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToAttributedString:" uniqueID="-isEqualToAttributedString:(NSAttributedString*):BOOL">
				<signature>NSAttributedString+NSExtendedAttributedString.-isEqualToAttributedString:(NSAttributedString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>NSAttributedString+NSExtendedAttributedString.-length():NSUInteger</signature>
			</method>
		</class>
		<class name="UIFont" uniqueID="UIFont">
			<method accessibility="Public" methodKind="Member" name="-ascender" uniqueID="-ascender():CGFloat">
				<signature>UIFont.-ascender():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-capHeight" uniqueID="-capHeight():CGFloat">
				<signature>UIFont.-capHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-descender" uniqueID="-descender():CGFloat">
				<signature>UIFont.-descender():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-familyName" uniqueID="-familyName():NSString*">
				<signature>UIFont.-familyName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fontDescriptor" uniqueID="-fontDescriptor():UIFontDescriptor*">
				<signature>UIFont.-fontDescriptor():UIFontDescriptor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fontName" uniqueID="-fontName():NSString*">
				<signature>UIFont.-fontName():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fontWithSize:" uniqueID="-fontWithSize:(CGFloat):UIFont*">
				<signature>UIFont.-fontWithSize:(CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-leading" uniqueID="-leading():CGFloat">
				<signature>UIFont.-leading():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineHeight" uniqueID="-lineHeight():CGFloat">
				<signature>UIFont.-lineHeight():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pointSize" uniqueID="-pointSize():CGFloat">
				<signature>UIFont.-pointSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-xHeight" uniqueID="-xHeight():CGFloat">
				<signature>UIFont.-xHeight():CGFloat</signature>
			</method>
		</class>
		<class name="JSValue" uniqueID="JSValue">
			<method accessibility="Public" methodKind="Member" name="-JSValueRef" uniqueID="-JSValueRef():JSValueRef">
				<signature>JSValue.-JSValueRef():JSValueRef</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-callWithArguments:" uniqueID="-callWithArguments:(NSArray*):JSValue*">
				<signature>JSValue.-callWithArguments:(NSArray*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-constructWithArguments:" uniqueID="-constructWithArguments:(NSArray*):JSValue*">
				<signature>JSValue.-constructWithArguments:(NSArray*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-context" uniqueID="-context():JSContext*">
				<signature>JSValue.-context():JSContext*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-defineProperty:descriptor:" uniqueID="-defineProperty:descriptor:(NSString*;id):void">
				<signature>JSValue.-defineProperty:descriptor:(NSString*;id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-deleteProperty:" uniqueID="-deleteProperty:(NSString*):BOOL">
				<signature>JSValue.-deleteProperty:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasProperty:" uniqueID="-hasProperty:(NSString*):BOOL">
				<signature>JSValue.-hasProperty:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-invokeMethod:withArguments:" uniqueID="-invokeMethod:withArguments:(NSString*;NSArray*):JSValue*">
				<signature>JSValue.-invokeMethod:withArguments:(NSString*;NSArray*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isArray" uniqueID="-isArray():BOOL">
				<signature>JSValue.-isArray():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isBoolean" uniqueID="-isBoolean():BOOL">
				<signature>JSValue.-isBoolean():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isDate" uniqueID="-isDate():BOOL">
				<signature>JSValue.-isDate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToObject:" uniqueID="-isEqualToObject:(id):BOOL">
				<signature>JSValue.-isEqualToObject:(id):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualWithTypeCoercionToObject:" uniqueID="-isEqualWithTypeCoercionToObject:(id):BOOL">
				<signature>JSValue.-isEqualWithTypeCoercionToObject:(id):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInstanceOf:" uniqueID="-isInstanceOf:(id):BOOL">
				<signature>JSValue.-isInstanceOf:(id):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isNull" uniqueID="-isNull():BOOL">
				<signature>JSValue.-isNull():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isNumber" uniqueID="-isNumber():BOOL">
				<signature>JSValue.-isNumber():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isObject" uniqueID="-isObject():BOOL">
				<signature>JSValue.-isObject():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isString" uniqueID="-isString():BOOL">
				<signature>JSValue.-isString():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isUndefined" uniqueID="-isUndefined():BOOL">
				<signature>JSValue.-isUndefined():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectAtIndexedSubscript:" uniqueID="-objectAtIndexedSubscript:(NSUInteger):JSValue*">
				<signature>JSValue.-objectAtIndexedSubscript:(NSUInteger):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKeyedSubscript:" uniqueID="-objectForKeyedSubscript:(id):JSValue*">
				<signature>JSValue.-objectForKeyedSubscript:(id):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:atIndexedSubscript:" uniqueID="-setObject:atIndexedSubscript:(id;NSUInteger):void">
				<signature>JSValue.-setObject:atIndexedSubscript:(id;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObject:forKeyedSubscript:" uniqueID="-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void">
				<signature>JSValue.-setObject:forKeyedSubscript:(id;NSObject&lt;NSCopying&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:atIndex:" uniqueID="-setValue:atIndex:(id;NSUInteger):void">
				<signature>JSValue.-setValue:atIndex:(id;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forProperty:" uniqueID="-setValue:forProperty:(id;NSString*):void">
				<signature>JSValue.-setValue:forProperty:(id;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toArray" uniqueID="-toArray():NSArray*">
				<signature>JSValue.-toArray():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toBool" uniqueID="-toBool():BOOL">
				<signature>JSValue.-toBool():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toDate" uniqueID="-toDate():NSDate*">
				<signature>JSValue.-toDate():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toDictionary" uniqueID="-toDictionary():NSDictionary*">
				<signature>JSValue.-toDictionary():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toDouble" uniqueID="-toDouble():double">
				<signature>JSValue.-toDouble():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toInt32" uniqueID="-toInt32():int32_t">
				<signature>JSValue.-toInt32():int32_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toNumber" uniqueID="-toNumber():NSNumber*">
				<signature>JSValue.-toNumber():NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toObject" uniqueID="-toObject():id">
				<signature>JSValue.-toObject():id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toObjectOfClass:" uniqueID="-toObjectOfClass:(Class*):id">
				<signature>JSValue.-toObjectOfClass:(Class*):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toPoint" uniqueID="-toPoint():CGPoint">
				<signature>JSValue.-toPoint():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toRange" uniqueID="-toRange():NSRange">
				<signature>JSValue.-toRange():NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toRect" uniqueID="-toRect():CGRect">
				<signature>JSValue.-toRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toSize" uniqueID="-toSize():CGSize">
				<signature>JSValue.-toSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toString" uniqueID="-toString():NSString*">
				<signature>JSValue.-toString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toUInt32" uniqueID="-toUInt32():uint32_t">
				<signature>JSValue.-toUInt32():uint32_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueAtIndex:" uniqueID="-valueAtIndex:(NSUInteger):JSValue*">
				<signature>JSValue.-valueAtIndex:(NSUInteger):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForProperty:" uniqueID="-valueForProperty:(NSString*):JSValue*">
				<signature>JSValue.-valueForProperty:(NSString*):JSValue*</signature>
			</method>
		</class>
		<class name="NSObject" uniqueID="NSObject">
			<method accessibility="Public" methodKind="Member" name="-accessibilityActivate" uniqueID="-accessibilityActivate():BOOL">
				<signature>NSObject.-accessibilityActivate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityActivationPoint" uniqueID="-accessibilityActivationPoint():CGPoint">
				<signature>NSObject.-accessibilityActivationPoint():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityAssistiveTechnologyFocusedIdentifiers" uniqueID="-accessibilityAssistiveTechnologyFocusedIdentifiers():NSSet&lt;NSString *&gt;*">
				<signature>NSObject.-accessibilityAssistiveTechnologyFocusedIdentifiers():NSSet&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityCustomActions" uniqueID="-accessibilityCustomActions():NSArray&lt;UIAccessibilityCustomAction *&gt;*">
				<signature>NSObject.-accessibilityCustomActions():NSArray&lt;UIAccessibilityCustomAction *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityDecrement" uniqueID="-accessibilityDecrement():void">
				<signature>NSObject.-accessibilityDecrement():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementAtIndex:" uniqueID="-accessibilityElementAtIndex:(NSInteger):id _Nullable">
				<signature>NSObject.-accessibilityElementAtIndex:(NSInteger):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementCount" uniqueID="-accessibilityElementCount():NSInteger">
				<signature>NSObject.-accessibilityElementCount():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementDidBecomeFocused" uniqueID="-accessibilityElementDidBecomeFocused():void">
				<signature>NSObject.-accessibilityElementDidBecomeFocused():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementDidLoseFocus" uniqueID="-accessibilityElementDidLoseFocus():void">
				<signature>NSObject.-accessibilityElementDidLoseFocus():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementIsFocused" uniqueID="-accessibilityElementIsFocused():BOOL">
				<signature>NSObject.-accessibilityElementIsFocused():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElements" uniqueID="-accessibilityElements():NSArray*">
				<signature>NSObject.-accessibilityElements():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementsHidden" uniqueID="-accessibilityElementsHidden():BOOL">
				<signature>NSObject.-accessibilityElementsHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityFrame" uniqueID="-accessibilityFrame():CGRect">
				<signature>NSObject.-accessibilityFrame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityHeaderElements" uniqueID="-accessibilityHeaderElements():NSArray*">
				<signature>NSObject.-accessibilityHeaderElements():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityHint" uniqueID="-accessibilityHint():NSString*">
				<signature>NSObject.-accessibilityHint():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityIncrement" uniqueID="-accessibilityIncrement():void">
				<signature>NSObject.-accessibilityIncrement():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityLabel" uniqueID="-accessibilityLabel():NSString*">
				<signature>NSObject.-accessibilityLabel():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityLanguage" uniqueID="-accessibilityLanguage():NSString*">
				<signature>NSObject.-accessibilityLanguage():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityNavigationStyle" uniqueID="-accessibilityNavigationStyle():UIAccessibilityNavigationStyle">
				<signature>NSObject.-accessibilityNavigationStyle():UIAccessibilityNavigationStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityPath" uniqueID="-accessibilityPath():UIBezierPath*">
				<signature>NSObject.-accessibilityPath():UIBezierPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityPerformEscape" uniqueID="-accessibilityPerformEscape():BOOL">
				<signature>NSObject.-accessibilityPerformEscape():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityPerformMagicTap" uniqueID="-accessibilityPerformMagicTap():BOOL">
				<signature>NSObject.-accessibilityPerformMagicTap():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityScroll:" uniqueID="-accessibilityScroll:(UIAccessibilityScrollDirection):BOOL">
				<signature>NSObject.-accessibilityScroll:(UIAccessibilityScrollDirection):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityTraits" uniqueID="-accessibilityTraits():UIAccessibilityTraits">
				<signature>NSObject.-accessibilityTraits():UIAccessibilityTraits</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityValue" uniqueID="-accessibilityValue():NSString*">
				<signature>NSObject.-accessibilityValue():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityViewIsModal" uniqueID="-accessibilityViewIsModal():BOOL">
				<signature>NSObject.-accessibilityViewIsModal():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-actionForLayer:forKey:" uniqueID="-actionForLayer:forKey:(CALayer*;NSString*):objc_object&lt;CAAction&gt;*">
				<signature>NSObject.-actionForLayer:forKey:(CALayer*;NSString*):objc_object&lt;CAAction&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addObserver:forKeyPath:options:context:" uniqueID="-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSObject.-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-allowsWeakReference" uniqueID="-allowsWeakReference():BOOL">
				<signature>NSObject.-allowsWeakReference():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationDidStart:" uniqueID="-animationDidStart:(CAAnimation*):void">
				<signature>NSObject.-animationDidStart:(CAAnimation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationDidStop:finished:" uniqueID="-animationDidStop:finished:(CAAnimation*;BOOL):void">
				<signature>NSObject.-animationDidStop:finished:(CAAnimation*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attemptRecoveryFromError:optionIndex:" uniqueID="-attemptRecoveryFromError:optionIndex:(NSError*;NSUInteger):BOOL">
				<signature>NSObject.-attemptRecoveryFromError:optionIndex:(NSError*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:" uniqueID="-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:(NSError*;NSUInteger;id _Nullable;SEL _Nullable;void*):void">
				<signature>NSObject.-attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:(NSError*;NSUInteger;id _Nullable;SEL _Nullable;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-autoContentAccessingProxy" uniqueID="-autoContentAccessingProxy():id _Nonnull">
				<signature>NSObject.-autoContentAccessingProxy():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-awakeAfterUsingCoder:" uniqueID="-awakeAfterUsingCoder:(NSCoder*):id _Nullable">
				<signature>NSObject.-awakeAfterUsingCoder:(NSCoder*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-awakeFromNib" uniqueID="-awakeFromNib():void">
				<signature>NSObject.-awakeFromNib():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-classForCoder" uniqueID="-classForCoder():Class*">
				<signature>NSObject.-classForCoder():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-classForKeyedArchiver" uniqueID="-classForKeyedArchiver():Class*">
				<signature>NSObject.-classForKeyedArchiver():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copy" uniqueID="-copy():id">
				<signature>NSObject.-copy():id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copy:" uniqueID="-copy:(id _Nullable):void">
				<signature>NSObject.-copy:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cut:" uniqueID="-cut:(id _Nullable):void">
				<signature>NSObject.-cut:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dealloc" uniqueID="-dealloc():void">
				<signature>NSObject.-dealloc():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decreaseSize:" uniqueID="-decreaseSize:(id _Nullable):void">
				<signature>NSObject.-decreaseSize:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delete:" uniqueID="-delete:(id _Nullable):void">
				<signature>NSObject.-delete:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dictionaryWithValuesForKeys:" uniqueID="-dictionaryWithValuesForKeys:(NSArray&lt;NSString *&gt;*):NSDictionary&lt;NSString *,id&gt;*">
				<signature>NSObject.-dictionaryWithValuesForKeys:(NSArray&lt;NSString *&gt;*):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didChange:valuesAtIndexes:forKey:" uniqueID="-didChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void">
				<signature>NSObject.-didChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didChangeValueForKey:" uniqueID="-didChangeValueForKey:(NSString*):void">
				<signature>NSObject.-didChangeValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didChangeValueForKey:withSetMutation:usingObjects:" uniqueID="-didChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void">
				<signature>NSObject.-didChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-displayLayer:" uniqueID="-displayLayer:(CALayer*):void">
				<signature>NSObject.-displayLayer:(CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-doesNotRecognizeSelector:" uniqueID="-doesNotRecognizeSelector:(SEL):void">
				<signature>NSObject.-doesNotRecognizeSelector:(SEL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawLayer:inContext:" uniqueID="-drawLayer:inContext:(CALayer*;struct CGContext*):void">
				<signature>NSObject.-drawLayer:inContext:(CALayer*;struct CGContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:" uniqueID="-fileManager:shouldProceedAfterError:(NSFileManager*;NSDictionary*):BOOL">
				<signature>NSObject.-fileManager:shouldProceedAfterError:(NSFileManager*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:willProcessPath:" uniqueID="-fileManager:willProcessPath:(NSFileManager*;NSString*):void">
				<signature>NSObject.-fileManager:willProcessPath:(NSFileManager*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-finalize" uniqueID="-finalize():void">
				<signature>NSObject.-finalize():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-forwardInvocation:" uniqueID="-forwardInvocation:(NSInvocation*):void">
				<signature>NSObject.-forwardInvocation:(NSInvocation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-forwardingTargetForSelector:" uniqueID="-forwardingTargetForSelector:(SEL):id">
				<signature>NSObject.-forwardingTargetForSelector:(SEL):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-increaseSize:" uniqueID="-increaseSize:(id _Nullable):void">
				<signature>NSObject.-increaseSize:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfAccessibilityElement:" uniqueID="-indexOfAccessibilityElement:(id _Nonnull):NSInteger">
				<signature>NSObject.-indexOfAccessibilityElement:(id _Nonnull):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype">
				<signature>NSObject.-init():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAccessibilityElement" uniqueID="-isAccessibilityElement():BOOL">
				<signature>NSObject.-isAccessibilityElement():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutSublayersOfLayer:" uniqueID="-layoutSublayersOfLayer:(CALayer*):void">
				<signature>NSObject.-layoutSublayersOfLayer:(CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeTextWritingDirectionLeftToRight:" uniqueID="-makeTextWritingDirectionLeftToRight:(id _Nullable):void">
				<signature>NSObject.-makeTextWritingDirectionLeftToRight:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeTextWritingDirectionRightToLeft:" uniqueID="-makeTextWritingDirectionRightToLeft:(id _Nullable):void">
				<signature>NSObject.-makeTextWritingDirectionRightToLeft:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-methodForSelector:" uniqueID="-methodForSelector:(SEL):IMP">
				<signature>NSObject.-methodForSelector:(SEL):IMP</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-methodSignatureForSelector:" uniqueID="-methodSignatureForSelector:(SEL):NSMethodSignature*">
				<signature>NSObject.-methodSignatureForSelector:(SEL):NSMethodSignature*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableArrayValueForKey:" uniqueID="-mutableArrayValueForKey:(NSString*):NSMutableArray*">
				<signature>NSObject.-mutableArrayValueForKey:(NSString*):NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableArrayValueForKeyPath:" uniqueID="-mutableArrayValueForKeyPath:(NSString*):NSMutableArray*">
				<signature>NSObject.-mutableArrayValueForKeyPath:(NSString*):NSMutableArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableCopy" uniqueID="-mutableCopy():id">
				<signature>NSObject.-mutableCopy():id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableOrderedSetValueForKey:" uniqueID="-mutableOrderedSetValueForKey:(NSString*):NSMutableOrderedSet*">
				<signature>NSObject.-mutableOrderedSetValueForKey:(NSString*):NSMutableOrderedSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableOrderedSetValueForKeyPath:" uniqueID="-mutableOrderedSetValueForKeyPath:(NSString*):NSMutableOrderedSet*">
				<signature>NSObject.-mutableOrderedSetValueForKeyPath:(NSString*):NSMutableOrderedSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableSetValueForKey:" uniqueID="-mutableSetValueForKey:(NSString*):NSMutableSet*">
				<signature>NSObject.-mutableSetValueForKey:(NSString*):NSMutableSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mutableSetValueForKeyPath:" uniqueID="-mutableSetValueForKeyPath:(NSString*):NSMutableSet*">
				<signature>NSObject.-mutableSetValueForKeyPath:(NSString*):NSMutableSet*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-observationInfo" uniqueID="-observationInfo():void*">
				<signature>NSObject.-observationInfo():void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-observeValueForKeyPath:ofObject:change:context:" uniqueID="-observeValueForKeyPath:ofObject:change:context:(NSString*;id _Nullable;NSDictionary&lt;NSString *,id&gt;*;void*):void">
				<signature>NSObject.-observeValueForKeyPath:ofObject:change:context:(NSString*;id _Nullable;NSDictionary&lt;NSString *,id&gt;*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-paste:" uniqueID="-paste:(id _Nullable):void">
				<signature>NSObject.-paste:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:onThread:withObject:waitUntilDone:" uniqueID="-performSelector:onThread:withObject:waitUntilDone:(SEL _Nonnull;NSThread*;id _Nullable;BOOL):void">
				<signature>NSObject.-performSelector:onThread:withObject:waitUntilDone:(SEL _Nonnull;NSThread*;id _Nullable;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:onThread:withObject:waitUntilDone:modes:" uniqueID="-performSelector:onThread:withObject:waitUntilDone:modes:(SEL _Nonnull;NSThread*;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void">
				<signature>NSObject.-performSelector:onThread:withObject:waitUntilDone:modes:(SEL _Nonnull;NSThread*;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:withObject:afterDelay:" uniqueID="-performSelector:withObject:afterDelay:(SEL _Nonnull;id _Nullable;NSTimeInterval):void">
				<signature>NSObject.-performSelector:withObject:afterDelay:(SEL _Nonnull;id _Nullable;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:withObject:afterDelay:inModes:" uniqueID="-performSelector:withObject:afterDelay:inModes:(SEL _Nonnull;id _Nullable;NSTimeInterval;NSArray&lt;NSString *&gt;*):void">
				<signature>NSObject.-performSelector:withObject:afterDelay:inModes:(SEL _Nonnull;id _Nullable;NSTimeInterval;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelectorInBackground:withObject:" uniqueID="-performSelectorInBackground:withObject:(SEL _Nonnull;id _Nullable):void">
				<signature>NSObject.-performSelectorInBackground:withObject:(SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelectorOnMainThread:withObject:waitUntilDone:" uniqueID="-performSelectorOnMainThread:withObject:waitUntilDone:(SEL _Nonnull;id _Nullable;BOOL):void">
				<signature>NSObject.-performSelectorOnMainThread:withObject:waitUntilDone:(SEL _Nonnull;id _Nullable;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelectorOnMainThread:withObject:waitUntilDone:modes:" uniqueID="-performSelectorOnMainThread:withObject:waitUntilDone:modes:(SEL _Nonnull;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void">
				<signature>NSObject.-performSelectorOnMainThread:withObject:waitUntilDone:modes:(SEL _Nonnull;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareForInterfaceBuilder" uniqueID="-prepareForInterfaceBuilder():void">
				<signature>NSObject.-prepareForInterfaceBuilder():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-provideImageData:bytesPerRow:origin::size::userInfo:" uniqueID="-provideImageData:bytesPerRow:origin::size::userInfo:(void*;size_t;size_t;size_t;size_t;size_t;id _Nullable):void">
				<signature>NSObject.-provideImageData:bytesPerRow:origin::size::userInfo:(void*;size_t;size_t;size_t;size_t;size_t;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:" uniqueID="-removeObserver:forKeyPath:(NSObject*;NSString*):void">
				<signature>NSObject.-removeObserver:forKeyPath:(NSObject*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:context:" uniqueID="-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void">
				<signature>NSObject.-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replacementObjectForCoder:" uniqueID="-replacementObjectForCoder:(NSCoder*):id _Nullable">
				<signature>NSObject.-replacementObjectForCoder:(NSCoder*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replacementObjectForKeyedArchiver:" uniqueID="-replacementObjectForKeyedArchiver:(NSKeyedArchiver*):id _Nullable">
				<signature>NSObject.-replacementObjectForKeyedArchiver:(NSKeyedArchiver*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-retainWeakReference" uniqueID="-retainWeakReference():BOOL">
				<signature>NSObject.-retainWeakReference():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-select:" uniqueID="-select:(id _Nullable):void">
				<signature>NSObject.-select:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectAll:" uniqueID="-selectAll:(id _Nullable):void">
				<signature>NSObject.-selectAll:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityActivationPoint:" uniqueID="-setAccessibilityActivationPoint:(CGPoint):void">
				<signature>NSObject.-setAccessibilityActivationPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityCustomActions:" uniqueID="-setAccessibilityCustomActions:(NSArray&lt;UIAccessibilityCustomAction *&gt;*):void">
				<signature>NSObject.-setAccessibilityCustomActions:(NSArray&lt;UIAccessibilityCustomAction *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityElements:" uniqueID="-setAccessibilityElements:(NSArray*):void">
				<signature>NSObject.-setAccessibilityElements:(NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityElementsHidden:" uniqueID="-setAccessibilityElementsHidden:(BOOL):void">
				<signature>NSObject.-setAccessibilityElementsHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityFrame:" uniqueID="-setAccessibilityFrame:(CGRect):void">
				<signature>NSObject.-setAccessibilityFrame:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityHeaderElements:" uniqueID="-setAccessibilityHeaderElements:(NSArray*):void">
				<signature>NSObject.-setAccessibilityHeaderElements:(NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityHint:" uniqueID="-setAccessibilityHint:(NSString*):void">
				<signature>NSObject.-setAccessibilityHint:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityLabel:" uniqueID="-setAccessibilityLabel:(NSString*):void">
				<signature>NSObject.-setAccessibilityLabel:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityLanguage:" uniqueID="-setAccessibilityLanguage:(NSString*):void">
				<signature>NSObject.-setAccessibilityLanguage:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityNavigationStyle:" uniqueID="-setAccessibilityNavigationStyle:(UIAccessibilityNavigationStyle):void">
				<signature>NSObject.-setAccessibilityNavigationStyle:(UIAccessibilityNavigationStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityPath:" uniqueID="-setAccessibilityPath:(UIBezierPath*):void">
				<signature>NSObject.-setAccessibilityPath:(UIBezierPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityTraits:" uniqueID="-setAccessibilityTraits:(UIAccessibilityTraits):void">
				<signature>NSObject.-setAccessibilityTraits:(UIAccessibilityTraits):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityValue:" uniqueID="-setAccessibilityValue:(NSString*):void">
				<signature>NSObject.-setAccessibilityValue:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityViewIsModal:" uniqueID="-setAccessibilityViewIsModal:(BOOL):void">
				<signature>NSObject.-setAccessibilityViewIsModal:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIsAccessibilityElement:" uniqueID="-setIsAccessibilityElement:(BOOL):void">
				<signature>NSObject.-setIsAccessibilityElement:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNilValueForKey:" uniqueID="-setNilValueForKey:(NSString*):void">
				<signature>NSObject.-setNilValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObservationInfo:" uniqueID="-setObservationInfo:(void*):void">
				<signature>NSObject.-setObservationInfo:(void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShouldGroupAccessibilityChildren:" uniqueID="-setShouldGroupAccessibilityChildren:(BOOL):void">
				<signature>NSObject.-setShouldGroupAccessibilityChildren:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKey:" uniqueID="-setValue:forKey:(id _Nullable;NSString*):void">
				<signature>NSObject.-setValue:forKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forKeyPath:" uniqueID="-setValue:forKeyPath:(id _Nullable;NSString*):void">
				<signature>NSObject.-setValue:forKeyPath:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValue:forUndefinedKey:" uniqueID="-setValue:forUndefinedKey:(id _Nullable;NSString*):void">
				<signature>NSObject.-setValue:forUndefinedKey:(id _Nullable;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValuesForKeysWithDictionary:" uniqueID="-setValuesForKeysWithDictionary:(NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSObject.-setValuesForKeysWithDictionary:(NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldGroupAccessibilityChildren" uniqueID="-shouldGroupAccessibilityChildren():BOOL">
				<signature>NSObject.-shouldGroupAccessibilityChildren():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toggleBoldface:" uniqueID="-toggleBoldface:(id _Nullable):void">
				<signature>NSObject.-toggleBoldface:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toggleItalics:" uniqueID="-toggleItalics:(id _Nullable):void">
				<signature>NSObject.-toggleItalics:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toggleUnderline:" uniqueID="-toggleUnderline:(id _Nullable):void">
				<signature>NSObject.-toggleUnderline:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-validateValue:forKey:error:" uniqueID="-validateValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSObject.-validateValue:forKey:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-validateValue:forKeyPath:error:" uniqueID="-validateValue:forKeyPath:error:(id _Nullable*;NSString*;NSError**):BOOL">
				<signature>NSObject.-validateValue:forKeyPath:error:(id _Nullable*;NSString*;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKey:" uniqueID="-valueForKey:(NSString*):id _Nullable">
				<signature>NSObject.-valueForKey:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForKeyPath:" uniqueID="-valueForKeyPath:(NSString*):id _Nullable">
				<signature>NSObject.-valueForKeyPath:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-valueForUndefinedKey:" uniqueID="-valueForUndefinedKey:(NSString*):id _Nullable">
				<signature>NSObject.-valueForUndefinedKey:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willChange:valuesAtIndexes:forKey:" uniqueID="-willChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void">
				<signature>NSObject.-willChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willChangeValueForKey:" uniqueID="-willChangeValueForKey:(NSString*):void">
				<signature>NSObject.-willChangeValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willChangeValueForKey:withSetMutation:usingObjects:" uniqueID="-willChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void">
				<signature>NSObject.-willChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void</signature>
			</method>
		</class>
		<class name="NSObject+NSDelayedPerforming" uniqueID="NSObject+NSDelayedPerforming">
			<method accessibility="Public" methodKind="Member" name="-performSelector:withObject:afterDelay:" uniqueID="-performSelector:withObject:afterDelay:(SEL _Nonnull;id _Nullable;NSTimeInterval):void">
				<signature>NSObject+NSDelayedPerforming.-performSelector:withObject:afterDelay:(SEL _Nonnull;id _Nullable;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:withObject:afterDelay:inModes:" uniqueID="-performSelector:withObject:afterDelay:inModes:(SEL _Nonnull;id _Nullable;NSTimeInterval;NSArray&lt;NSString *&gt;*):void">
				<signature>NSObject+NSDelayedPerforming.-performSelector:withObject:afterDelay:inModes:(SEL _Nonnull;id _Nullable;NSTimeInterval;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
		</class>
		<class name="UIViewController+UISearchDisplayControllerSupport" uniqueID="UIViewController+UISearchDisplayControllerSupport">
			<method accessibility="Public" methodKind="Member" name="-searchDisplayController" uniqueID="-searchDisplayController():UISearchDisplayController*">
				<signature>UIViewController+UISearchDisplayControllerSupport.-searchDisplayController():UISearchDisplayController*</signature>
			</method>
		</class>
		<class name="NSObject+UIResponderStandardEditActions" uniqueID="NSObject+UIResponderStandardEditActions">
			<method accessibility="Public" methodKind="Member" name="-copy:" uniqueID="-copy:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-copy:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cut:" uniqueID="-cut:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-cut:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decreaseSize:" uniqueID="-decreaseSize:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-decreaseSize:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-delete:" uniqueID="-delete:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-delete:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-increaseSize:" uniqueID="-increaseSize:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-increaseSize:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeTextWritingDirectionLeftToRight:" uniqueID="-makeTextWritingDirectionLeftToRight:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-makeTextWritingDirectionLeftToRight:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-makeTextWritingDirectionRightToLeft:" uniqueID="-makeTextWritingDirectionRightToLeft:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-makeTextWritingDirectionRightToLeft:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-paste:" uniqueID="-paste:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-paste:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-select:" uniqueID="-select:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-select:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectAll:" uniqueID="-selectAll:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-selectAll:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toggleBoldface:" uniqueID="-toggleBoldface:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-toggleBoldface:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toggleItalics:" uniqueID="-toggleItalics:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-toggleItalics:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-toggleUnderline:" uniqueID="-toggleUnderline:(id _Nullable):void">
				<signature>NSObject+UIResponderStandardEditActions.-toggleUnderline:(id _Nullable):void</signature>
			</method>
		</class>
		<class name="NSObject+UINibLoadingAdditions" uniqueID="NSObject+UINibLoadingAdditions">
			<method accessibility="Public" methodKind="Member" name="-awakeFromNib" uniqueID="-awakeFromNib():void">
				<signature>NSObject+UINibLoadingAdditions.-awakeFromNib():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-prepareForInterfaceBuilder" uniqueID="-prepareForInterfaceBuilder():void">
				<signature>NSObject+UINibLoadingAdditions.-prepareForInterfaceBuilder():void</signature>
			</method>
		</class>
		<class name="UIView+UIViewRendering" uniqueID="UIView+UIViewRendering">
			<method accessibility="Public" methodKind="Member" name="-alpha" uniqueID="-alpha():CGFloat">
				<signature>UIView+UIViewRendering.-alpha():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-backgroundColor" uniqueID="-backgroundColor():UIColor*">
				<signature>UIView+UIViewRendering.-backgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clearsContextBeforeDrawing" uniqueID="-clearsContextBeforeDrawing():BOOL">
				<signature>UIView+UIViewRendering.-clearsContextBeforeDrawing():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-clipsToBounds" uniqueID="-clipsToBounds():BOOL">
				<signature>UIView+UIViewRendering.-clipsToBounds():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentMode" uniqueID="-contentMode():UIViewContentMode">
				<signature>UIView+UIViewRendering.-contentMode():UIViewContentMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-contentStretch" uniqueID="-contentStretch():CGRect">
				<signature>UIView+UIViewRendering.-contentStretch():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawRect:" uniqueID="-drawRect:(CGRect):void">
				<signature>UIView+UIViewRendering.-drawRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHidden" uniqueID="-isHidden():BOOL">
				<signature>UIView+UIViewRendering.-isHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isOpaque" uniqueID="-isOpaque():BOOL">
				<signature>UIView+UIViewRendering.-isOpaque():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maskView" uniqueID="-maskView():UIView*">
				<signature>UIView+UIViewRendering.-maskView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAlpha:" uniqueID="-setAlpha:(CGFloat):void">
				<signature>UIView+UIViewRendering.-setAlpha:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBackgroundColor:" uniqueID="-setBackgroundColor:(UIColor*):void">
				<signature>UIView+UIViewRendering.-setBackgroundColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearsContextBeforeDrawing:" uniqueID="-setClearsContextBeforeDrawing:(BOOL):void">
				<signature>UIView+UIViewRendering.-setClearsContextBeforeDrawing:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClipsToBounds:" uniqueID="-setClipsToBounds:(BOOL):void">
				<signature>UIView+UIViewRendering.-setClipsToBounds:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentMode:" uniqueID="-setContentMode:(UIViewContentMode):void">
				<signature>UIView+UIViewRendering.-setContentMode:(UIViewContentMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setContentStretch:" uniqueID="-setContentStretch:(CGRect):void">
				<signature>UIView+UIViewRendering.-setContentStretch:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setHidden:" uniqueID="-setHidden:(BOOL):void">
				<signature>UIView+UIViewRendering.-setHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaskView:" uniqueID="-setMaskView:(UIView*):void">
				<signature>UIView+UIViewRendering.-setMaskView:(UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplay" uniqueID="-setNeedsDisplay():void">
				<signature>UIView+UIViewRendering.-setNeedsDisplay():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsDisplayInRect:" uniqueID="-setNeedsDisplayInRect:(CGRect):void">
				<signature>UIView+UIViewRendering.-setNeedsDisplayInRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setOpaque:" uniqueID="-setOpaque:(BOOL):void">
				<signature>UIView+UIViewRendering.-setOpaque:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintAdjustmentMode:" uniqueID="-setTintAdjustmentMode:(UIViewTintAdjustmentMode):void">
				<signature>UIView+UIViewRendering.-setTintAdjustmentMode:(UIViewTintAdjustmentMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTintColor:" uniqueID="-setTintColor:(UIColor*):void">
				<signature>UIView+UIViewRendering.-setTintColor:(UIColor*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintAdjustmentMode" uniqueID="-tintAdjustmentMode():UIViewTintAdjustmentMode">
				<signature>UIView+UIViewRendering.-tintAdjustmentMode():UIViewTintAdjustmentMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColor" uniqueID="-tintColor():UIColor*">
				<signature>UIView+UIViewRendering.-tintColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tintColorDidChange" uniqueID="-tintColorDidChange():void">
				<signature>UIView+UIViewRendering.-tintColorDidChange():void</signature>
			</method>
		</class>
		<class name="AddAgendaItemViewController" uniqueID="AddAgendaItemViewController">
			<method accessibility="Public" methodKind="Member" name="-didReceiveMemoryWarning" uniqueID="-didReceiveMemoryWarning():void">
				<signature>AddAgendaItemViewController.-didReceiveMemoryWarning():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enableSaveButtom:" uniqueID="-enableSaveButtom:(id):void">
				<signature>AddAgendaItemViewController.-enableSaveButtom:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-eventTextField" uniqueID="-eventTextField():UITextField*">
				<signature>AddAgendaItemViewController.-eventTextField():UITextField*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newdict" uniqueID="-newdict():NSMutableDictionary*">
				<signature>AddAgendaItemViewController.-newdict():NSMutableDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveButton" uniqueID="-saveButton():UIBarButtonItem*">
				<signature>AddAgendaItemViewController.-saveButton():UIBarButtonItem*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-saveButtonClicked:" uniqueID="-saveButtonClicked:(id):void">
				<signature>AddAgendaItemViewController.-saveButtonClicked:(id):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEventTextField:" uniqueID="-setEventTextField:(UITextField*):void">
				<signature>AddAgendaItemViewController.-setEventTextField:(UITextField*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNewdict:" uniqueID="-setNewdict:(NSMutableDictionary*):void">
				<signature>AddAgendaItemViewController.-setNewdict:(NSMutableDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSaveButton:" uniqueID="-setSaveButton:(UIBarButtonItem*):void">
				<signature>AddAgendaItemViewController.-setSaveButton:(UIBarButtonItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimePicker:" uniqueID="-setTimePicker:(UIDatePicker*):void">
				<signature>AddAgendaItemViewController.-setTimePicker:(UIDatePicker*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setValues" uniqueID="-setValues():void">
				<signature>AddAgendaItemViewController.-setValues():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldShouldReturn:" uniqueID="-textFieldShouldReturn:(UITextField*):BOOL">
				<signature>AddAgendaItemViewController.-textFieldShouldReturn:(UITextField*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timePicker" uniqueID="-timePicker():UIDatePicker*">
				<signature>AddAgendaItemViewController.-timePicker():UIDatePicker*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewDidLoad" uniqueID="-viewDidLoad():void">
				<signature>AddAgendaItemViewController.-viewDidLoad():void</signature>
			</method>
		</class>
		<class name="UIViewController+UIStateRestoration" uniqueID="UIViewController+UIStateRestoration">
			<method accessibility="Public" methodKind="Member" name="-applicationFinishedRestoringState" uniqueID="-applicationFinishedRestoringState():void">
				<signature>UIViewController+UIStateRestoration.-applicationFinishedRestoringState():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decodeRestorableStateWithCoder:" uniqueID="-decodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIViewController+UIStateRestoration.-decodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-encodeRestorableStateWithCoder:" uniqueID="-encodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>UIViewController+UIStateRestoration.-encodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationClass" uniqueID="-restorationClass():objc_class&lt;UIViewControllerRestoration&gt;*">
				<signature>UIViewController+UIStateRestoration.-restorationClass():objc_class&lt;UIViewControllerRestoration&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationIdentifier" uniqueID="-restorationIdentifier():NSString*">
				<signature>UIViewController+UIStateRestoration.-restorationIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRestorationClass:" uniqueID="-setRestorationClass:(objc_class&lt;UIViewControllerRestoration&gt;*):void">
				<signature>UIViewController+UIStateRestoration.-setRestorationClass:(objc_class&lt;UIViewControllerRestoration&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRestorationIdentifier:" uniqueID="-setRestorationIdentifier:(NSString*):void">
				<signature>UIViewController+UIStateRestoration.-setRestorationIdentifier:(NSString*):void</signature>
			</method>
		</class>
		<class name="NSError" uniqueID="NSError">
			<method accessibility="Public" methodKind="Member" name="-code" uniqueID="-code():NSInteger">
				<signature>NSError.-code():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-domain" uniqueID="-domain():NSString*">
				<signature>NSError.-domain():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-helpAnchor" uniqueID="-helpAnchor():NSString*">
				<signature>NSError.-helpAnchor():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithDomain:code:userInfo:" uniqueID="-initWithDomain:code:userInfo:(NSString*;NSInteger;NSDictionary*):instancetype _Nonnull">
				<signature>NSError.-initWithDomain:code:userInfo:(NSString*;NSInteger;NSDictionary*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedDescription" uniqueID="-localizedDescription():NSString*">
				<signature>NSError.-localizedDescription():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedFailureReason" uniqueID="-localizedFailureReason():NSString*">
				<signature>NSError.-localizedFailureReason():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedRecoveryOptions" uniqueID="-localizedRecoveryOptions():NSArray&lt;NSString *&gt;*">
				<signature>NSError.-localizedRecoveryOptions():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedRecoverySuggestion" uniqueID="-localizedRecoverySuggestion():NSString*">
				<signature>NSError.-localizedRecoverySuggestion():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-recoveryAttempter" uniqueID="-recoveryAttempter():id _Nullable">
				<signature>NSError.-recoveryAttempter():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-userInfo" uniqueID="-userInfo():NSDictionary*">
				<signature>NSError.-userInfo():NSDictionary*</signature>
			</method>
		</class>
		<class name="NSObject+UIAccessibilityContainer" uniqueID="NSObject+UIAccessibilityContainer">
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementAtIndex:" uniqueID="-accessibilityElementAtIndex:(NSInteger):id _Nullable">
				<signature>NSObject+UIAccessibilityContainer.-accessibilityElementAtIndex:(NSInteger):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementCount" uniqueID="-accessibilityElementCount():NSInteger">
				<signature>NSObject+UIAccessibilityContainer.-accessibilityElementCount():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElements" uniqueID="-accessibilityElements():NSArray*">
				<signature>NSObject+UIAccessibilityContainer.-accessibilityElements():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-indexOfAccessibilityElement:" uniqueID="-indexOfAccessibilityElement:(id _Nonnull):NSInteger">
				<signature>NSObject+UIAccessibilityContainer.-indexOfAccessibilityElement:(id _Nonnull):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityElements:" uniqueID="-setAccessibilityElements:(NSArray*):void">
				<signature>NSObject+UIAccessibilityContainer.-setAccessibilityElements:(NSArray*):void</signature>
			</method>
		</class>
		<class name="NSObject+UIAccessibilityAction" uniqueID="NSObject+UIAccessibilityAction">
			<method accessibility="Public" methodKind="Member" name="-accessibilityActivate" uniqueID="-accessibilityActivate():BOOL">
				<signature>NSObject+UIAccessibilityAction.-accessibilityActivate():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityCustomActions" uniqueID="-accessibilityCustomActions():NSArray&lt;UIAccessibilityCustomAction *&gt;*">
				<signature>NSObject+UIAccessibilityAction.-accessibilityCustomActions():NSArray&lt;UIAccessibilityCustomAction *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityDecrement" uniqueID="-accessibilityDecrement():void">
				<signature>NSObject+UIAccessibilityAction.-accessibilityDecrement():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityIncrement" uniqueID="-accessibilityIncrement():void">
				<signature>NSObject+UIAccessibilityAction.-accessibilityIncrement():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityPerformEscape" uniqueID="-accessibilityPerformEscape():BOOL">
				<signature>NSObject+UIAccessibilityAction.-accessibilityPerformEscape():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityPerformMagicTap" uniqueID="-accessibilityPerformMagicTap():BOOL">
				<signature>NSObject+UIAccessibilityAction.-accessibilityPerformMagicTap():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityScroll:" uniqueID="-accessibilityScroll:(UIAccessibilityScrollDirection):BOOL">
				<signature>NSObject+UIAccessibilityAction.-accessibilityScroll:(UIAccessibilityScrollDirection):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityCustomActions:" uniqueID="-setAccessibilityCustomActions:(NSArray&lt;UIAccessibilityCustomAction *&gt;*):void">
				<signature>NSObject+UIAccessibilityAction.-setAccessibilityCustomActions:(NSArray&lt;UIAccessibilityCustomAction *&gt;*):void</signature>
			</method>
		</class>
		<class name="NSValue" uniqueID="NSValue">
			<method accessibility="Public" methodKind="Member" name="-CATransform3DValue" uniqueID="-CATransform3DValue():CATransform3D">
				<signature>NSValue.-CATransform3DValue():CATransform3D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGAffineTransformValue" uniqueID="-CGAffineTransformValue():CGAffineTransform">
				<signature>NSValue.-CGAffineTransformValue():CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGPointValue" uniqueID="-CGPointValue():CGPoint">
				<signature>NSValue.-CGPointValue():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGRectValue" uniqueID="-CGRectValue():CGRect">
				<signature>NSValue.-CGRectValue():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGSizeValue" uniqueID="-CGSizeValue():CGSize">
				<signature>NSValue.-CGSizeValue():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-CGVectorValue" uniqueID="-CGVectorValue():CGVector">
				<signature>NSValue.-CGVectorValue():CGVector</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-UIEdgeInsetsValue" uniqueID="-UIEdgeInsetsValue():UIEdgeInsets">
				<signature>NSValue.-UIEdgeInsetsValue():UIEdgeInsets</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-UIOffsetValue" uniqueID="-UIOffsetValue():UIOffset">
				<signature>NSValue.-UIOffsetValue():UIOffset</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getValue:" uniqueID="-getValue:(void*):void">
				<signature>NSValue.-getValue:(void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytes:objCType:" uniqueID="-initWithBytes:objCType:(const void*;const char*):instancetype _Nonnull">
				<signature>NSValue.-initWithBytes:objCType:(const void*;const char*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSValue.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToValue:" uniqueID="-isEqualToValue:(NSValue*):BOOL">
				<signature>NSValue.-isEqualToValue:(NSValue*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-nonretainedObjectValue" uniqueID="-nonretainedObjectValue():id _Nullable">
				<signature>NSValue.-nonretainedObjectValue():id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objCType" uniqueID="-objCType():const char*">
				<signature>NSValue.-objCType():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pointerValue" uniqueID="-pointerValue():void*">
				<signature>NSValue.-pointerValue():void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeValue" uniqueID="-rangeValue():NSRange">
				<signature>NSValue.-rangeValue():NSRange</signature>
			</method>
		</class>
		<class name="NSObject+UIAccessibility" uniqueID="NSObject+UIAccessibility">
			<method accessibility="Public" methodKind="Member" name="-accessibilityActivationPoint" uniqueID="-accessibilityActivationPoint():CGPoint">
				<signature>NSObject+UIAccessibility.-accessibilityActivationPoint():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityElementsHidden" uniqueID="-accessibilityElementsHidden():BOOL">
				<signature>NSObject+UIAccessibility.-accessibilityElementsHidden():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityFrame" uniqueID="-accessibilityFrame():CGRect">
				<signature>NSObject+UIAccessibility.-accessibilityFrame():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityHeaderElements" uniqueID="-accessibilityHeaderElements():NSArray*">
				<signature>NSObject+UIAccessibility.-accessibilityHeaderElements():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityHint" uniqueID="-accessibilityHint():NSString*">
				<signature>NSObject+UIAccessibility.-accessibilityHint():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityLabel" uniqueID="-accessibilityLabel():NSString*">
				<signature>NSObject+UIAccessibility.-accessibilityLabel():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityLanguage" uniqueID="-accessibilityLanguage():NSString*">
				<signature>NSObject+UIAccessibility.-accessibilityLanguage():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityNavigationStyle" uniqueID="-accessibilityNavigationStyle():UIAccessibilityNavigationStyle">
				<signature>NSObject+UIAccessibility.-accessibilityNavigationStyle():UIAccessibilityNavigationStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityPath" uniqueID="-accessibilityPath():UIBezierPath*">
				<signature>NSObject+UIAccessibility.-accessibilityPath():UIBezierPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityTraits" uniqueID="-accessibilityTraits():UIAccessibilityTraits">
				<signature>NSObject+UIAccessibility.-accessibilityTraits():UIAccessibilityTraits</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityValue" uniqueID="-accessibilityValue():NSString*">
				<signature>NSObject+UIAccessibility.-accessibilityValue():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-accessibilityViewIsModal" uniqueID="-accessibilityViewIsModal():BOOL">
				<signature>NSObject+UIAccessibility.-accessibilityViewIsModal():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAccessibilityElement" uniqueID="-isAccessibilityElement():BOOL">
				<signature>NSObject+UIAccessibility.-isAccessibilityElement():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityActivationPoint:" uniqueID="-setAccessibilityActivationPoint:(CGPoint):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityActivationPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityElementsHidden:" uniqueID="-setAccessibilityElementsHidden:(BOOL):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityElementsHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityFrame:" uniqueID="-setAccessibilityFrame:(CGRect):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityFrame:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityHeaderElements:" uniqueID="-setAccessibilityHeaderElements:(NSArray*):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityHeaderElements:(NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityHint:" uniqueID="-setAccessibilityHint:(NSString*):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityHint:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityLabel:" uniqueID="-setAccessibilityLabel:(NSString*):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityLabel:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityLanguage:" uniqueID="-setAccessibilityLanguage:(NSString*):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityLanguage:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityNavigationStyle:" uniqueID="-setAccessibilityNavigationStyle:(UIAccessibilityNavigationStyle):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityNavigationStyle:(UIAccessibilityNavigationStyle):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityPath:" uniqueID="-setAccessibilityPath:(UIBezierPath*):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityPath:(UIBezierPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityTraits:" uniqueID="-setAccessibilityTraits:(UIAccessibilityTraits):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityTraits:(UIAccessibilityTraits):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityValue:" uniqueID="-setAccessibilityValue:(NSString*):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityValue:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityViewIsModal:" uniqueID="-setAccessibilityViewIsModal:(BOOL):void">
				<signature>NSObject+UIAccessibility.-setAccessibilityViewIsModal:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setIsAccessibilityElement:" uniqueID="-setIsAccessibilityElement:(BOOL):void">
				<signature>NSObject+UIAccessibility.-setIsAccessibilityElement:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setShouldGroupAccessibilityChildren:" uniqueID="-setShouldGroupAccessibilityChildren:(BOOL):void">
				<signature>NSObject+UIAccessibility.-setShouldGroupAccessibilityChildren:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldGroupAccessibilityChildren" uniqueID="-shouldGroupAccessibilityChildren():BOOL">
				<signature>NSObject+UIAccessibility.-shouldGroupAccessibilityChildren():BOOL</signature>
			</method>
		</class>
		<class name="NSObject+NSThreadPerformAdditions" uniqueID="NSObject+NSThreadPerformAdditions">
			<method accessibility="Public" methodKind="Member" name="-performSelector:onThread:withObject:waitUntilDone:" uniqueID="-performSelector:onThread:withObject:waitUntilDone:(SEL _Nonnull;NSThread*;id _Nullable;BOOL):void">
				<signature>NSObject+NSThreadPerformAdditions.-performSelector:onThread:withObject:waitUntilDone:(SEL _Nonnull;NSThread*;id _Nullable;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:onThread:withObject:waitUntilDone:modes:" uniqueID="-performSelector:onThread:withObject:waitUntilDone:modes:(SEL _Nonnull;NSThread*;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void">
				<signature>NSObject+NSThreadPerformAdditions.-performSelector:onThread:withObject:waitUntilDone:modes:(SEL _Nonnull;NSThread*;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelectorInBackground:withObject:" uniqueID="-performSelectorInBackground:withObject:(SEL _Nonnull;id _Nullable):void">
				<signature>NSObject+NSThreadPerformAdditions.-performSelectorInBackground:withObject:(SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelectorOnMainThread:withObject:waitUntilDone:" uniqueID="-performSelectorOnMainThread:withObject:waitUntilDone:(SEL _Nonnull;id _Nullable;BOOL):void">
				<signature>NSObject+NSThreadPerformAdditions.-performSelectorOnMainThread:withObject:waitUntilDone:(SEL _Nonnull;id _Nullable;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelectorOnMainThread:withObject:waitUntilDone:modes:" uniqueID="-performSelectorOnMainThread:withObject:waitUntilDone:modes:(SEL _Nonnull;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void">
				<signature>NSObject+NSThreadPerformAdditions.-performSelectorOnMainThread:withObject:waitUntilDone:modes:(SEL _Nonnull;id _Nullable;BOOL;NSArray&lt;NSString *&gt;*):void</signature>
			</method>
		</class>
		<class name="Most General Type" uniqueID="Most General Type">
			<method accessibility="Public" methodKind="Member" name="-lastPathComponent" uniqueID="-lastPathComponent():NSString*">
				<signature>Most General Type.-lastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectForKey:" uniqueID="-objectForKey:(KeyType _Nonnull):ObjectType _Nullable">
				<signature>Most General Type.-objectForKey:(KeyType _Nonnull):ObjectType _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:" uniqueID="-performSelector:(SEL):id">
				<signature>Most General Type.-performSelector:(SEL):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-popViewControllerAnimated:" uniqueID="-popViewControllerAnimated:(BOOL):UIViewController*">
				<signature>Most General Type.-popViewControllerAnimated:(BOOL):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setToolbarHidden:" uniqueID="-setToolbarHidden:(BOOL):void">
				<signature>Most General Type.-setToolbarHidden:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-text" uniqueID="-text():NSString*">
				<signature>Most General Type.-text():NSString*</signature>
			</method>
		</class>
		<class name="UIScreenMode" uniqueID="UIScreenMode">
			<method accessibility="Public" methodKind="Member" name="-pixelAspectRatio" uniqueID="-pixelAspectRatio():CGFloat">
				<signature>UIScreenMode.-pixelAspectRatio():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-size" uniqueID="-size():CGSize">
				<signature>UIScreenMode.-size():CGSize</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueObservingCustomization" uniqueID="NSObject+NSKeyValueObservingCustomization">
			<method accessibility="Public" methodKind="Member" name="-observationInfo" uniqueID="-observationInfo():void*">
				<signature>NSObject+NSKeyValueObservingCustomization.-observationInfo():void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setObservationInfo:" uniqueID="-setObservationInfo:(void*):void">
				<signature>NSObject+NSKeyValueObservingCustomization.-setObservationInfo:(void*):void</signature>
			</method>
		</class>
		<class name="^():void" uniqueID="^():void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block():void">
				<signature>^():void.-block():void</signature>
			</method>
		</class>
		<class name="NSLocale+NSExtendedLocale" uniqueID="NSLocale+NSExtendedLocale">
			<method accessibility="Public" methodKind="Member" name="-localeIdentifier" uniqueID="-localeIdentifier():NSString*">
				<signature>NSLocale+NSExtendedLocale.-localeIdentifier():NSString*</signature>
			</method>
		</class>
		<class name="AVAudioSessionRouteDescription" uniqueID="AVAudioSessionRouteDescription">
			<method accessibility="Public" methodKind="Member" name="-inputs" uniqueID="-inputs():NSArray&lt;AVAudioSessionPortDescription *&gt;*">
				<signature>AVAudioSessionRouteDescription.-inputs():NSArray&lt;AVAudioSessionPortDescription *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-outputs" uniqueID="-outputs():NSArray&lt;AVAudioSessionPortDescription *&gt;*">
				<signature>AVAudioSessionRouteDescription.-outputs():NSArray&lt;AVAudioSessionPortDescription *&gt;*</signature>
			</method>
		</class>
		<class name="UIPanGestureRecognizer" uniqueID="UIPanGestureRecognizer">
			<method accessibility="Public" methodKind="Member" name="-maximumNumberOfTouches" uniqueID="-maximumNumberOfTouches():NSUInteger">
				<signature>UIPanGestureRecognizer.-maximumNumberOfTouches():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-minimumNumberOfTouches" uniqueID="-minimumNumberOfTouches():NSUInteger">
				<signature>UIPanGestureRecognizer.-minimumNumberOfTouches():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaximumNumberOfTouches:" uniqueID="-setMaximumNumberOfTouches:(NSUInteger):void">
				<signature>UIPanGestureRecognizer.-setMaximumNumberOfTouches:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMinimumNumberOfTouches:" uniqueID="-setMinimumNumberOfTouches:(NSUInteger):void">
				<signature>UIPanGestureRecognizer.-setMinimumNumberOfTouches:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTranslation:inView:" uniqueID="-setTranslation:inView:(CGPoint;UIView*):void">
				<signature>UIPanGestureRecognizer.-setTranslation:inView:(CGPoint;UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-translationInView:" uniqueID="-translationInView:(UIView*):CGPoint">
				<signature>UIPanGestureRecognizer.-translationInView:(UIView*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-velocityInView:" uniqueID="-velocityInView:(UIView*):CGPoint">
				<signature>UIPanGestureRecognizer.-velocityInView:(UIView*):CGPoint</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueObserving" uniqueID="NSObject+NSKeyValueObserving">
			<method accessibility="Public" methodKind="Member" name="-observeValueForKeyPath:ofObject:change:context:" uniqueID="-observeValueForKeyPath:ofObject:change:context:(NSString*;id _Nullable;NSDictionary&lt;NSString *,id&gt;*;void*):void">
				<signature>NSObject+NSKeyValueObserving.-observeValueForKeyPath:ofObject:change:context:(NSString*;id _Nullable;NSDictionary&lt;NSString *,id&gt;*;void*):void</signature>
			</method>
		</class>
		<class name="UIImage+UIImageDeprecated" uniqueID="UIImage+UIImageDeprecated">
			<method accessibility="Public" methodKind="Member" name="-leftCapWidth" uniqueID="-leftCapWidth():NSInteger">
				<signature>UIImage+UIImageDeprecated.-leftCapWidth():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stretchableImageWithLeftCapWidth:topCapHeight:" uniqueID="-stretchableImageWithLeftCapWidth:topCapHeight:(NSInteger;NSInteger):UIImage*">
				<signature>UIImage+UIImageDeprecated.-stretchableImageWithLeftCapWidth:topCapHeight:(NSInteger;NSInteger):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topCapHeight" uniqueID="-topCapHeight():NSInteger">
				<signature>UIImage+UIImageDeprecated.-topCapHeight():NSInteger</signature>
			</method>
		</class>
		<class name="NSTimeZone+NSTimeZoneCreation" uniqueID="NSTimeZone+NSTimeZoneCreation">
			<method accessibility="Public" methodKind="Member" name="-initWithName:" uniqueID="-initWithName:(NSString*):instancetype _Nullable">
				<signature>NSTimeZone+NSTimeZoneCreation.-initWithName:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithName:data:" uniqueID="-initWithName:data:(NSString*;NSData*):instancetype _Nullable">
				<signature>NSTimeZone+NSTimeZoneCreation.-initWithName:data:(NSString*;NSData*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueObserverRegistration" uniqueID="NSObject+NSKeyValueObserverRegistration">
			<method accessibility="Public" methodKind="Member" name="-addObserver:forKeyPath:options:context:" uniqueID="-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void">
				<signature>NSObject+NSKeyValueObserverRegistration.-addObserver:forKeyPath:options:context:(NSObject*;NSString*;NSKeyValueObservingOptions;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:" uniqueID="-removeObserver:forKeyPath:(NSObject*;NSString*):void">
				<signature>NSObject+NSKeyValueObserverRegistration.-removeObserver:forKeyPath:(NSObject*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeObserver:forKeyPath:context:" uniqueID="-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void">
				<signature>NSObject+NSKeyValueObserverRegistration.-removeObserver:forKeyPath:context:(NSObject*;NSString*;void*):void</signature>
			</method>
		</class>
		<class name="NSFileHandle+NSFileHandleAsynchronousAccess" uniqueID="NSFileHandle+NSFileHandleAsynchronousAccess">
			<method accessibility="Public" methodKind="Member" name="-acceptConnectionInBackgroundAndNotify" uniqueID="-acceptConnectionInBackgroundAndNotify():void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-acceptConnectionInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-acceptConnectionInBackgroundAndNotifyForModes:" uniqueID="-acceptConnectionInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-acceptConnectionInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readInBackgroundAndNotify" uniqueID="-readInBackgroundAndNotify():void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-readInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readInBackgroundAndNotifyForModes:" uniqueID="-readInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-readInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readToEndOfFileInBackgroundAndNotify" uniqueID="-readToEndOfFileInBackgroundAndNotify():void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-readToEndOfFileInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readToEndOfFileInBackgroundAndNotifyForModes:" uniqueID="-readToEndOfFileInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-readToEndOfFileInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-readabilityHandler" uniqueID="-readabilityHandler():(^)(NSFileHandle*):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-readabilityHandler():(^)(NSFileHandle*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setReadabilityHandler:" uniqueID="-setReadabilityHandler:((^)(NSFileHandle*):void):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-setReadabilityHandler:((^)(NSFileHandle*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWriteabilityHandler:" uniqueID="-setWriteabilityHandler:((^)(NSFileHandle*):void):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-setWriteabilityHandler:((^)(NSFileHandle*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitForDataInBackgroundAndNotify" uniqueID="-waitForDataInBackgroundAndNotify():void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-waitForDataInBackgroundAndNotify():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitForDataInBackgroundAndNotifyForModes:" uniqueID="-waitForDataInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-waitForDataInBackgroundAndNotifyForModes:(NSArray&lt;NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeabilityHandler" uniqueID="-writeabilityHandler():(^)(NSFileHandle*):void">
				<signature>NSFileHandle+NSFileHandleAsynchronousAccess.-writeabilityHandler():(^)(NSFileHandle*):void</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueObserverNotification" uniqueID="NSObject+NSKeyValueObserverNotification">
			<method accessibility="Public" methodKind="Member" name="-didChange:valuesAtIndexes:forKey:" uniqueID="-didChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void">
				<signature>NSObject+NSKeyValueObserverNotification.-didChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didChangeValueForKey:" uniqueID="-didChangeValueForKey:(NSString*):void">
				<signature>NSObject+NSKeyValueObserverNotification.-didChangeValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didChangeValueForKey:withSetMutation:usingObjects:" uniqueID="-didChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void">
				<signature>NSObject+NSKeyValueObserverNotification.-didChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willChange:valuesAtIndexes:forKey:" uniqueID="-willChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void">
				<signature>NSObject+NSKeyValueObserverNotification.-willChange:valuesAtIndexes:forKey:(NSKeyValueChange;NSIndexSet*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willChangeValueForKey:" uniqueID="-willChangeValueForKey:(NSString*):void">
				<signature>NSObject+NSKeyValueObserverNotification.-willChangeValueForKey:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willChangeValueForKey:withSetMutation:usingObjects:" uniqueID="-willChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void">
				<signature>NSObject+NSKeyValueObserverNotification.-willChangeValueForKey:withSetMutation:usingObjects:(NSString*;NSKeyValueSetMutationKind;NSSet*):void</signature>
			</method>
		</class>
		<class name="UIImageAsset" uniqueID="UIImageAsset">
			<method accessibility="Public" methodKind="Member" name="-imageWithTraitCollection:" uniqueID="-imageWithTraitCollection:(UITraitCollection*):UIImage*">
				<signature>UIImageAsset.-imageWithTraitCollection:(UITraitCollection*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>UIImageAsset.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UIImageAsset.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-registerImage:withTraitCollection:" uniqueID="-registerImage:withTraitCollection:(UIImage*;UITraitCollection*):void">
				<signature>UIImageAsset.-registerImage:withTraitCollection:(UIImage*;UITraitCollection*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unregisterImageWithTraitCollection:" uniqueID="-unregisterImageWithTraitCollection:(UITraitCollection*):void">
				<signature>UIImageAsset.-unregisterImageWithTraitCollection:(UITraitCollection*):void</signature>
			</method>
		</class>
		<class name="^(NSURLResponse*;NSData*;NSError*):void" uniqueID="^(NSURLResponse*;NSData*;NSError*):void">
			<method accessibility="Public" methodKind="Member" name="-block" uniqueID="-block(NSURLResponse*;NSData*;NSError*):void">
				<signature>^(NSURLResponse*;NSData*;NSError*):void.-block(NSURLResponse*;NSData*;NSError*):void</signature>
			</method>
		</class>
		<class name="NSOperationQueue" uniqueID="NSOperationQueue">
			<method accessibility="Public" methodKind="Member" name="-addOperation:" uniqueID="-addOperation:(NSOperation*):void">
				<signature>NSOperationQueue.-addOperation:(NSOperation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOperationWithBlock:" uniqueID="-addOperationWithBlock:((^)():void):void">
				<signature>NSOperationQueue.-addOperationWithBlock:((^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addOperations:waitUntilFinished:" uniqueID="-addOperations:waitUntilFinished:(NSArray&lt;NSOperation *&gt;*;BOOL):void">
				<signature>NSOperationQueue.-addOperations:waitUntilFinished:(NSArray&lt;NSOperation *&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelAllOperations" uniqueID="-cancelAllOperations():void">
				<signature>NSOperationQueue.-cancelAllOperations():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSuspended" uniqueID="-isSuspended():BOOL">
				<signature>NSOperationQueue.-isSuspended():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maxConcurrentOperationCount" uniqueID="-maxConcurrentOperationCount():NSInteger">
				<signature>NSOperationQueue.-maxConcurrentOperationCount():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>NSOperationQueue.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-operationCount" uniqueID="-operationCount():NSUInteger">
				<signature>NSOperationQueue.-operationCount():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-operations" uniqueID="-operations():NSArray&lt;__kindof NSOperation *&gt;*">
				<signature>NSOperationQueue.-operations():NSArray&lt;__kindof NSOperation *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-qualityOfService" uniqueID="-qualityOfService():NSQualityOfService">
				<signature>NSOperationQueue.-qualityOfService():NSQualityOfService</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMaxConcurrentOperationCount:" uniqueID="-setMaxConcurrentOperationCount:(NSInteger):void">
				<signature>NSOperationQueue.-setMaxConcurrentOperationCount:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setName:" uniqueID="-setName:(NSString*):void">
				<signature>NSOperationQueue.-setName:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setQualityOfService:" uniqueID="-setQualityOfService:(NSQualityOfService):void">
				<signature>NSOperationQueue.-setQualityOfService:(NSQualityOfService):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSuspended:" uniqueID="-setSuspended:(BOOL):void">
				<signature>NSOperationQueue.-setSuspended:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setUnderlyingQueue:" uniqueID="-setUnderlyingQueue:(NSObject&lt;OS_dispatch_queue&gt;*):void">
				<signature>NSOperationQueue.-setUnderlyingQueue:(NSObject&lt;OS_dispatch_queue&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-underlyingQueue" uniqueID="-underlyingQueue():NSObject&lt;OS_dispatch_queue&gt;*">
				<signature>NSOperationQueue.-underlyingQueue():NSObject&lt;OS_dispatch_queue&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitUntilAllOperationsAreFinished" uniqueID="-waitUntilAllOperationsAreFinished():void">
				<signature>NSOperationQueue.-waitUntilAllOperationsAreFinished():void</signature>
			</method>
		</class>
		<class name="UITableViewController" uniqueID="UITableViewController">
			<method accessibility="Public" methodKind="Member" name="-clearsSelectionOnViewWillAppear" uniqueID="-clearsSelectionOnViewWillAppear():BOOL">
				<signature>UITableViewController.-clearsSelectionOnViewWillAppear():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>UITableViewController.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithNibName:bundle:" uniqueID="-initWithNibName:bundle:(NSString*;NSBundle*):instancetype _Nonnull">
				<signature>UITableViewController.-initWithNibName:bundle:(NSString*;NSBundle*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithStyle:" uniqueID="-initWithStyle:(UITableViewStyle):instancetype _Nonnull">
				<signature>UITableViewController.-initWithStyle:(UITableViewStyle):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-refreshControl" uniqueID="-refreshControl():UIRefreshControl*">
				<signature>UITableViewController.-refreshControl():UIRefreshControl*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setClearsSelectionOnViewWillAppear:" uniqueID="-setClearsSelectionOnViewWillAppear:(BOOL):void">
				<signature>UITableViewController.-setClearsSelectionOnViewWillAppear:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRefreshControl:" uniqueID="-setRefreshControl:(UIRefreshControl*):void">
				<signature>UITableViewController.-setRefreshControl:(UIRefreshControl*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTableView:" uniqueID="-setTableView:(UITableView*):void">
				<signature>UITableViewController.-setTableView:(UITableView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView" uniqueID="-tableView():UITableView*">
				<signature>UITableViewController.-tableView():UITableView*</signature>
			</method>
		</class>
		<class name="NSURLSessionTask" uniqueID="NSURLSessionTask">
			<method accessibility="Public" methodKind="Member" name="-cancel" uniqueID="-cancel():void">
				<signature>NSURLSessionTask.-cancel():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-countOfBytesExpectedToReceive" uniqueID="-countOfBytesExpectedToReceive():int64_t">
				<signature>NSURLSessionTask.-countOfBytesExpectedToReceive():int64_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-countOfBytesExpectedToSend" uniqueID="-countOfBytesExpectedToSend():int64_t">
				<signature>NSURLSessionTask.-countOfBytesExpectedToSend():int64_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-countOfBytesReceived" uniqueID="-countOfBytesReceived():int64_t">
				<signature>NSURLSessionTask.-countOfBytesReceived():int64_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-countOfBytesSent" uniqueID="-countOfBytesSent():int64_t">
				<signature>NSURLSessionTask.-countOfBytesSent():int64_t</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-currentRequest" uniqueID="-currentRequest():NSURLRequest*">
				<signature>NSURLSessionTask.-currentRequest():NSURLRequest*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-error" uniqueID="-error():NSError*">
				<signature>NSURLSessionTask.-error():NSError*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-originalRequest" uniqueID="-originalRequest():NSURLRequest*">
				<signature>NSURLSessionTask.-originalRequest():NSURLRequest*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-priority" uniqueID="-priority():float">
				<signature>NSURLSessionTask.-priority():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-response" uniqueID="-response():NSURLResponse*">
				<signature>NSURLSessionTask.-response():NSURLResponse*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-resume" uniqueID="-resume():void">
				<signature>NSURLSessionTask.-resume():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPriority:" uniqueID="-setPriority:(float):void">
				<signature>NSURLSessionTask.-setPriority:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTaskDescription:" uniqueID="-setTaskDescription:(NSString*):void">
				<signature>NSURLSessionTask.-setTaskDescription:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-state" uniqueID="-state():NSURLSessionTaskState">
				<signature>NSURLSessionTask.-state():NSURLSessionTaskState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-suspend" uniqueID="-suspend():void">
				<signature>NSURLSessionTask.-suspend():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-taskDescription" uniqueID="-taskDescription():NSString*">
				<signature>NSURLSessionTask.-taskDescription():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-taskIdentifier" uniqueID="-taskIdentifier():NSUInteger">
				<signature>NSURLSessionTask.-taskIdentifier():NSUInteger</signature>
			</method>
		</class>
		<class name="NSString" uniqueID="NSString">
			<method accessibility="Public" methodKind="Member" name="-UTF8String" uniqueID="-UTF8String():const char*">
				<signature>NSString.-UTF8String():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-boolValue" uniqueID="-boolValue():BOOL">
				<signature>NSString.-boolValue():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-boundingRectWithSize:options:attributes:context:" uniqueID="-boundingRectWithSize:options:attributes:context:(CGSize;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):CGRect">
				<signature>NSString.-boundingRectWithSize:options:attributes:context:(CGSize;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cString" uniqueID="-cString():const char*">
				<signature>NSString.-cString():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cStringLength" uniqueID="-cStringLength():NSUInteger">
				<signature>NSString.-cStringLength():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cStringUsingEncoding:" uniqueID="-cStringUsingEncoding:(NSStringEncoding):const char*">
				<signature>NSString.-cStringUsingEncoding:(NSStringEncoding):const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canBeConvertedToEncoding:" uniqueID="-canBeConvertedToEncoding:(NSStringEncoding):BOOL">
				<signature>NSString.-canBeConvertedToEncoding:(NSStringEncoding):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-capitalizedString" uniqueID="-capitalizedString():NSString*">
				<signature>NSString.-capitalizedString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-capitalizedStringWithLocale:" uniqueID="-capitalizedStringWithLocale:(NSLocale*):NSString*">
				<signature>NSString.-capitalizedStringWithLocale:(NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-caseInsensitiveCompare:" uniqueID="-caseInsensitiveCompare:(NSString*):NSComparisonResult">
				<signature>NSString.-caseInsensitiveCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterAtIndex:" uniqueID="-characterAtIndex:(NSUInteger):unichar">
				<signature>NSString.-characterAtIndex:(NSUInteger):unichar</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-commonPrefixWithString:options:" uniqueID="-commonPrefixWithString:options:(NSString*;NSStringCompareOptions):NSString*">
				<signature>NSString.-commonPrefixWithString:options:(NSString*;NSStringCompareOptions):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:" uniqueID="-compare:(NSString*):NSComparisonResult">
				<signature>NSString.-compare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:options:" uniqueID="-compare:options:(NSString*;NSStringCompareOptions):NSComparisonResult">
				<signature>NSString.-compare:options:(NSString*;NSStringCompareOptions):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:options:range:" uniqueID="-compare:options:range:(NSString*;NSStringCompareOptions;NSRange):NSComparisonResult">
				<signature>NSString.-compare:options:range:(NSString*;NSStringCompareOptions;NSRange):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-compare:options:range:locale:" uniqueID="-compare:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;id _Nullable):NSComparisonResult">
				<signature>NSString.-compare:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;id _Nullable):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:" uniqueID="-completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:(NSString**;BOOL;NSArray&lt;NSString *&gt;**;NSArray&lt;NSString *&gt;*):NSUInteger">
				<signature>NSString.-completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:(NSString**;BOOL;NSArray&lt;NSString *&gt;**;NSArray&lt;NSString *&gt;*):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsSeparatedByCharactersInSet:" uniqueID="-componentsSeparatedByCharactersInSet:(NSCharacterSet*):NSArray&lt;NSString *&gt;*">
				<signature>NSString.-componentsSeparatedByCharactersInSet:(NSCharacterSet*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-componentsSeparatedByString:" uniqueID="-componentsSeparatedByString:(NSString*):NSArray&lt;NSString *&gt;*">
				<signature>NSString.-componentsSeparatedByString:(NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containsString:" uniqueID="-containsString:(NSString*):BOOL">
				<signature>NSString.-containsString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataUsingEncoding:" uniqueID="-dataUsingEncoding:(NSStringEncoding):NSData*">
				<signature>NSString.-dataUsingEncoding:(NSStringEncoding):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dataUsingEncoding:allowLossyConversion:" uniqueID="-dataUsingEncoding:allowLossyConversion:(NSStringEncoding;BOOL):NSData*">
				<signature>NSString.-dataUsingEncoding:allowLossyConversion:(NSStringEncoding;BOOL):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decomposedStringWithCanonicalMapping" uniqueID="-decomposedStringWithCanonicalMapping():NSString*">
				<signature>NSString.-decomposedStringWithCanonicalMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decomposedStringWithCompatibilityMapping" uniqueID="-decomposedStringWithCompatibilityMapping():NSString*">
				<signature>NSString.-decomposedStringWithCompatibilityMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>NSString.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-doubleValue" uniqueID="-doubleValue():double">
				<signature>NSString.-doubleValue():double</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:" uniqueID="-drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;NSLineBreakMode;UIBaselineAdjustment):CGSize">
				<signature>NSString.-drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;NSLineBreakMode;UIBaselineAdjustment):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:forWidth:withFont:lineBreakMode:" uniqueID="-drawAtPoint:forWidth:withFont:lineBreakMode:(CGPoint;CGFloat;UIFont*;NSLineBreakMode):CGSize">
				<signature>NSString.-drawAtPoint:forWidth:withFont:lineBreakMode:(CGPoint;CGFloat;UIFont*;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:" uniqueID="-drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;CGFloat*;NSLineBreakMode;UIBaselineAdjustment):CGSize">
				<signature>NSString.-drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:(CGPoint;CGFloat;UIFont*;CGFloat;CGFloat*;NSLineBreakMode;UIBaselineAdjustment):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:withAttributes:" uniqueID="-drawAtPoint:withAttributes:(CGPoint;NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSString.-drawAtPoint:withAttributes:(CGPoint;NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawAtPoint:withFont:" uniqueID="-drawAtPoint:withFont:(CGPoint;UIFont*):CGSize">
				<signature>NSString.-drawAtPoint:withFont:(CGPoint;UIFont*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withAttributes:" uniqueID="-drawInRect:withAttributes:(CGRect;NSDictionary&lt;NSString *,id&gt;*):void">
				<signature>NSString.-drawInRect:withAttributes:(CGRect;NSDictionary&lt;NSString *,id&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withFont:" uniqueID="-drawInRect:withFont:(CGRect;UIFont*):CGSize">
				<signature>NSString.-drawInRect:withFont:(CGRect;UIFont*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withFont:lineBreakMode:" uniqueID="-drawInRect:withFont:lineBreakMode:(CGRect;UIFont*;NSLineBreakMode):CGSize">
				<signature>NSString.-drawInRect:withFont:lineBreakMode:(CGRect;UIFont*;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawInRect:withFont:lineBreakMode:alignment:" uniqueID="-drawInRect:withFont:lineBreakMode:alignment:(CGRect;UIFont*;NSLineBreakMode;NSTextAlignment):CGSize">
				<signature>NSString.-drawInRect:withFont:lineBreakMode:alignment:(CGRect;UIFont*;NSLineBreakMode;NSTextAlignment):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawWithRect:options:attributes:context:" uniqueID="-drawWithRect:options:attributes:context:(CGRect;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):void">
				<signature>NSString.-drawWithRect:options:attributes:context:(CGRect;NSStringDrawingOptions;NSDictionary&lt;NSString *,id&gt;*;NSStringDrawingContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateLinesUsingBlock:" uniqueID="-enumerateLinesUsingBlock:((^)(NSString*;BOOL*):void):void">
				<signature>NSString.-enumerateLinesUsingBlock:((^)(NSString*;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:" uniqueID="-enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;(^)(NSString*;NSRange;NSRange;BOOL*):void):void">
				<signature>NSString.-enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;(^)(NSString*;NSRange;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enumerateSubstringsInRange:options:usingBlock:" uniqueID="-enumerateSubstringsInRange:options:usingBlock:(NSRange;NSStringEnumerationOptions;(^)(NSString*;NSRange;NSRange;BOOL*):void):void">
				<signature>NSString.-enumerateSubstringsInRange:options:usingBlock:(NSRange;NSStringEnumerationOptions;(^)(NSString*;NSRange;NSRange;BOOL*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fastestEncoding" uniqueID="-fastestEncoding():NSStringEncoding">
				<signature>NSString.-fastestEncoding():NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileSystemRepresentation" uniqueID="-fileSystemRepresentation():const char*">
				<signature>NSString.-fileSystemRepresentation():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-floatValue" uniqueID="-floatValue():float">
				<signature>NSString.-floatValue():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:maxLength:usedLength:encoding:options:range:remainingRange:" uniqueID="-getBytes:maxLength:usedLength:encoding:options:range:remainingRange:(void*;NSUInteger;NSUInteger*;NSStringEncoding;NSStringEncodingConversionOptions;NSRange;NSRange*):BOOL">
				<signature>NSString.-getBytes:maxLength:usedLength:encoding:options:range:remainingRange:(void*;NSUInteger;NSUInteger*;NSStringEncoding;NSStringEncodingConversionOptions;NSRange;NSRange*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:" uniqueID="-getCString:(char*):void">
				<signature>NSString.-getCString:(char*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:maxLength:" uniqueID="-getCString:maxLength:(char*;NSUInteger):void">
				<signature>NSString.-getCString:maxLength:(char*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:maxLength:encoding:" uniqueID="-getCString:maxLength:encoding:(char*;NSUInteger;NSStringEncoding):BOOL">
				<signature>NSString.-getCString:maxLength:encoding:(char*;NSUInteger;NSStringEncoding):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCString:maxLength:range:remainingRange:" uniqueID="-getCString:maxLength:range:remainingRange:(char*;NSUInteger;NSRange;NSRange*):void">
				<signature>NSString.-getCString:maxLength:range:remainingRange:(char*;NSUInteger;NSRange;NSRange*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCharacters:" uniqueID="-getCharacters:(unichar*):void">
				<signature>NSString.-getCharacters:(unichar*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getCharacters:range:" uniqueID="-getCharacters:range:(unichar*;NSRange):void">
				<signature>NSString.-getCharacters:range:(unichar*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getFileSystemRepresentation:maxLength:" uniqueID="-getFileSystemRepresentation:maxLength:(char*;NSUInteger):BOOL">
				<signature>NSString.-getFileSystemRepresentation:maxLength:(char*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getLineStart:end:contentsEnd:forRange:" uniqueID="-getLineStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void">
				<signature>NSString.-getLineStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getParagraphStart:end:contentsEnd:forRange:" uniqueID="-getParagraphStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void">
				<signature>NSString.-getParagraphStart:end:contentsEnd:forRange:(NSUInteger*;NSUInteger*;NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasPrefix:" uniqueID="-hasPrefix:(NSString*):BOOL">
				<signature>NSString.-hasPrefix:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasSuffix:" uniqueID="-hasSuffix:(NSString*):BOOL">
				<signature>NSString.-hasSuffix:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hash" uniqueID="-hash():NSUInteger">
				<signature>NSString.-hash():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-init" uniqueID="-init():instancetype _Nonnull">
				<signature>NSString.-init():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytes:length:encoding:" uniqueID="-initWithBytes:length:encoding:(const void*;NSUInteger;NSStringEncoding):instancetype _Nullable">
				<signature>NSString.-initWithBytes:length:encoding:(const void*;NSUInteger;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithBytesNoCopy:length:encoding:freeWhenDone:" uniqueID="-initWithBytesNoCopy:length:encoding:freeWhenDone:(void*;NSUInteger;NSStringEncoding;BOOL):instancetype _Nullable">
				<signature>NSString.-initWithBytesNoCopy:length:encoding:freeWhenDone:(void*;NSUInteger;NSStringEncoding;BOOL):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCString:" uniqueID="-initWithCString:(const char*):id _Nullable">
				<signature>NSString.-initWithCString:(const char*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCString:encoding:" uniqueID="-initWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable">
				<signature>NSString.-initWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCString:length:" uniqueID="-initWithCString:length:(const char*;NSUInteger):id _Nullable">
				<signature>NSString.-initWithCString:length:(const char*;NSUInteger):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCStringNoCopy:length:freeWhenDone:" uniqueID="-initWithCStringNoCopy:length:freeWhenDone:(char*;NSUInteger;BOOL):id _Nullable">
				<signature>NSString.-initWithCStringNoCopy:length:freeWhenDone:(char*;NSUInteger;BOOL):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCharacters:length:" uniqueID="-initWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull">
				<signature>NSString.-initWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCharactersNoCopy:length:freeWhenDone:" uniqueID="-initWithCharactersNoCopy:length:freeWhenDone:(unichar*;NSUInteger;BOOL):instancetype _Nonnull">
				<signature>NSString.-initWithCharactersNoCopy:length:freeWhenDone:(unichar*;NSUInteger;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>NSString.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:" uniqueID="-initWithContentsOfFile:(NSString*):id _Nullable">
				<signature>NSString.-initWithContentsOfFile:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:encoding:error:" uniqueID="-initWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>NSString.-initWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfFile:usedEncoding:error:" uniqueID="-initWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>NSString.-initWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:" uniqueID="-initWithContentsOfURL:(NSURL*):id _Nullable">
				<signature>NSString.-initWithContentsOfURL:(NSURL*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:encoding:error:" uniqueID="-initWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>NSString.-initWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithContentsOfURL:usedEncoding:error:" uniqueID="-initWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>NSString.-initWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithData:encoding:" uniqueID="-initWithData:encoding:(NSData*;NSStringEncoding):instancetype _Nullable">
				<signature>NSString.-initWithData:encoding:(NSData*;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:" uniqueID="-initWithFormat:(NSString*;...):instancetype _Nonnull">
				<signature>NSString.-initWithFormat:(NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:arguments:" uniqueID="-initWithFormat:arguments:(NSString*;void*):instancetype _Nonnull">
				<signature>NSString.-initWithFormat:arguments:(NSString*;void*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:locale:" uniqueID="-initWithFormat:locale:(NSString*;id _Nullable;...):instancetype _Nonnull">
				<signature>NSString.-initWithFormat:locale:(NSString*;id _Nullable;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithFormat:locale:arguments:" uniqueID="-initWithFormat:locale:arguments:(NSString*;id _Nullable;void*):instancetype _Nonnull">
				<signature>NSString.-initWithFormat:locale:arguments:(NSString*;id _Nullable;void*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithString:" uniqueID="-initWithString:(NSString*):instancetype _Nonnull">
				<signature>NSString.-initWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithUTF8String:" uniqueID="-initWithUTF8String:(const char*):instancetype _Nullable">
				<signature>NSString.-initWithUTF8String:(const char*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intValue" uniqueID="-intValue():int">
				<signature>NSString.-intValue():int</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-integerValue" uniqueID="-integerValue():NSInteger">
				<signature>NSString.-integerValue():NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAbsolutePath" uniqueID="-isAbsolutePath():BOOL">
				<signature>NSString.-isAbsolutePath():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqualToString:" uniqueID="-isEqualToString:(NSString*):BOOL">
				<signature>NSString.-isEqualToString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lastPathComponent" uniqueID="-lastPathComponent():NSString*">
				<signature>NSString.-lastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>NSString.-length():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lengthOfBytesUsingEncoding:" uniqueID="-lengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger">
				<signature>NSString.-lengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lineRangeForRange:" uniqueID="-lineRangeForRange:(NSRange):NSRange">
				<signature>NSString.-lineRangeForRange:(NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-linguisticTagsInRange:scheme:options:orthography:tokenRanges:" uniqueID="-linguisticTagsInRange:scheme:options:orthography:tokenRanges:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;NSArray&lt;NSValue *&gt;**):NSArray&lt;NSString *&gt;*">
				<signature>NSString.-linguisticTagsInRange:scheme:options:orthography:tokenRanges:(NSRange;NSString*;NSLinguisticTaggerOptions;NSOrthography*;NSArray&lt;NSValue *&gt;**):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCapitalizedString" uniqueID="-localizedCapitalizedString():NSString*">
				<signature>NSString.-localizedCapitalizedString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCaseInsensitiveCompare:" uniqueID="-localizedCaseInsensitiveCompare:(NSString*):NSComparisonResult">
				<signature>NSString.-localizedCaseInsensitiveCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCaseInsensitiveContainsString:" uniqueID="-localizedCaseInsensitiveContainsString:(NSString*):BOOL">
				<signature>NSString.-localizedCaseInsensitiveContainsString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedCompare:" uniqueID="-localizedCompare:(NSString*):NSComparisonResult">
				<signature>NSString.-localizedCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedLowercaseString" uniqueID="-localizedLowercaseString():NSString*">
				<signature>NSString.-localizedLowercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStandardCompare:" uniqueID="-localizedStandardCompare:(NSString*):NSComparisonResult">
				<signature>NSString.-localizedStandardCompare:(NSString*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStandardContainsString:" uniqueID="-localizedStandardContainsString:(NSString*):BOOL">
				<signature>NSString.-localizedStandardContainsString:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedStandardRangeOfString:" uniqueID="-localizedStandardRangeOfString:(NSString*):NSRange">
				<signature>NSString.-localizedStandardRangeOfString:(NSString*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-localizedUppercaseString" uniqueID="-localizedUppercaseString():NSString*">
				<signature>NSString.-localizedUppercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-longLongValue" uniqueID="-longLongValue():long long">
				<signature>NSString.-longLongValue():long long</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lossyCString" uniqueID="-lossyCString():const char*">
				<signature>NSString.-lossyCString():const char*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lowercaseString" uniqueID="-lowercaseString():NSString*">
				<signature>NSString.-lowercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-lowercaseStringWithLocale:" uniqueID="-lowercaseStringWithLocale:(NSLocale*):NSString*">
				<signature>NSString.-lowercaseStringWithLocale:(NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maximumLengthOfBytesUsingEncoding:" uniqueID="-maximumLengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger">
				<signature>NSString.-maximumLengthOfBytesUsingEncoding:(NSStringEncoding):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-paragraphRangeForRange:" uniqueID="-paragraphRangeForRange:(NSRange):NSRange">
				<signature>NSString.-paragraphRangeForRange:(NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathComponents" uniqueID="-pathComponents():NSArray&lt;NSString *&gt;*">
				<signature>NSString.-pathComponents():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pathExtension" uniqueID="-pathExtension():NSString*">
				<signature>NSString.-pathExtension():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-precomposedStringWithCanonicalMapping" uniqueID="-precomposedStringWithCanonicalMapping():NSString*">
				<signature>NSString.-precomposedStringWithCanonicalMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-precomposedStringWithCompatibilityMapping" uniqueID="-precomposedStringWithCompatibilityMapping():NSString*">
				<signature>NSString.-precomposedStringWithCompatibilityMapping():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-propertyList" uniqueID="-propertyList():id _Nonnull">
				<signature>NSString.-propertyList():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-propertyListFromStringsFileFormat" uniqueID="-propertyListFromStringsFileFormat():NSDictionary*">
				<signature>NSString.-propertyListFromStringsFileFormat():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfCharacterFromSet:" uniqueID="-rangeOfCharacterFromSet:(NSCharacterSet*):NSRange">
				<signature>NSString.-rangeOfCharacterFromSet:(NSCharacterSet*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfCharacterFromSet:options:" uniqueID="-rangeOfCharacterFromSet:options:(NSCharacterSet*;NSStringCompareOptions):NSRange">
				<signature>NSString.-rangeOfCharacterFromSet:options:(NSCharacterSet*;NSStringCompareOptions):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfCharacterFromSet:options:range:" uniqueID="-rangeOfCharacterFromSet:options:range:(NSCharacterSet*;NSStringCompareOptions;NSRange):NSRange">
				<signature>NSString.-rangeOfCharacterFromSet:options:range:(NSCharacterSet*;NSStringCompareOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfComposedCharacterSequenceAtIndex:" uniqueID="-rangeOfComposedCharacterSequenceAtIndex:(NSUInteger):NSRange">
				<signature>NSString.-rangeOfComposedCharacterSequenceAtIndex:(NSUInteger):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfComposedCharacterSequencesForRange:" uniqueID="-rangeOfComposedCharacterSequencesForRange:(NSRange):NSRange">
				<signature>NSString.-rangeOfComposedCharacterSequencesForRange:(NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:" uniqueID="-rangeOfString:(NSString*):NSRange">
				<signature>NSString.-rangeOfString:(NSString*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:options:" uniqueID="-rangeOfString:options:(NSString*;NSStringCompareOptions):NSRange">
				<signature>NSString.-rangeOfString:options:(NSString*;NSStringCompareOptions):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:options:range:" uniqueID="-rangeOfString:options:range:(NSString*;NSStringCompareOptions;NSRange):NSRange">
				<signature>NSString.-rangeOfString:options:range:(NSString*;NSStringCompareOptions;NSRange):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeOfString:options:range:locale:" uniqueID="-rangeOfString:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;NSLocale*):NSRange">
				<signature>NSString.-rangeOfString:options:range:locale:(NSString*;NSStringCompareOptions;NSRange;NSLocale*):NSRange</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithAttributes:" uniqueID="-sizeWithAttributes:(NSDictionary&lt;NSString *,id&gt;*):CGSize">
				<signature>NSString.-sizeWithAttributes:(NSDictionary&lt;NSString *,id&gt;*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:" uniqueID="-sizeWithFont:(UIFont*):CGSize">
				<signature>NSString.-sizeWithFont:(UIFont*):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:constrainedToSize:" uniqueID="-sizeWithFont:constrainedToSize:(UIFont*;CGSize):CGSize">
				<signature>NSString.-sizeWithFont:constrainedToSize:(UIFont*;CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:constrainedToSize:lineBreakMode:" uniqueID="-sizeWithFont:constrainedToSize:lineBreakMode:(UIFont*;CGSize;NSLineBreakMode):CGSize">
				<signature>NSString.-sizeWithFont:constrainedToSize:lineBreakMode:(UIFont*;CGSize;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:forWidth:lineBreakMode:" uniqueID="-sizeWithFont:forWidth:lineBreakMode:(UIFont*;CGFloat;NSLineBreakMode):CGSize">
				<signature>NSString.-sizeWithFont:forWidth:lineBreakMode:(UIFont*;CGFloat;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:" uniqueID="-sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:(UIFont*;CGFloat;CGFloat*;CGFloat;NSLineBreakMode):CGSize">
				<signature>NSString.-sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:(UIFont*;CGFloat;CGFloat*;CGFloat;NSLineBreakMode):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-smallestEncoding" uniqueID="-smallestEncoding():NSStringEncoding">
				<signature>NSString.-smallestEncoding():NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAbbreviatingWithTildeInPath" uniqueID="-stringByAbbreviatingWithTildeInPath():NSString*">
				<signature>NSString.-stringByAbbreviatingWithTildeInPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAddingPercentEncodingWithAllowedCharacters:" uniqueID="-stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet*):NSString*">
				<signature>NSString.-stringByAddingPercentEncodingWithAllowedCharacters:(NSCharacterSet*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAddingPercentEscapesUsingEncoding:" uniqueID="-stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*">
				<signature>NSString.-stringByAddingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingFormat:" uniqueID="-stringByAppendingFormat:(NSString*;...):NSString*">
				<signature>NSString.-stringByAppendingFormat:(NSString*;...):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingPathComponent:" uniqueID="-stringByAppendingPathComponent:(NSString*):NSString*">
				<signature>NSString.-stringByAppendingPathComponent:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingPathExtension:" uniqueID="-stringByAppendingPathExtension:(NSString*):NSString*">
				<signature>NSString.-stringByAppendingPathExtension:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByAppendingString:" uniqueID="-stringByAppendingString:(NSString*):NSString*">
				<signature>NSString.-stringByAppendingString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByApplyingTransform:reverse:" uniqueID="-stringByApplyingTransform:reverse:(NSString*;BOOL):NSString*">
				<signature>NSString.-stringByApplyingTransform:reverse:(NSString*;BOOL):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByDeletingLastPathComponent" uniqueID="-stringByDeletingLastPathComponent():NSString*">
				<signature>NSString.-stringByDeletingLastPathComponent():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByDeletingPathExtension" uniqueID="-stringByDeletingPathExtension():NSString*">
				<signature>NSString.-stringByDeletingPathExtension():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByExpandingTildeInPath" uniqueID="-stringByExpandingTildeInPath():NSString*">
				<signature>NSString.-stringByExpandingTildeInPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByFoldingWithOptions:locale:" uniqueID="-stringByFoldingWithOptions:locale:(NSStringCompareOptions;NSLocale*):NSString*">
				<signature>NSString.-stringByFoldingWithOptions:locale:(NSStringCompareOptions;NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByPaddingToLength:withString:startingAtIndex:" uniqueID="-stringByPaddingToLength:withString:startingAtIndex:(NSUInteger;NSString*;NSUInteger):NSString*">
				<signature>NSString.-stringByPaddingToLength:withString:startingAtIndex:(NSUInteger;NSString*;NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByRemovingPercentEncoding" uniqueID="-stringByRemovingPercentEncoding():NSString*">
				<signature>NSString.-stringByRemovingPercentEncoding():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingCharactersInRange:withString:" uniqueID="-stringByReplacingCharactersInRange:withString:(NSRange;NSString*):NSString*">
				<signature>NSString.-stringByReplacingCharactersInRange:withString:(NSRange;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingOccurrencesOfString:withString:" uniqueID="-stringByReplacingOccurrencesOfString:withString:(NSString*;NSString*):NSString*">
				<signature>NSString.-stringByReplacingOccurrencesOfString:withString:(NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingOccurrencesOfString:withString:options:range:" uniqueID="-stringByReplacingOccurrencesOfString:withString:options:range:(NSString*;NSString*;NSStringCompareOptions;NSRange):NSString*">
				<signature>NSString.-stringByReplacingOccurrencesOfString:withString:options:range:(NSString*;NSString*;NSStringCompareOptions;NSRange):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByReplacingPercentEscapesUsingEncoding:" uniqueID="-stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*">
				<signature>NSString.-stringByReplacingPercentEscapesUsingEncoding:(NSStringEncoding):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByResolvingSymlinksInPath" uniqueID="-stringByResolvingSymlinksInPath():NSString*">
				<signature>NSString.-stringByResolvingSymlinksInPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByStandardizingPath" uniqueID="-stringByStandardizingPath():NSString*">
				<signature>NSString.-stringByStandardizingPath():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringByTrimmingCharactersInSet:" uniqueID="-stringByTrimmingCharactersInSet:(NSCharacterSet*):NSString*">
				<signature>NSString.-stringByTrimmingCharactersInSet:(NSCharacterSet*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-stringsByAppendingPaths:" uniqueID="-stringsByAppendingPaths:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*">
				<signature>NSString.-stringsByAppendingPaths:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-substringFromIndex:" uniqueID="-substringFromIndex:(NSUInteger):NSString*">
				<signature>NSString.-substringFromIndex:(NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-substringToIndex:" uniqueID="-substringToIndex:(NSUInteger):NSString*">
				<signature>NSString.-substringToIndex:(NSUInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-substringWithRange:" uniqueID="-substringWithRange:(NSRange):NSString*">
				<signature>NSString.-substringWithRange:(NSRange):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uppercaseString" uniqueID="-uppercaseString():NSString*">
				<signature>NSString.-uppercaseString():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-uppercaseStringWithLocale:" uniqueID="-uppercaseStringWithLocale:(NSLocale*):NSString*">
				<signature>NSString.-uppercaseStringWithLocale:(NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-variantFittingPresentationWidth:" uniqueID="-variantFittingPresentationWidth:(NSInteger):NSString*">
				<signature>NSString.-variantFittingPresentationWidth:(NSInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:" uniqueID="-writeToFile:atomically:(NSString*;BOOL):BOOL">
				<signature>NSString.-writeToFile:atomically:(NSString*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToFile:atomically:encoding:error:" uniqueID="-writeToFile:atomically:encoding:error:(NSString*;BOOL;NSStringEncoding;NSError**):BOOL">
				<signature>NSString.-writeToFile:atomically:encoding:error:(NSString*;BOOL;NSStringEncoding;NSError**):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:" uniqueID="-writeToURL:atomically:(NSURL*;BOOL):BOOL">
				<signature>NSString.-writeToURL:atomically:(NSURL*;BOOL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-writeToURL:atomically:encoding:error:" uniqueID="-writeToURL:atomically:encoding:error:(NSURL*;BOOL;NSStringEncoding;NSError**):BOOL">
				<signature>NSString.-writeToURL:atomically:encoding:error:(NSURL*;BOOL;NSStringEncoding;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="NSObject+NSDiscardableContentProxy" uniqueID="NSObject+NSDiscardableContentProxy">
			<method accessibility="Public" methodKind="Member" name="-autoContentAccessingProxy" uniqueID="-autoContentAccessingProxy():id _Nonnull">
				<signature>NSObject+NSDiscardableContentProxy.-autoContentAccessingProxy():id _Nonnull</signature>
			</method>
		</class>
		<class name="NSObject+NSCopyLinkMoveHandler" uniqueID="NSObject+NSCopyLinkMoveHandler">
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:" uniqueID="-fileManager:shouldProceedAfterError:(NSFileManager*;NSDictionary*):BOOL">
				<signature>NSObject+NSCopyLinkMoveHandler.-fileManager:shouldProceedAfterError:(NSFileManager*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:willProcessPath:" uniqueID="-fileManager:willProcessPath:(NSFileManager*;NSString*):void">
				<signature>NSObject+NSCopyLinkMoveHandler.-fileManager:willProcessPath:(NSFileManager*;NSString*):void</signature>
			</method>
		</class>
		<class name="NSHTTPCookieStorage+NSURLSessionTaskAdditions" uniqueID="NSHTTPCookieStorage+NSURLSessionTaskAdditions">
			<method accessibility="Public" methodKind="Member" name="-getCookiesForTask:completionHandler:" uniqueID="-getCookiesForTask:completionHandler:(NSURLSessionTask*;(^)(NSArray&lt;NSHTTPCookie *&gt;*):void):void">
				<signature>NSHTTPCookieStorage+NSURLSessionTaskAdditions.-getCookiesForTask:completionHandler:(NSURLSessionTask*;(^)(NSArray&lt;NSHTTPCookie *&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storeCookies:forTask:" uniqueID="-storeCookies:forTask:(NSArray&lt;NSHTTPCookie *&gt;*;NSURLSessionTask*):void">
				<signature>NSHTTPCookieStorage+NSURLSessionTaskAdditions.-storeCookies:forTask:(NSArray&lt;NSHTTPCookie *&gt;*;NSURLSessionTask*):void</signature>
			</method>
		</class>
		<class name="UIApplication+UILocalNotifications" uniqueID="UIApplication+UILocalNotifications">
			<method accessibility="Public" methodKind="Member" name="-cancelAllLocalNotifications" uniqueID="-cancelAllLocalNotifications():void">
				<signature>UIApplication+UILocalNotifications.-cancelAllLocalNotifications():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-cancelLocalNotification:" uniqueID="-cancelLocalNotification:(UILocalNotification*):void">
				<signature>UIApplication+UILocalNotifications.-cancelLocalNotification:(UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentLocalNotificationNow:" uniqueID="-presentLocalNotificationNow:(UILocalNotification*):void">
				<signature>UIApplication+UILocalNotifications.-presentLocalNotificationNow:(UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scheduleLocalNotification:" uniqueID="-scheduleLocalNotification:(UILocalNotification*):void">
				<signature>UIApplication+UILocalNotifications.-scheduleLocalNotification:(UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scheduledLocalNotifications" uniqueID="-scheduledLocalNotifications():NSArray&lt;UILocalNotification *&gt;*">
				<signature>UIApplication+UILocalNotifications.-scheduledLocalNotifications():NSArray&lt;UILocalNotification *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScheduledLocalNotifications:" uniqueID="-setScheduledLocalNotifications:(NSArray&lt;UILocalNotification *&gt;*):void">
				<signature>UIApplication+UILocalNotifications.-setScheduledLocalNotifications:(NSArray&lt;UILocalNotification *&gt;*):void</signature>
			</method>
		</class>
		<class name="NSObject+CIImageProvider" uniqueID="NSObject+CIImageProvider">
			<method accessibility="Public" methodKind="Member" name="-provideImageData:bytesPerRow:origin::size::userInfo:" uniqueID="-provideImageData:bytesPerRow:origin::size::userInfo:(void*;size_t;size_t;size_t;size_t;size_t;id _Nullable):void">
				<signature>NSObject+CIImageProvider.-provideImageData:bytesPerRow:origin::size::userInfo:(void*;size_t;size_t;size_t;size_t;size_t;id _Nullable):void</signature>
			</method>
		</class>
		<class name="NSObject+CALayerDelegate" uniqueID="NSObject+CALayerDelegate">
			<method accessibility="Public" methodKind="Member" name="-actionForLayer:forKey:" uniqueID="-actionForLayer:forKey:(CALayer*;NSString*):objc_object&lt;CAAction&gt;*">
				<signature>NSObject+CALayerDelegate.-actionForLayer:forKey:(CALayer*;NSString*):objc_object&lt;CAAction&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-displayLayer:" uniqueID="-displayLayer:(CALayer*):void">
				<signature>NSObject+CALayerDelegate.-displayLayer:(CALayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawLayer:inContext:" uniqueID="-drawLayer:inContext:(CALayer*;struct CGContext*):void">
				<signature>NSObject+CALayerDelegate.-drawLayer:inContext:(CALayer*;struct CGContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutSublayersOfLayer:" uniqueID="-layoutSublayersOfLayer:(CALayer*):void">
				<signature>NSObject+CALayerDelegate.-layoutSublayersOfLayer:(CALayer*):void</signature>
			</method>
		</class>
		<class name="NSObject+CAAnimationDelegate" uniqueID="NSObject+CAAnimationDelegate">
			<method accessibility="Public" methodKind="Member" name="-animationDidStart:" uniqueID="-animationDidStart:(CAAnimation*):void">
				<signature>NSObject+CAAnimationDelegate.-animationDidStart:(CAAnimation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationDidStop:finished:" uniqueID="-animationDidStop:finished:(CAAnimation*;BOOL):void">
				<signature>NSObject+CAAnimationDelegate.-animationDidStop:finished:(CAAnimation*;BOOL):void</signature>
			</method>
		</class>
	</package>
	<package name="&lt;AppScanProtocol&gt;">
		<class name="UIWebViewDelegate" uniqueID="&lt;AppScanProtocol&gt;.UIWebViewDelegate">
			<method accessibility="Public" methodKind="Member" name="-webView:didFailLoadWithError:" uniqueID="-webView:didFailLoadWithError:(UIWebView*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.UIWebViewDelegate.-webView:didFailLoadWithError:(UIWebView*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-webView:shouldStartLoadWithRequest:navigationType:" uniqueID="-webView:shouldStartLoadWithRequest:navigationType:(UIWebView*;NSURLRequest*;UIWebViewNavigationType):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIWebViewDelegate.-webView:shouldStartLoadWithRequest:navigationType:(UIWebView*;NSURLRequest*;UIWebViewNavigationType):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-webViewDidFinishLoad:" uniqueID="-webViewDidFinishLoad:(UIWebView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIWebViewDelegate.-webViewDidFinishLoad:(UIWebView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-webViewDidStartLoad:" uniqueID="-webViewDidStartLoad:(UIWebView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIWebViewDelegate.-webViewDidStartLoad:(UIWebView*):void</signature>
			</method>
		</class>
		<class name="UIViewControllerTransitioningDelegate" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerTransitioningDelegate">
			<method accessibility="Public" methodKind="Member" name="-animationControllerForDismissedController:" uniqueID="-animationControllerForDismissedController:(UIViewController*):objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitioningDelegate.-animationControllerForDismissedController:(UIViewController*):objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationControllerForPresentedController:presentingController:sourceController:" uniqueID="-animationControllerForPresentedController:presentingController:sourceController:(UIViewController*;UIViewController*;UIViewController*):objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitioningDelegate.-animationControllerForPresentedController:presentingController:sourceController:(UIViewController*;UIViewController*;UIViewController*):objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-interactionControllerForDismissal:" uniqueID="-interactionControllerForDismissal:(objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*):objc_object&lt;UIViewControllerInteractiveTransitioning&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitioningDelegate.-interactionControllerForDismissal:(objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*):objc_object&lt;UIViewControllerInteractiveTransitioning&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-interactionControllerForPresentation:" uniqueID="-interactionControllerForPresentation:(objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*):objc_object&lt;UIViewControllerInteractiveTransitioning&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitioningDelegate.-interactionControllerForPresentation:(objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*):objc_object&lt;UIViewControllerInteractiveTransitioning&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentationControllerForPresentedViewController:presentingViewController:sourceViewController:" uniqueID="-presentationControllerForPresentedViewController:presentingViewController:sourceViewController:(UIViewController*;UIViewController*;UIViewController*):UIPresentationController*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitioningDelegate.-presentationControllerForPresentedViewController:presentingViewController:sourceViewController:(UIViewController*;UIViewController*;UIViewController*):UIPresentationController*</signature>
			</method>
		</class>
		<class name="UIViewControllerTransitionCoordinator" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinator">
			<method accessibility="Public" methodKind="Member" name="-animateAlongsideTransition:completion:" uniqueID="-animateAlongsideTransition:completion:((^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void;(^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinator.-animateAlongsideTransition:completion:((^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void;(^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animateAlongsideTransitionInView:animation:completion:" uniqueID="-animateAlongsideTransitionInView:animation:completion:(UIView*;(^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void;(^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinator.-animateAlongsideTransitionInView:animation:completion:(UIView*;(^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void;(^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-notifyWhenInteractionEndsUsingBlock:" uniqueID="-notifyWhenInteractionEndsUsingBlock:((^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinator.-notifyWhenInteractionEndsUsingBlock:((^)(objc_object&lt;UIViewControllerTransitionCoordinatorContext&gt;*):void):void</signature>
			</method>
		</class>
		<class name="UIViewControllerTransitionCoordinatorContext" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext">
			<method accessibility="Public" methodKind="Member" name="-completionCurve" uniqueID="-completionCurve():UIViewAnimationCurve">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-completionCurve():UIViewAnimationCurve</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-completionVelocity" uniqueID="-completionVelocity():CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-completionVelocity():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containerView" uniqueID="-containerView():UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-containerView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initiallyInteractive" uniqueID="-initiallyInteractive():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-initiallyInteractive():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAnimated" uniqueID="-isAnimated():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-isAnimated():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isCancelled" uniqueID="-isCancelled():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-isCancelled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInteractive" uniqueID="-isInteractive():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-isInteractive():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-percentComplete" uniqueID="-percentComplete():CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-percentComplete():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentationStyle" uniqueID="-presentationStyle():UIModalPresentationStyle">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-presentationStyle():UIModalPresentationStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-targetTransform" uniqueID="-targetTransform():CGAffineTransform">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-targetTransform():CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitionDuration" uniqueID="-transitionDuration():NSTimeInterval">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-transitionDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewControllerForKey:" uniqueID="-viewControllerForKey:(NSString*):__kindof UIViewController*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-viewControllerForKey:(NSString*):__kindof UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForKey:" uniqueID="-viewForKey:(NSString*):__kindof UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerTransitionCoordinatorContext.-viewForKey:(NSString*):__kindof UIView*</signature>
			</method>
		</class>
		<class name="UIViewControllerPreviewingDelegate" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerPreviewingDelegate">
			<method accessibility="Public" methodKind="Member" name="-previewingContext:commitViewController:" uniqueID="-previewingContext:commitViewController:(objc_object&lt;UIViewControllerPreviewing&gt;*;UIViewController*):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewingDelegate.-previewingContext:commitViewController:(objc_object&lt;UIViewControllerPreviewing&gt;*;UIViewController*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-previewingContext:viewControllerForLocation:" uniqueID="-previewingContext:viewControllerForLocation:(objc_object&lt;UIViewControllerPreviewing&gt;*;CGPoint):UIViewController*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewingDelegate.-previewingContext:viewControllerForLocation:(objc_object&lt;UIViewControllerPreviewing&gt;*;CGPoint):UIViewController*</signature>
			</method>
		</class>
		<class name="UIViewControllerPreviewing" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerPreviewing">
			<method accessibility="Public" methodKind="Member" name="-delegate" uniqueID="-delegate():objc_object&lt;UIViewControllerPreviewingDelegate&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewing.-delegate():objc_object&lt;UIViewControllerPreviewingDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-previewingGestureRecognizerForFailureRelationship" uniqueID="-previewingGestureRecognizerForFailureRelationship():UIGestureRecognizer*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewing.-previewingGestureRecognizerForFailureRelationship():UIGestureRecognizer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSourceRect:" uniqueID="-setSourceRect:(CGRect):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewing.-setSourceRect:(CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sourceRect" uniqueID="-sourceRect():CGRect">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewing.-sourceRect():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sourceView" uniqueID="-sourceView():UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerPreviewing.-sourceView():UIView*</signature>
			</method>
		</class>
		<class name="UIViewControllerInteractiveTransitioning" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerInteractiveTransitioning">
			<method accessibility="Public" methodKind="Member" name="-completionCurve" uniqueID="-completionCurve():UIViewAnimationCurve">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerInteractiveTransitioning.-completionCurve():UIViewAnimationCurve</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-completionSpeed" uniqueID="-completionSpeed():CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerInteractiveTransitioning.-completionSpeed():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-startInteractiveTransition:" uniqueID="-startInteractiveTransition:(objc_object&lt;UIViewControllerContextTransitioning&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerInteractiveTransitioning.-startInteractiveTransition:(objc_object&lt;UIViewControllerContextTransitioning&gt;*):void</signature>
			</method>
		</class>
		<class name="UIViewControllerContextTransitioning" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning">
			<method accessibility="Public" methodKind="Member" name="-cancelInteractiveTransition" uniqueID="-cancelInteractiveTransition():void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-cancelInteractiveTransition():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-completeTransition:" uniqueID="-completeTransition:(BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-completeTransition:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-containerView" uniqueID="-containerView():UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-containerView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-finalFrameForViewController:" uniqueID="-finalFrameForViewController:(UIViewController*):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-finalFrameForViewController:(UIViewController*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-finishInteractiveTransition" uniqueID="-finishInteractiveTransition():void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-finishInteractiveTransition():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initialFrameForViewController:" uniqueID="-initialFrameForViewController:(UIViewController*):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-initialFrameForViewController:(UIViewController*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isAnimated" uniqueID="-isAnimated():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-isAnimated():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isInteractive" uniqueID="-isInteractive():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-isInteractive():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentationStyle" uniqueID="-presentationStyle():UIModalPresentationStyle">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-presentationStyle():UIModalPresentationStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-targetTransform" uniqueID="-targetTransform():CGAffineTransform">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-targetTransform():CGAffineTransform</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitionWasCancelled" uniqueID="-transitionWasCancelled():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-transitionWasCancelled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateInteractiveTransition:" uniqueID="-updateInteractiveTransition:(CGFloat):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-updateInteractiveTransition:(CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewControllerForKey:" uniqueID="-viewControllerForKey:(NSString*):__kindof UIViewController*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-viewControllerForKey:(NSString*):__kindof UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForKey:" uniqueID="-viewForKey:(NSString*):__kindof UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerContextTransitioning.-viewForKey:(NSString*):__kindof UIView*</signature>
			</method>
		</class>
		<class name="UIViewControllerAnimatedTransitioning" uniqueID="&lt;AppScanProtocol&gt;.UIViewControllerAnimatedTransitioning">
			<method accessibility="Public" methodKind="Member" name="-animateTransition:" uniqueID="-animateTransition:(objc_object&lt;UIViewControllerContextTransitioning&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerAnimatedTransitioning.-animateTransition:(objc_object&lt;UIViewControllerContextTransitioning&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-animationEnded:" uniqueID="-animationEnded:(BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerAnimatedTransitioning.-animationEnded:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transitionDuration:" uniqueID="-transitionDuration:(objc_object&lt;UIViewControllerContextTransitioning&gt;*):NSTimeInterval">
				<signature>&lt;AppScanProtocol&gt;.UIViewControllerAnimatedTransitioning.-transitionDuration:(objc_object&lt;UIViewControllerContextTransitioning&gt;*):NSTimeInterval</signature>
			</method>
		</class>
		<class name="UITraitEnvironment" uniqueID="&lt;AppScanProtocol&gt;.UITraitEnvironment">
			<method accessibility="Public" methodKind="Member" name="-traitCollection" uniqueID="-traitCollection():UITraitCollection*">
				<signature>&lt;AppScanProtocol&gt;.UITraitEnvironment.-traitCollection():UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-traitCollectionDidChange:" uniqueID="-traitCollectionDidChange:(UITraitCollection*):void">
				<signature>&lt;AppScanProtocol&gt;.UITraitEnvironment.-traitCollectionDidChange:(UITraitCollection*):void</signature>
			</method>
		</class>
		<class name="UITextViewDelegate" uniqueID="&lt;AppScanProtocol&gt;.UITextViewDelegate">
			<method accessibility="Public" methodKind="Member" name="-textView:shouldChangeTextInRange:replacementText:" uniqueID="-textView:shouldChangeTextInRange:replacementText:(UITextView*;NSRange;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textView:shouldChangeTextInRange:replacementText:(UITextView*;NSRange;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textView:shouldInteractWithTextAttachment:inRange:" uniqueID="-textView:shouldInteractWithTextAttachment:inRange:(UITextView*;NSTextAttachment*;NSRange):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textView:shouldInteractWithTextAttachment:inRange:(UITextView*;NSTextAttachment*;NSRange):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textView:shouldInteractWithURL:inRange:" uniqueID="-textView:shouldInteractWithURL:inRange:(UITextView*;NSURL*;NSRange):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textView:shouldInteractWithURL:inRange:(UITextView*;NSURL*;NSRange):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textViewDidBeginEditing:" uniqueID="-textViewDidBeginEditing:(UITextView*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textViewDidBeginEditing:(UITextView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textViewDidChange:" uniqueID="-textViewDidChange:(UITextView*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textViewDidChange:(UITextView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textViewDidChangeSelection:" uniqueID="-textViewDidChangeSelection:(UITextView*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textViewDidChangeSelection:(UITextView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textViewDidEndEditing:" uniqueID="-textViewDidEndEditing:(UITextView*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textViewDidEndEditing:(UITextView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textViewShouldBeginEditing:" uniqueID="-textViewShouldBeginEditing:(UITextView*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textViewShouldBeginEditing:(UITextView*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textViewShouldEndEditing:" uniqueID="-textViewShouldEndEditing:(UITextView*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextViewDelegate.-textViewShouldEndEditing:(UITextView*):BOOL</signature>
			</method>
		</class>
		<class name="UITextInputTokenizer" uniqueID="&lt;AppScanProtocol&gt;.UITextInputTokenizer">
			<method accessibility="Public" methodKind="Member" name="-isPosition:atBoundary:inDirection:" uniqueID="-isPosition:atBoundary:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTokenizer.-isPosition:atBoundary:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isPosition:withinTextUnit:inDirection:" uniqueID="-isPosition:withinTextUnit:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTokenizer.-isPosition:withinTextUnit:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-positionFromPosition:toBoundary:inDirection:" uniqueID="-positionFromPosition:toBoundary:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTokenizer.-positionFromPosition:toBoundary:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rangeEnclosingPosition:withGranularity:inDirection:" uniqueID="-rangeEnclosingPosition:withGranularity:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):UITextRange*">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTokenizer.-rangeEnclosingPosition:withGranularity:inDirection:(UITextPosition*;UITextGranularity;UITextDirection):UITextRange*</signature>
			</method>
		</class>
		<class name="UITextInput" uniqueID="&lt;AppScanProtocol&gt;.UITextInput">
			<method accessibility="Public" methodKind="Member" name="-baseWritingDirectionForPosition:inDirection:" uniqueID="-baseWritingDirectionForPosition:inDirection:(UITextPosition*;UITextStorageDirection):UITextWritingDirection">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-baseWritingDirectionForPosition:inDirection:(UITextPosition*;UITextStorageDirection):UITextWritingDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginFloatingCursorAtPoint:" uniqueID="-beginFloatingCursorAtPoint:(CGPoint):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-beginFloatingCursorAtPoint:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginningOfDocument" uniqueID="-beginningOfDocument():UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-beginningOfDocument():UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-caretRectForPosition:" uniqueID="-caretRectForPosition:(UITextPosition*):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-caretRectForPosition:(UITextPosition*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterOffsetOfPosition:withinRange:" uniqueID="-characterOffsetOfPosition:withinRange:(UITextPosition*;UITextRange*):NSInteger">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-characterOffsetOfPosition:withinRange:(UITextPosition*;UITextRange*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterRangeAtPoint:" uniqueID="-characterRangeAtPoint:(CGPoint):UITextRange*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-characterRangeAtPoint:(CGPoint):UITextRange*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-characterRangeByExtendingPosition:inDirection:" uniqueID="-characterRangeByExtendingPosition:inDirection:(UITextPosition*;UITextLayoutDirection):UITextRange*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-characterRangeByExtendingPosition:inDirection:(UITextPosition*;UITextLayoutDirection):UITextRange*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-closestPositionToPoint:" uniqueID="-closestPositionToPoint:(CGPoint):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-closestPositionToPoint:(CGPoint):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-closestPositionToPoint:withinRange:" uniqueID="-closestPositionToPoint:withinRange:(CGPoint;UITextRange*):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-closestPositionToPoint:withinRange:(CGPoint;UITextRange*):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-comparePosition:toPosition:" uniqueID="-comparePosition:toPosition:(UITextPosition*;UITextPosition*):NSComparisonResult">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-comparePosition:toPosition:(UITextPosition*;UITextPosition*):NSComparisonResult</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dictationRecognitionFailed" uniqueID="-dictationRecognitionFailed():void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-dictationRecognitionFailed():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dictationRecordingDidEnd" uniqueID="-dictationRecordingDidEnd():void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-dictationRecordingDidEnd():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endFloatingCursor" uniqueID="-endFloatingCursor():void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-endFloatingCursor():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endOfDocument" uniqueID="-endOfDocument():UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-endOfDocument():UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-firstRectForRange:" uniqueID="-firstRectForRange:(UITextRange*):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-firstRectForRange:(UITextRange*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-frameForDictationResultPlaceholder:" uniqueID="-frameForDictationResultPlaceholder:(id _Nonnull):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-frameForDictationResultPlaceholder:(id _Nonnull):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputDelegate" uniqueID="-inputDelegate():objc_object&lt;UITextInputDelegate&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-inputDelegate():objc_object&lt;UITextInputDelegate&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertDictationResult:" uniqueID="-insertDictationResult:(NSArray&lt;UIDictationPhrase *&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-insertDictationResult:(NSArray&lt;UIDictationPhrase *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertDictationResultPlaceholder" uniqueID="-insertDictationResultPlaceholder():id _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-insertDictationResultPlaceholder():id _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-markedTextRange" uniqueID="-markedTextRange():UITextRange*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-markedTextRange():UITextRange*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-markedTextStyle" uniqueID="-markedTextStyle():NSDictionary*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-markedTextStyle():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-offsetFromPosition:toPosition:" uniqueID="-offsetFromPosition:toPosition:(UITextPosition*;UITextPosition*):NSInteger">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-offsetFromPosition:toPosition:(UITextPosition*;UITextPosition*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-positionFromPosition:inDirection:offset:" uniqueID="-positionFromPosition:inDirection:offset:(UITextPosition*;UITextLayoutDirection;NSInteger):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-positionFromPosition:inDirection:offset:(UITextPosition*;UITextLayoutDirection;NSInteger):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-positionFromPosition:offset:" uniqueID="-positionFromPosition:offset:(UITextPosition*;NSInteger):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-positionFromPosition:offset:(UITextPosition*;NSInteger):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-positionWithinRange:atCharacterOffset:" uniqueID="-positionWithinRange:atCharacterOffset:(UITextRange*;NSInteger):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-positionWithinRange:atCharacterOffset:(UITextRange*;NSInteger):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-positionWithinRange:farthestInDirection:" uniqueID="-positionWithinRange:farthestInDirection:(UITextRange*;UITextLayoutDirection):UITextPosition*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-positionWithinRange:farthestInDirection:(UITextRange*;UITextLayoutDirection):UITextPosition*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-removeDictationResultPlaceholder:willInsertResult:" uniqueID="-removeDictationResultPlaceholder:willInsertResult:(id _Nonnull;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-removeDictationResultPlaceholder:willInsertResult:(id _Nonnull;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceRange:withText:" uniqueID="-replaceRange:withText:(UITextRange*;NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-replaceRange:withText:(UITextRange*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectedTextRange" uniqueID="-selectedTextRange():UITextRange*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-selectedTextRange():UITextRange*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectionAffinity" uniqueID="-selectionAffinity():UITextStorageDirection">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-selectionAffinity():UITextStorageDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectionRectsForRange:" uniqueID="-selectionRectsForRange:(UITextRange*):NSArray*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-selectionRectsForRange:(UITextRange*):NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBaseWritingDirection:forRange:" uniqueID="-setBaseWritingDirection:forRange:(UITextWritingDirection;UITextRange*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-setBaseWritingDirection:forRange:(UITextWritingDirection;UITextRange*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setInputDelegate:" uniqueID="-setInputDelegate:(objc_object&lt;UITextInputDelegate&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-setInputDelegate:(objc_object&lt;UITextInputDelegate&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMarkedText:selectedRange:" uniqueID="-setMarkedText:selectedRange:(NSString*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-setMarkedText:selectedRange:(NSString*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setMarkedTextStyle:" uniqueID="-setMarkedTextStyle:(NSDictionary*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-setMarkedTextStyle:(NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectedTextRange:" uniqueID="-setSelectedTextRange:(UITextRange*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-setSelectedTextRange:(UITextRange*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSelectionAffinity:" uniqueID="-setSelectionAffinity:(UITextStorageDirection):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-setSelectionAffinity:(UITextStorageDirection):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldChangeTextInRange:replacementText:" uniqueID="-shouldChangeTextInRange:replacementText:(UITextRange*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-shouldChangeTextInRange:replacementText:(UITextRange*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textInRange:" uniqueID="-textInRange:(UITextRange*):NSString*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-textInRange:(UITextRange*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textInputView" uniqueID="-textInputView():__kindof UIView*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-textInputView():__kindof UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textRangeFromPosition:toPosition:" uniqueID="-textRangeFromPosition:toPosition:(UITextPosition*;UITextPosition*):UITextRange*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-textRangeFromPosition:toPosition:(UITextPosition*;UITextPosition*):UITextRange*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textStylingAtPosition:inDirection:" uniqueID="-textStylingAtPosition:inDirection:(UITextPosition*;UITextStorageDirection):NSDictionary&lt;NSString *,id&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-textStylingAtPosition:inDirection:(UITextPosition*;UITextStorageDirection):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tokenizer" uniqueID="-tokenizer():objc_object&lt;UITextInputTokenizer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-tokenizer():objc_object&lt;UITextInputTokenizer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-unmarkText" uniqueID="-unmarkText():void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-unmarkText():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateFloatingCursorAtPoint:" uniqueID="-updateFloatingCursorAtPoint:(CGPoint):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInput.-updateFloatingCursorAtPoint:(CGPoint):void</signature>
			</method>
		</class>
		<class name="UITextFieldDelegate" uniqueID="&lt;AppScanProtocol&gt;.UITextFieldDelegate">
			<method accessibility="Public" methodKind="Member" name="-textField:shouldChangeCharactersInRange:replacementString:" uniqueID="-textField:shouldChangeCharactersInRange:replacementString:(UITextField*;NSRange;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textField:shouldChangeCharactersInRange:replacementString:(UITextField*;NSRange;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldDidBeginEditing:" uniqueID="-textFieldDidBeginEditing:(UITextField*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textFieldDidBeginEditing:(UITextField*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldDidEndEditing:" uniqueID="-textFieldDidEndEditing:(UITextField*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textFieldDidEndEditing:(UITextField*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldShouldBeginEditing:" uniqueID="-textFieldShouldBeginEditing:(UITextField*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textFieldShouldBeginEditing:(UITextField*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldShouldClear:" uniqueID="-textFieldShouldClear:(UITextField*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textFieldShouldClear:(UITextField*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldShouldEndEditing:" uniqueID="-textFieldShouldEndEditing:(UITextField*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textFieldShouldEndEditing:(UITextField*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textFieldShouldReturn:" uniqueID="-textFieldShouldReturn:(UITextField*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextFieldDelegate.-textFieldShouldReturn:(UITextField*):BOOL</signature>
			</method>
		</class>
		<class name="UITableViewDelegate" uniqueID="&lt;AppScanProtocol&gt;.UITableViewDelegate">
			<method accessibility="Public" methodKind="Member" name="-indexPathForPreferredFocusedViewInTableView:" uniqueID="-indexPathForPreferredFocusedViewInTableView:(UITableView*):NSIndexPath*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-indexPathForPreferredFocusedViewInTableView:(UITableView*):NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:accessoryButtonTappedForRowWithIndexPath:" uniqueID="-tableView:accessoryButtonTappedForRowWithIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:accessoryButtonTappedForRowWithIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:accessoryTypeForRowWithIndexPath:" uniqueID="-tableView:accessoryTypeForRowWithIndexPath:(UITableView*;NSIndexPath*):UITableViewCellAccessoryType">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:accessoryTypeForRowWithIndexPath:(UITableView*;NSIndexPath*):UITableViewCellAccessoryType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:canFocusRowAtIndexPath:" uniqueID="-tableView:canFocusRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:canFocusRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:canPerformAction:forRowAtIndexPath:withSender:" uniqueID="-tableView:canPerformAction:forRowAtIndexPath:withSender:(UITableView*;SEL _Nonnull;NSIndexPath*;id _Nullable):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:canPerformAction:forRowAtIndexPath:withSender:(UITableView*;SEL _Nonnull;NSIndexPath*;id _Nullable):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didDeselectRowAtIndexPath:" uniqueID="-tableView:didDeselectRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didDeselectRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didEndDisplayingCell:forRowAtIndexPath:" uniqueID="-tableView:didEndDisplayingCell:forRowAtIndexPath:(UITableView*;UITableViewCell*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didEndDisplayingCell:forRowAtIndexPath:(UITableView*;UITableViewCell*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didEndDisplayingFooterView:forSection:" uniqueID="-tableView:didEndDisplayingFooterView:forSection:(UITableView*;UIView*;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didEndDisplayingFooterView:forSection:(UITableView*;UIView*;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didEndDisplayingHeaderView:forSection:" uniqueID="-tableView:didEndDisplayingHeaderView:forSection:(UITableView*;UIView*;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didEndDisplayingHeaderView:forSection:(UITableView*;UIView*;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didEndEditingRowAtIndexPath:" uniqueID="-tableView:didEndEditingRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didEndEditingRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didHighlightRowAtIndexPath:" uniqueID="-tableView:didHighlightRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didHighlightRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didSelectRowAtIndexPath:" uniqueID="-tableView:didSelectRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didSelectRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didUnhighlightRowAtIndexPath:" uniqueID="-tableView:didUnhighlightRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didUnhighlightRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:didUpdateFocusInContext:withAnimationCoordinator:" uniqueID="-tableView:didUpdateFocusInContext:withAnimationCoordinator:(UITableView*;UITableViewFocusUpdateContext*;UIFocusAnimationCoordinator*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:didUpdateFocusInContext:withAnimationCoordinator:(UITableView*;UITableViewFocusUpdateContext*;UIFocusAnimationCoordinator*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:editActionsForRowAtIndexPath:" uniqueID="-tableView:editActionsForRowAtIndexPath:(UITableView*;NSIndexPath*):NSArray&lt;UITableViewRowAction *&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:editActionsForRowAtIndexPath:(UITableView*;NSIndexPath*):NSArray&lt;UITableViewRowAction *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:editingStyleForRowAtIndexPath:" uniqueID="-tableView:editingStyleForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCellEditingStyle">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:editingStyleForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCellEditingStyle</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:estimatedHeightForFooterInSection:" uniqueID="-tableView:estimatedHeightForFooterInSection:(UITableView*;NSInteger):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:estimatedHeightForFooterInSection:(UITableView*;NSInteger):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:estimatedHeightForHeaderInSection:" uniqueID="-tableView:estimatedHeightForHeaderInSection:(UITableView*;NSInteger):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:estimatedHeightForHeaderInSection:(UITableView*;NSInteger):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:estimatedHeightForRowAtIndexPath:" uniqueID="-tableView:estimatedHeightForRowAtIndexPath:(UITableView*;NSIndexPath*):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:estimatedHeightForRowAtIndexPath:(UITableView*;NSIndexPath*):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:heightForFooterInSection:" uniqueID="-tableView:heightForFooterInSection:(UITableView*;NSInteger):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:heightForFooterInSection:(UITableView*;NSInteger):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:heightForHeaderInSection:" uniqueID="-tableView:heightForHeaderInSection:(UITableView*;NSInteger):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:heightForHeaderInSection:(UITableView*;NSInteger):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:heightForRowAtIndexPath:" uniqueID="-tableView:heightForRowAtIndexPath:(UITableView*;NSIndexPath*):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:heightForRowAtIndexPath:(UITableView*;NSIndexPath*):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:indentationLevelForRowAtIndexPath:" uniqueID="-tableView:indentationLevelForRowAtIndexPath:(UITableView*;NSIndexPath*):NSInteger">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:indentationLevelForRowAtIndexPath:(UITableView*;NSIndexPath*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:performAction:forRowAtIndexPath:withSender:" uniqueID="-tableView:performAction:forRowAtIndexPath:withSender:(UITableView*;SEL _Nonnull;NSIndexPath*;id _Nullable):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:performAction:forRowAtIndexPath:withSender:(UITableView*;SEL _Nonnull;NSIndexPath*;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:shouldHighlightRowAtIndexPath:" uniqueID="-tableView:shouldHighlightRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:shouldHighlightRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:shouldIndentWhileEditingRowAtIndexPath:" uniqueID="-tableView:shouldIndentWhileEditingRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:shouldIndentWhileEditingRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:shouldShowMenuForRowAtIndexPath:" uniqueID="-tableView:shouldShowMenuForRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:shouldShowMenuForRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:shouldUpdateFocusInContext:" uniqueID="-tableView:shouldUpdateFocusInContext:(UITableView*;UITableViewFocusUpdateContext*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:shouldUpdateFocusInContext:(UITableView*;UITableViewFocusUpdateContext*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:" uniqueID="-tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:(UITableView*;NSIndexPath*;NSIndexPath*):NSIndexPath*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:(UITableView*;NSIndexPath*;NSIndexPath*):NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:" uniqueID="-tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:(UITableView*;NSIndexPath*):NSString*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:(UITableView*;NSIndexPath*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:viewForFooterInSection:" uniqueID="-tableView:viewForFooterInSection:(UITableView*;NSInteger):UIView*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:viewForFooterInSection:(UITableView*;NSInteger):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:viewForHeaderInSection:" uniqueID="-tableView:viewForHeaderInSection:(UITableView*;NSInteger):UIView*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:viewForHeaderInSection:(UITableView*;NSInteger):UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:willBeginEditingRowAtIndexPath:" uniqueID="-tableView:willBeginEditingRowAtIndexPath:(UITableView*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:willBeginEditingRowAtIndexPath:(UITableView*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:willDeselectRowAtIndexPath:" uniqueID="-tableView:willDeselectRowAtIndexPath:(UITableView*;NSIndexPath*):NSIndexPath*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:willDeselectRowAtIndexPath:(UITableView*;NSIndexPath*):NSIndexPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:willDisplayCell:forRowAtIndexPath:" uniqueID="-tableView:willDisplayCell:forRowAtIndexPath:(UITableView*;UITableViewCell*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:willDisplayCell:forRowAtIndexPath:(UITableView*;UITableViewCell*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:willDisplayFooterView:forSection:" uniqueID="-tableView:willDisplayFooterView:forSection:(UITableView*;UIView*;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:willDisplayFooterView:forSection:(UITableView*;UIView*;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:willDisplayHeaderView:forSection:" uniqueID="-tableView:willDisplayHeaderView:forSection:(UITableView*;UIView*;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:willDisplayHeaderView:forSection:(UITableView*;UIView*;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:willSelectRowAtIndexPath:" uniqueID="-tableView:willSelectRowAtIndexPath:(UITableView*;NSIndexPath*):NSIndexPath*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDelegate.-tableView:willSelectRowAtIndexPath:(UITableView*;NSIndexPath*):NSIndexPath*</signature>
			</method>
		</class>
		<class name="UITableViewDataSource" uniqueID="&lt;AppScanProtocol&gt;.UITableViewDataSource">
			<method accessibility="Public" methodKind="Member" name="-numberOfSectionsInTableView:" uniqueID="-numberOfSectionsInTableView:(UITableView*):NSInteger">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-numberOfSectionsInTableView:(UITableView*):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sectionIndexTitlesForTableView:" uniqueID="-sectionIndexTitlesForTableView:(UITableView*):NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-sectionIndexTitlesForTableView:(UITableView*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:canEditRowAtIndexPath:" uniqueID="-tableView:canEditRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:canEditRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:canMoveRowAtIndexPath:" uniqueID="-tableView:canMoveRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:canMoveRowAtIndexPath:(UITableView*;NSIndexPath*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:cellForRowAtIndexPath:" uniqueID="-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:cellForRowAtIndexPath:(UITableView*;NSIndexPath*):UITableViewCell*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:commitEditingStyle:forRowAtIndexPath:" uniqueID="-tableView:commitEditingStyle:forRowAtIndexPath:(UITableView*;UITableViewCellEditingStyle;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:commitEditingStyle:forRowAtIndexPath:(UITableView*;UITableViewCellEditingStyle;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:moveRowAtIndexPath:toIndexPath:" uniqueID="-tableView:moveRowAtIndexPath:toIndexPath:(UITableView*;NSIndexPath*;NSIndexPath*):void">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:moveRowAtIndexPath:toIndexPath:(UITableView*;NSIndexPath*;NSIndexPath*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:numberOfRowsInSection:" uniqueID="-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:numberOfRowsInSection:(UITableView*;NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:sectionForSectionIndexTitle:atIndex:" uniqueID="-tableView:sectionForSectionIndexTitle:atIndex:(UITableView*;NSString*;NSInteger):NSInteger">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:sectionForSectionIndexTitle:atIndex:(UITableView*;NSString*;NSInteger):NSInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:titleForFooterInSection:" uniqueID="-tableView:titleForFooterInSection:(UITableView*;NSInteger):NSString*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:titleForFooterInSection:(UITableView*;NSInteger):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tableView:titleForHeaderInSection:" uniqueID="-tableView:titleForHeaderInSection:(UITableView*;NSInteger):NSString*">
				<signature>&lt;AppScanProtocol&gt;.UITableViewDataSource.-tableView:titleForHeaderInSection:(UITableView*;NSInteger):NSString*</signature>
			</method>
		</class>
		<class name="UITabBarDelegate" uniqueID="&lt;AppScanProtocol&gt;.UITabBarDelegate">
			<method accessibility="Public" methodKind="Member" name="-tabBar:didBeginCustomizingItems:" uniqueID="-tabBar:didBeginCustomizingItems:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITabBarDelegate.-tabBar:didBeginCustomizingItems:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBar:didEndCustomizingItems:changed:" uniqueID="-tabBar:didEndCustomizingItems:changed:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UITabBarDelegate.-tabBar:didEndCustomizingItems:changed:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBar:didSelectItem:" uniqueID="-tabBar:didSelectItem:(UITabBar*;UITabBarItem*):void">
				<signature>&lt;AppScanProtocol&gt;.UITabBarDelegate.-tabBar:didSelectItem:(UITabBar*;UITabBarItem*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBar:willBeginCustomizingItems:" uniqueID="-tabBar:willBeginCustomizingItems:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITabBarDelegate.-tabBar:willBeginCustomizingItems:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-tabBar:willEndCustomizingItems:changed:" uniqueID="-tabBar:willEndCustomizingItems:changed:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UITabBarDelegate.-tabBar:willEndCustomizingItems:changed:(UITabBar*;NSArray&lt;UITabBarItem *&gt;*;BOOL):void</signature>
			</method>
		</class>
		<class name="UIStateRestoring" uniqueID="&lt;AppScanProtocol&gt;.UIStateRestoring">
			<method accessibility="Public" methodKind="Member" name="-applicationFinishedRestoringState" uniqueID="-applicationFinishedRestoringState():void">
				<signature>&lt;AppScanProtocol&gt;.UIStateRestoring.-applicationFinishedRestoringState():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-decodeRestorableStateWithCoder:" uniqueID="-decodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>&lt;AppScanProtocol&gt;.UIStateRestoring.-decodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-encodeRestorableStateWithCoder:" uniqueID="-encodeRestorableStateWithCoder:(NSCoder*):void">
				<signature>&lt;AppScanProtocol&gt;.UIStateRestoring.-encodeRestorableStateWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-objectRestorationClass" uniqueID="-objectRestorationClass():objc_class&lt;UIObjectRestoration&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIStateRestoring.-objectRestorationClass():objc_class&lt;UIObjectRestoration&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-restorationParent" uniqueID="-restorationParent():objc_object&lt;UIStateRestoring&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UIStateRestoring.-restorationParent():objc_object&lt;UIStateRestoring&gt;*</signature>
			</method>
		</class>
		<class name="UIScrollViewDelegate" uniqueID="&lt;AppScanProtocol&gt;.UIScrollViewDelegate">
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidEndDecelerating:" uniqueID="-scrollViewDidEndDecelerating:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidEndDecelerating:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidEndDragging:willDecelerate:" uniqueID="-scrollViewDidEndDragging:willDecelerate:(UIScrollView*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidEndDragging:willDecelerate:(UIScrollView*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidEndScrollingAnimation:" uniqueID="-scrollViewDidEndScrollingAnimation:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidEndScrollingAnimation:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidEndZooming:withView:atScale:" uniqueID="-scrollViewDidEndZooming:withView:atScale:(UIScrollView*;UIView*;CGFloat):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidEndZooming:withView:atScale:(UIScrollView*;UIView*;CGFloat):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidScroll:" uniqueID="-scrollViewDidScroll:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidScroll:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidScrollToTop:" uniqueID="-scrollViewDidScrollToTop:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidScrollToTop:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewDidZoom:" uniqueID="-scrollViewDidZoom:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewDidZoom:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewShouldScrollToTop:" uniqueID="-scrollViewShouldScrollToTop:(UIScrollView*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewShouldScrollToTop:(UIScrollView*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewWillBeginDecelerating:" uniqueID="-scrollViewWillBeginDecelerating:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewWillBeginDecelerating:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewWillBeginDragging:" uniqueID="-scrollViewWillBeginDragging:(UIScrollView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewWillBeginDragging:(UIScrollView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewWillBeginZooming:withView:" uniqueID="-scrollViewWillBeginZooming:withView:(UIScrollView*;UIView*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewWillBeginZooming:withView:(UIScrollView*;UIView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-scrollViewWillEndDragging:withVelocity:targetContentOffset:" uniqueID="-scrollViewWillEndDragging:withVelocity:targetContentOffset:(UIScrollView*;CGPoint;CGPoint*):void">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-scrollViewWillEndDragging:withVelocity:targetContentOffset:(UIScrollView*;CGPoint;CGPoint*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewForZoomingInScrollView:" uniqueID="-viewForZoomingInScrollView:(UIScrollView*):UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIScrollViewDelegate.-viewForZoomingInScrollView:(UIScrollView*):UIView*</signature>
			</method>
		</class>
		<class name="UITextInputDelegate" uniqueID="&lt;AppScanProtocol&gt;.UITextInputDelegate">
			<method accessibility="Public" methodKind="Member" name="-selectionDidChange:" uniqueID="-selectionDidChange:(objc_object&lt;UITextInput&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputDelegate.-selectionDidChange:(objc_object&lt;UITextInput&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-selectionWillChange:" uniqueID="-selectionWillChange:(objc_object&lt;UITextInput&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputDelegate.-selectionWillChange:(objc_object&lt;UITextInput&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textDidChange:" uniqueID="-textDidChange:(objc_object&lt;UITextInput&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputDelegate.-textDidChange:(objc_object&lt;UITextInput&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textWillChange:" uniqueID="-textWillChange:(objc_object&lt;UITextInput&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputDelegate.-textWillChange:(objc_object&lt;UITextInput&gt;*):void</signature>
			</method>
		</class>
		<class name="UIKeyInput" uniqueID="&lt;AppScanProtocol&gt;.UIKeyInput">
			<method accessibility="Public" methodKind="Member" name="-deleteBackward" uniqueID="-deleteBackward():void">
				<signature>&lt;AppScanProtocol&gt;.UIKeyInput.-deleteBackward():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hasText" uniqueID="-hasText():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIKeyInput.-hasText():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertText:" uniqueID="-insertText:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.UIKeyInput.-insertText:(NSString*):void</signature>
			</method>
		</class>
		<class name="UIGestureRecognizerDelegate" uniqueID="&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate">
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:" uniqueID="-gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer*;UIGestureRecognizer*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate.-gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer*;UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizer:shouldReceivePress:" uniqueID="-gestureRecognizer:shouldReceivePress:(UIGestureRecognizer*;UIPress*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate.-gestureRecognizer:shouldReceivePress:(UIGestureRecognizer*;UIPress*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizer:shouldReceiveTouch:" uniqueID="-gestureRecognizer:shouldReceiveTouch:(UIGestureRecognizer*;UITouch*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate.-gestureRecognizer:shouldReceiveTouch:(UIGestureRecognizer*;UITouch*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:" uniqueID="-gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer*;UIGestureRecognizer*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate.-gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer*;UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizer:shouldRequireFailureOfGestureRecognizer:" uniqueID="-gestureRecognizer:shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer*;UIGestureRecognizer*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate.-gestureRecognizer:shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer*;UIGestureRecognizer*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-gestureRecognizerShouldBegin:" uniqueID="-gestureRecognizerShouldBegin:(UIGestureRecognizer*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIGestureRecognizerDelegate.-gestureRecognizerShouldBegin:(UIGestureRecognizer*):BOOL</signature>
			</method>
		</class>
		<class name="UITextInputTraits" uniqueID="&lt;AppScanProtocol&gt;.UITextInputTraits">
			<method accessibility="Public" methodKind="Member" name="-autocapitalizationType" uniqueID="-autocapitalizationType():UITextAutocapitalizationType">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-autocapitalizationType():UITextAutocapitalizationType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-autocorrectionType" uniqueID="-autocorrectionType():UITextAutocorrectionType">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-autocorrectionType():UITextAutocorrectionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enablesReturnKeyAutomatically" uniqueID="-enablesReturnKeyAutomatically():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-enablesReturnKeyAutomatically():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isSecureTextEntry" uniqueID="-isSecureTextEntry():BOOL">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-isSecureTextEntry():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyboardAppearance" uniqueID="-keyboardAppearance():UIKeyboardAppearance">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-keyboardAppearance():UIKeyboardAppearance</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-keyboardType" uniqueID="-keyboardType():UIKeyboardType">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-keyboardType():UIKeyboardType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-returnKeyType" uniqueID="-returnKeyType():UIReturnKeyType">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-returnKeyType():UIReturnKeyType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutocapitalizationType:" uniqueID="-setAutocapitalizationType:(UITextAutocapitalizationType):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setAutocapitalizationType:(UITextAutocapitalizationType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutocorrectionType:" uniqueID="-setAutocorrectionType:(UITextAutocorrectionType):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setAutocorrectionType:(UITextAutocorrectionType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setEnablesReturnKeyAutomatically:" uniqueID="-setEnablesReturnKeyAutomatically:(BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setEnablesReturnKeyAutomatically:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setKeyboardAppearance:" uniqueID="-setKeyboardAppearance:(UIKeyboardAppearance):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setKeyboardAppearance:(UIKeyboardAppearance):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setKeyboardType:" uniqueID="-setKeyboardType:(UIKeyboardType):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setKeyboardType:(UIKeyboardType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setReturnKeyType:" uniqueID="-setReturnKeyType:(UIReturnKeyType):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setReturnKeyType:(UIReturnKeyType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSecureTextEntry:" uniqueID="-setSecureTextEntry:(BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setSecureTextEntry:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSpellCheckingType:" uniqueID="-setSpellCheckingType:(UITextSpellCheckingType):void">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-setSpellCheckingType:(UITextSpellCheckingType):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-spellCheckingType" uniqueID="-spellCheckingType():UITextSpellCheckingType">
				<signature>&lt;AppScanProtocol&gt;.UITextInputTraits.-spellCheckingType():UITextSpellCheckingType</signature>
			</method>
		</class>
		<class name="UIFocusEnvironment" uniqueID="&lt;AppScanProtocol&gt;.UIFocusEnvironment">
			<method accessibility="Public" methodKind="Member" name="-didUpdateFocusInContext:withAnimationCoordinator:" uniqueID="-didUpdateFocusInContext:withAnimationCoordinator:(UIFocusUpdateContext*;UIFocusAnimationCoordinator*):void">
				<signature>&lt;AppScanProtocol&gt;.UIFocusEnvironment.-didUpdateFocusInContext:withAnimationCoordinator:(UIFocusUpdateContext*;UIFocusAnimationCoordinator*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredFocusedView" uniqueID="-preferredFocusedView():UIView*">
				<signature>&lt;AppScanProtocol&gt;.UIFocusEnvironment.-preferredFocusedView():UIView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setNeedsFocusUpdate" uniqueID="-setNeedsFocusUpdate():void">
				<signature>&lt;AppScanProtocol&gt;.UIFocusEnvironment.-setNeedsFocusUpdate():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-shouldUpdateFocusInContext:" uniqueID="-shouldUpdateFocusInContext:(UIFocusUpdateContext*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIFocusEnvironment.-shouldUpdateFocusInContext:(UIFocusUpdateContext*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-updateFocusIfNeeded" uniqueID="-updateFocusIfNeeded():void">
				<signature>&lt;AppScanProtocol&gt;.UIFocusEnvironment.-updateFocusIfNeeded():void</signature>
			</method>
		</class>
		<class name="UIDynamicItem" uniqueID="&lt;AppScanProtocol&gt;.UIDynamicItem">
			<method accessibility="Public" methodKind="Member" name="-bounds" uniqueID="-bounds():CGRect">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-bounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-center" uniqueID="-center():CGPoint">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-center():CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-collisionBoundingPath" uniqueID="-collisionBoundingPath():UIBezierPath*">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-collisionBoundingPath():UIBezierPath*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-collisionBoundsType" uniqueID="-collisionBoundsType():UIDynamicItemCollisionBoundsType">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-collisionBoundsType():UIDynamicItemCollisionBoundsType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCenter:" uniqueID="-setCenter:(CGPoint):void">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-setCenter:(CGPoint):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTransform:" uniqueID="-setTransform:(CGAffineTransform):void">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-setTransform:(CGAffineTransform):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-transform" uniqueID="-transform():CGAffineTransform">
				<signature>&lt;AppScanProtocol&gt;.UIDynamicItem.-transform():CGAffineTransform</signature>
			</method>
		</class>
		<class name="UICoordinateSpace" uniqueID="&lt;AppScanProtocol&gt;.UICoordinateSpace">
			<method accessibility="Public" methodKind="Member" name="-bounds" uniqueID="-bounds():CGRect">
				<signature>&lt;AppScanProtocol&gt;.UICoordinateSpace.-bounds():CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:fromCoordinateSpace:" uniqueID="-convertPoint:fromCoordinateSpace:(CGPoint;objc_object&lt;UICoordinateSpace&gt;*):CGPoint">
				<signature>&lt;AppScanProtocol&gt;.UICoordinateSpace.-convertPoint:fromCoordinateSpace:(CGPoint;objc_object&lt;UICoordinateSpace&gt;*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertPoint:toCoordinateSpace:" uniqueID="-convertPoint:toCoordinateSpace:(CGPoint;objc_object&lt;UICoordinateSpace&gt;*):CGPoint">
				<signature>&lt;AppScanProtocol&gt;.UICoordinateSpace.-convertPoint:toCoordinateSpace:(CGPoint;objc_object&lt;UICoordinateSpace&gt;*):CGPoint</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:fromCoordinateSpace:" uniqueID="-convertRect:fromCoordinateSpace:(CGRect;objc_object&lt;UICoordinateSpace&gt;*):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UICoordinateSpace.-convertRect:fromCoordinateSpace:(CGRect;objc_object&lt;UICoordinateSpace&gt;*):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-convertRect:toCoordinateSpace:" uniqueID="-convertRect:toCoordinateSpace:(CGRect;objc_object&lt;UICoordinateSpace&gt;*):CGRect">
				<signature>&lt;AppScanProtocol&gt;.UICoordinateSpace.-convertRect:toCoordinateSpace:(CGRect;objc_object&lt;UICoordinateSpace&gt;*):CGRect</signature>
			</method>
		</class>
		<class name="UIContentContainer" uniqueID="&lt;AppScanProtocol&gt;.UIContentContainer">
			<method accessibility="Public" methodKind="Member" name="-preferredContentSize" uniqueID="-preferredContentSize():CGSize">
				<signature>&lt;AppScanProtocol&gt;.UIContentContainer.-preferredContentSize():CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-preferredContentSizeDidChangeForChildContentContainer:" uniqueID="-preferredContentSizeDidChangeForChildContentContainer:(objc_object&lt;UIContentContainer&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UIContentContainer.-preferredContentSizeDidChangeForChildContentContainer:(objc_object&lt;UIContentContainer&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sizeForChildContentContainer:withParentContainerSize:" uniqueID="-sizeForChildContentContainer:withParentContainerSize:(objc_object&lt;UIContentContainer&gt;*;CGSize):CGSize">
				<signature>&lt;AppScanProtocol&gt;.UIContentContainer.-sizeForChildContentContainer:withParentContainerSize:(objc_object&lt;UIContentContainer&gt;*;CGSize):CGSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-systemLayoutFittingSizeDidChangeForChildContentContainer:" uniqueID="-systemLayoutFittingSizeDidChangeForChildContentContainer:(objc_object&lt;UIContentContainer&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UIContentContainer.-systemLayoutFittingSizeDidChangeForChildContentContainer:(objc_object&lt;UIContentContainer&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-viewWillTransitionToSize:withTransitionCoordinator:" uniqueID="-viewWillTransitionToSize:withTransitionCoordinator:(CGSize;objc_object&lt;UIViewControllerTransitionCoordinator&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UIContentContainer.-viewWillTransitionToSize:withTransitionCoordinator:(CGSize;objc_object&lt;UIViewControllerTransitionCoordinator&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-willTransitionToTraitCollection:withTransitionCoordinator:" uniqueID="-willTransitionToTraitCollection:withTransitionCoordinator:(UITraitCollection*;objc_object&lt;UIViewControllerTransitionCoordinator&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.UIContentContainer.-willTransitionToTraitCollection:withTransitionCoordinator:(UITraitCollection*;objc_object&lt;UIViewControllerTransitionCoordinator&gt;*):void</signature>
			</method>
		</class>
		<class name="UIAccessibilityIdentification" uniqueID="&lt;AppScanProtocol&gt;.UIAccessibilityIdentification">
			<method accessibility="Public" methodKind="Member" name="-accessibilityIdentifier" uniqueID="-accessibilityIdentifier():NSString*">
				<signature>&lt;AppScanProtocol&gt;.UIAccessibilityIdentification.-accessibilityIdentifier():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAccessibilityIdentifier:" uniqueID="-setAccessibilityIdentifier:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.UIAccessibilityIdentification.-setAccessibilityIdentifier:(NSString*):void</signature>
			</method>
		</class>
		<class name="NSURLSessionDelegate" uniqueID="&lt;AppScanProtocol&gt;.NSURLSessionDelegate">
			<method accessibility="Public" methodKind="Member" name="-URLSession:didBecomeInvalidWithError:" uniqueID="-URLSession:didBecomeInvalidWithError:(NSURLSession*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLSessionDelegate.-URLSession:didBecomeInvalidWithError:(NSURLSession*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLSession:didReceiveChallenge:completionHandler:" uniqueID="-URLSession:didReceiveChallenge:completionHandler:(NSURLSession*;NSURLAuthenticationChallenge*;(^)(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLSessionDelegate.-URLSession:didReceiveChallenge:completionHandler:(NSURLSession*;NSURLAuthenticationChallenge*;(^)(NSURLSessionAuthChallengeDisposition;NSURLCredential*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-URLSessionDidFinishEventsForBackgroundURLSession:" uniqueID="-URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLSessionDelegate.-URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession*):void</signature>
			</method>
		</class>
		<class name="NSURLConnectionDataDelegate" uniqueID="&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate">
			<method accessibility="Public" methodKind="Member" name="-connection:didReceiveData:" uniqueID="-connection:didReceiveData:(NSURLConnection*;NSData*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connection:didReceiveData:(NSURLConnection*;NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didReceiveResponse:" uniqueID="-connection:didReceiveResponse:(NSURLConnection*;NSURLResponse*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connection:didReceiveResponse:(NSURLConnection*;NSURLResponse*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:" uniqueID="-connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:(NSURLConnection*;NSInteger;NSInteger;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:(NSURLConnection*;NSInteger;NSInteger;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:needNewBodyStream:" uniqueID="-connection:needNewBodyStream:(NSURLConnection*;NSURLRequest*):NSInputStream*">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connection:needNewBodyStream:(NSURLConnection*;NSURLRequest*):NSInputStream*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:willCacheResponse:" uniqueID="-connection:willCacheResponse:(NSURLConnection*;NSCachedURLResponse*):NSCachedURLResponse*">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connection:willCacheResponse:(NSURLConnection*;NSCachedURLResponse*):NSCachedURLResponse*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:willSendRequest:redirectResponse:" uniqueID="-connection:willSendRequest:redirectResponse:(NSURLConnection*;NSURLRequest*;NSURLResponse*):NSURLRequest*">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connection:willSendRequest:redirectResponse:(NSURLConnection*;NSURLRequest*;NSURLResponse*):NSURLRequest*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connectionDidFinishLoading:" uniqueID="-connectionDidFinishLoading:(NSURLConnection*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDataDelegate.-connectionDidFinishLoading:(NSURLConnection*):void</signature>
			</method>
		</class>
		<class name="NSURLConnectionDelegate" uniqueID="&lt;AppScanProtocol&gt;.NSURLConnectionDelegate">
			<method accessibility="Public" methodKind="Member" name="-connection:canAuthenticateAgainstProtectionSpace:" uniqueID="-connection:canAuthenticateAgainstProtectionSpace:(NSURLConnection*;NSURLProtectionSpace*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDelegate.-connection:canAuthenticateAgainstProtectionSpace:(NSURLConnection*;NSURLProtectionSpace*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didCancelAuthenticationChallenge:" uniqueID="-connection:didCancelAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDelegate.-connection:didCancelAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didFailWithError:" uniqueID="-connection:didFailWithError:(NSURLConnection*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDelegate.-connection:didFailWithError:(NSURLConnection*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:didReceiveAuthenticationChallenge:" uniqueID="-connection:didReceiveAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDelegate.-connection:didReceiveAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connection:willSendRequestForAuthenticationChallenge:" uniqueID="-connection:willSendRequestForAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDelegate.-connection:willSendRequestForAuthenticationChallenge:(NSURLConnection*;NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-connectionShouldUseCredentialStorage:" uniqueID="-connectionShouldUseCredentialStorage:(NSURLConnection*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSURLConnectionDelegate.-connectionShouldUseCredentialStorage:(NSURLConnection*):BOOL</signature>
			</method>
		</class>
		<class name="NSURLAuthenticationChallengeSender" uniqueID="&lt;AppScanProtocol&gt;.NSURLAuthenticationChallengeSender">
			<method accessibility="Public" methodKind="Member" name="-cancelAuthenticationChallenge:" uniqueID="-cancelAuthenticationChallenge:(NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLAuthenticationChallengeSender.-cancelAuthenticationChallenge:(NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-continueWithoutCredentialForAuthenticationChallenge:" uniqueID="-continueWithoutCredentialForAuthenticationChallenge:(NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLAuthenticationChallengeSender.-continueWithoutCredentialForAuthenticationChallenge:(NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performDefaultHandlingForAuthenticationChallenge:" uniqueID="-performDefaultHandlingForAuthenticationChallenge:(NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLAuthenticationChallengeSender.-performDefaultHandlingForAuthenticationChallenge:(NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rejectProtectionSpaceAndContinueWithChallenge:" uniqueID="-rejectProtectionSpaceAndContinueWithChallenge:(NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLAuthenticationChallengeSender.-rejectProtectionSpaceAndContinueWithChallenge:(NSURLAuthenticationChallenge*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-useCredential:forAuthenticationChallenge:" uniqueID="-useCredential:forAuthenticationChallenge:(NSURLCredential*;NSURLAuthenticationChallenge*):void">
				<signature>&lt;AppScanProtocol&gt;.NSURLAuthenticationChallengeSender.-useCredential:forAuthenticationChallenge:(NSURLCredential*;NSURLAuthenticationChallenge*):void</signature>
			</method>
		</class>
		<class name="NSTextLayoutOrientationProvider" uniqueID="&lt;AppScanProtocol&gt;.NSTextLayoutOrientationProvider">
			<method accessibility="Public" methodKind="Member" name="-layoutOrientation" uniqueID="-layoutOrientation():NSTextLayoutOrientation">
				<signature>&lt;AppScanProtocol&gt;.NSTextLayoutOrientationProvider.-layoutOrientation():NSTextLayoutOrientation</signature>
			</method>
		</class>
		<class name="NSTextAttachmentContainer" uniqueID="&lt;AppScanProtocol&gt;.NSTextAttachmentContainer">
			<method accessibility="Public" methodKind="Member" name="-attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:" uniqueID="-attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:(NSTextContainer*;CGRect;CGPoint;NSUInteger):CGRect">
				<signature>&lt;AppScanProtocol&gt;.NSTextAttachmentContainer.-attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:(NSTextContainer*;CGRect;CGPoint;NSUInteger):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-imageForBounds:textContainer:characterIndex:" uniqueID="-imageForBounds:textContainer:characterIndex:(CGRect;NSTextContainer*;NSUInteger):UIImage*">
				<signature>&lt;AppScanProtocol&gt;.NSTextAttachmentContainer.-imageForBounds:textContainer:characterIndex:(CGRect;NSTextContainer*;NSUInteger):UIImage*</signature>
			</method>
		</class>
		<class name="NSMutableCopying" uniqueID="&lt;AppScanProtocol&gt;.NSMutableCopying">
			<method accessibility="Public" methodKind="Member" name="-mutableCopyWithZone:" uniqueID="-mutableCopyWithZone:(NSZone*):id _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.NSMutableCopying.-mutableCopyWithZone:(NSZone*):id _Nonnull</signature>
			</method>
		</class>
		<class name="NSTextStorageDelegate" uniqueID="&lt;AppScanProtocol&gt;.NSTextStorageDelegate">
			<method accessibility="Public" methodKind="Member" name="-textStorage:didProcessEditing:range:changeInLength:" uniqueID="-textStorage:didProcessEditing:range:changeInLength:(NSTextStorage*;NSTextStorageEditActions;NSRange;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.NSTextStorageDelegate.-textStorage:didProcessEditing:range:changeInLength:(NSTextStorage*;NSTextStorageEditActions;NSRange;NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textStorage:willProcessEditing:range:changeInLength:" uniqueID="-textStorage:willProcessEditing:range:changeInLength:(NSTextStorage*;NSTextStorageEditActions;NSRange;NSInteger):void">
				<signature>&lt;AppScanProtocol&gt;.NSTextStorageDelegate.-textStorage:willProcessEditing:range:changeInLength:(NSTextStorage*;NSTextStorageEditActions;NSRange;NSInteger):void</signature>
			</method>
		</class>
		<class name="NSLayoutManagerDelegate" uniqueID="&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate">
			<method accessibility="Public" methodKind="Member" name="-layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:" uniqueID="-layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:(NSLayoutManager*;NSUInteger;NSTextContainer*;CGRect;CGPoint;NSUInteger):CGRect">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:(NSLayoutManager*;NSUInteger;NSTextContainer*;CGRect;CGPoint;NSUInteger):CGRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:didCompleteLayoutForTextContainer:atEnd:" uniqueID="-layoutManager:didCompleteLayoutForTextContainer:atEnd:(NSLayoutManager*;NSTextContainer*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:didCompleteLayoutForTextContainer:atEnd:(NSLayoutManager*;NSTextContainer*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:" uniqueID="-layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:(NSLayoutManager*;NSUInteger;CGRect):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:(NSLayoutManager*;NSUInteger;CGRect):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:" uniqueID="-layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:(NSLayoutManager*;NSUInteger;CGRect):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:(NSLayoutManager*;NSUInteger;CGRect):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:" uniqueID="-layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:(NSLayoutManager*;NSUInteger;CGRect):CGFloat">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:(NSLayoutManager*;NSUInteger;CGRect):CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:" uniqueID="-layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSLayoutManager*;NSUInteger):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(NSLayoutManager*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:" uniqueID="-layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:(NSLayoutManager*;NSUInteger):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:(NSLayoutManager*;NSUInteger):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:" uniqueID="-layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:(NSLayoutManager*;const CGGlyph*;const NSGlyphProperty*;const NSUInteger*;UIFont*;NSRange):NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:(NSLayoutManager*;const CGGlyph*;const NSGlyphProperty*;const NSUInteger*;UIFont*;NSRange):NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:" uniqueID="-layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:(NSLayoutManager*;CGRect*;CGRect*;CGFloat*;NSTextContainer*;NSRange):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:(NSLayoutManager*;CGRect*;CGRect*;CGFloat*;NSTextContainer*;NSRange):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:shouldUseAction:forControlCharacterAtIndex:" uniqueID="-layoutManager:shouldUseAction:forControlCharacterAtIndex:(NSLayoutManager*;NSControlCharacterAction;NSUInteger):NSControlCharacterAction">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:shouldUseAction:forControlCharacterAtIndex:(NSLayoutManager*;NSControlCharacterAction;NSUInteger):NSControlCharacterAction</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManager:textContainer:didChangeGeometryFromSize:" uniqueID="-layoutManager:textContainer:didChangeGeometryFromSize:(NSLayoutManager*;NSTextContainer*;CGSize):void">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManager:textContainer:didChangeGeometryFromSize:(NSLayoutManager*;NSTextContainer*;CGSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-layoutManagerDidInvalidateLayout:" uniqueID="-layoutManagerDidInvalidateLayout:(NSLayoutManager*):void">
				<signature>&lt;AppScanProtocol&gt;.NSLayoutManagerDelegate.-layoutManagerDidInvalidateLayout:(NSLayoutManager*):void</signature>
			</method>
		</class>
		<class name="NSFileManagerDelegate" uniqueID="&lt;AppScanProtocol&gt;.NSFileManagerDelegate">
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldCopyItemAtPath:toPath:" uniqueID="-fileManager:shouldCopyItemAtPath:toPath:(NSFileManager*;NSString*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldCopyItemAtPath:toPath:(NSFileManager*;NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldCopyItemAtURL:toURL:" uniqueID="-fileManager:shouldCopyItemAtURL:toURL:(NSFileManager*;NSURL*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldCopyItemAtURL:toURL:(NSFileManager*;NSURL*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldLinkItemAtPath:toPath:" uniqueID="-fileManager:shouldLinkItemAtPath:toPath:(NSFileManager*;NSString*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldLinkItemAtPath:toPath:(NSFileManager*;NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldLinkItemAtURL:toURL:" uniqueID="-fileManager:shouldLinkItemAtURL:toURL:(NSFileManager*;NSURL*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldLinkItemAtURL:toURL:(NSFileManager*;NSURL*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldMoveItemAtPath:toPath:" uniqueID="-fileManager:shouldMoveItemAtPath:toPath:(NSFileManager*;NSString*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldMoveItemAtPath:toPath:(NSFileManager*;NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldMoveItemAtURL:toURL:" uniqueID="-fileManager:shouldMoveItemAtURL:toURL:(NSFileManager*;NSURL*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldMoveItemAtURL:toURL:(NSFileManager*;NSURL*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:" uniqueID="-fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:(NSFileManager*;NSError*;NSString*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:(NSFileManager*;NSError*;NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:" uniqueID="-fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:(NSFileManager*;NSError*;NSURL*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:(NSFileManager*;NSError*;NSURL*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:" uniqueID="-fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:(NSFileManager*;NSError*;NSString*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:(NSFileManager*;NSError*;NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:" uniqueID="-fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:(NSFileManager*;NSError*;NSURL*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:(NSFileManager*;NSError*;NSURL*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:movingItemAtPath:toPath:" uniqueID="-fileManager:shouldProceedAfterError:movingItemAtPath:toPath:(NSFileManager*;NSError*;NSString*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:movingItemAtPath:toPath:(NSFileManager*;NSError*;NSString*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:movingItemAtURL:toURL:" uniqueID="-fileManager:shouldProceedAfterError:movingItemAtURL:toURL:(NSFileManager*;NSError*;NSURL*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:movingItemAtURL:toURL:(NSFileManager*;NSError*;NSURL*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:removingItemAtPath:" uniqueID="-fileManager:shouldProceedAfterError:removingItemAtPath:(NSFileManager*;NSError*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:removingItemAtPath:(NSFileManager*;NSError*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldProceedAfterError:removingItemAtURL:" uniqueID="-fileManager:shouldProceedAfterError:removingItemAtURL:(NSFileManager*;NSError*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldProceedAfterError:removingItemAtURL:(NSFileManager*;NSError*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldRemoveItemAtPath:" uniqueID="-fileManager:shouldRemoveItemAtPath:(NSFileManager*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldRemoveItemAtPath:(NSFileManager*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fileManager:shouldRemoveItemAtURL:" uniqueID="-fileManager:shouldRemoveItemAtURL:(NSFileManager*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSFileManagerDelegate.-fileManager:shouldRemoveItemAtURL:(NSFileManager*;NSURL*):BOOL</signature>
			</method>
		</class>
		<class name="NSFastEnumeration" uniqueID="&lt;AppScanProtocol&gt;.NSFastEnumeration">
			<method accessibility="Public" methodKind="Member" name="-countByEnumeratingWithState:objects:count:" uniqueID="-countByEnumeratingWithState:objects:count:(NSFastEnumerationState*;id*;NSUInteger):NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.NSFastEnumeration.-countByEnumeratingWithState:objects:count:(NSFastEnumerationState*;id*;NSUInteger):NSUInteger</signature>
			</method>
		</class>
		<class name="NSExtensionRequestHandling" uniqueID="&lt;AppScanProtocol&gt;.NSExtensionRequestHandling">
			<method accessibility="Public" methodKind="Member" name="-beginRequestWithExtensionContext:" uniqueID="-beginRequestWithExtensionContext:(NSExtensionContext*):void">
				<signature>&lt;AppScanProtocol&gt;.NSExtensionRequestHandling.-beginRequestWithExtensionContext:(NSExtensionContext*):void</signature>
			</method>
		</class>
		<class name="NSCopying" uniqueID="&lt;AppScanProtocol&gt;.NSCopying">
			<method accessibility="Public" methodKind="Member" name="-copyWithZone:" uniqueID="-copyWithZone:(NSZone*):id _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.NSCopying.-copyWithZone:(NSZone*):id _Nonnull</signature>
			</method>
		</class>
		<class name="NSCoding" uniqueID="&lt;AppScanProtocol&gt;.NSCoding">
			<method accessibility="Public" methodKind="Member" name="-encodeWithCoder:" uniqueID="-encodeWithCoder:(NSCoder*):void">
				<signature>&lt;AppScanProtocol&gt;.NSCoding.-encodeWithCoder:(NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-initWithCoder:" uniqueID="-initWithCoder:(NSCoder*):instancetype _Nullable">
				<signature>&lt;AppScanProtocol&gt;.NSCoding.-initWithCoder:(NSCoder*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="MTLTexture" uniqueID="&lt;AppScanProtocol&gt;.MTLTexture">
			<method accessibility="Public" methodKind="Member" name="-arrayLength" uniqueID="-arrayLength():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-arrayLength():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-buffer" uniqueID="-buffer():objc_object&lt;MTLBuffer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-buffer():objc_object&lt;MTLBuffer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bufferBytesPerRow" uniqueID="-bufferBytesPerRow():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-bufferBytesPerRow():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-bufferOffset" uniqueID="-bufferOffset():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-bufferOffset():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-depth" uniqueID="-depth():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-depth():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:" uniqueID="-getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:(void*;NSUInteger;NSUInteger;MTLRegion;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:(void*;NSUInteger;NSUInteger;MTLRegion;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-getBytes:bytesPerRow:fromRegion:mipmapLevel:" uniqueID="-getBytes:bytesPerRow:fromRegion:mipmapLevel:(void*;NSUInteger;MTLRegion;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-getBytes:bytesPerRow:fromRegion:mipmapLevel:(void*;NSUInteger;MTLRegion;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-height" uniqueID="-height():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-height():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isFramebufferOnly" uniqueID="-isFramebufferOnly():BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-isFramebufferOnly():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mipmapLevelCount" uniqueID="-mipmapLevelCount():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-mipmapLevelCount():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newTextureViewWithPixelFormat:" uniqueID="-newTextureViewWithPixelFormat:(MTLPixelFormat):objc_object&lt;MTLTexture&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-newTextureViewWithPixelFormat:(MTLPixelFormat):objc_object&lt;MTLTexture&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newTextureViewWithPixelFormat:textureType:levels:slices:" uniqueID="-newTextureViewWithPixelFormat:textureType:levels:slices:(MTLPixelFormat;MTLTextureType;NSRange;NSRange):objc_object&lt;MTLTexture&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-newTextureViewWithPixelFormat:textureType:levels:slices:(MTLPixelFormat;MTLTextureType;NSRange;NSRange):objc_object&lt;MTLTexture&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-parentRelativeLevel" uniqueID="-parentRelativeLevel():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-parentRelativeLevel():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-parentRelativeSlice" uniqueID="-parentRelativeSlice():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-parentRelativeSlice():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-parentTexture" uniqueID="-parentTexture():objc_object&lt;MTLTexture&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-parentTexture():objc_object&lt;MTLTexture&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pixelFormat" uniqueID="-pixelFormat():MTLPixelFormat">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-pixelFormat():MTLPixelFormat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:" uniqueID="-replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:(MTLRegion;NSUInteger;NSUInteger;const void*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:(MTLRegion;NSUInteger;NSUInteger;const void*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-replaceRegion:mipmapLevel:withBytes:bytesPerRow:" uniqueID="-replaceRegion:mipmapLevel:withBytes:bytesPerRow:(MTLRegion;NSUInteger;const void*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-replaceRegion:mipmapLevel:withBytes:bytesPerRow:(MTLRegion;NSUInteger;const void*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-rootResource" uniqueID="-rootResource():objc_object&lt;MTLResource&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-rootResource():objc_object&lt;MTLResource&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-sampleCount" uniqueID="-sampleCount():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-sampleCount():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-textureType" uniqueID="-textureType():MTLTextureType">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-textureType():MTLTextureType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-usage" uniqueID="-usage():MTLTextureUsage">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-usage():MTLTextureUsage</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-width" uniqueID="-width():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLTexture.-width():NSUInteger</signature>
			</method>
		</class>
		<class name="MTLSamplerState" uniqueID="&lt;AppScanProtocol&gt;.MTLSamplerState">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLSamplerState.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLSamplerState.-label():NSString*</signature>
			</method>
		</class>
		<class name="MTLRenderPipelineState" uniqueID="&lt;AppScanProtocol&gt;.MTLRenderPipelineState">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderPipelineState.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderPipelineState.-label():NSString*</signature>
			</method>
		</class>
		<class name="MTLRenderCommandEncoder" uniqueID="&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder">
			<method accessibility="Public" methodKind="Member" name="-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:" uniqueID="-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:(MTLPrimitiveType;NSUInteger;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:(MTLPrimitiveType;NSUInteger;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:" uniqueID="-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:(MTLPrimitiveType;NSUInteger;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:(MTLPrimitiveType;NSUInteger;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:" uniqueID="-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:(MTLPrimitiveType;NSUInteger;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:(MTLPrimitiveType;NSUInteger;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:" uniqueID="-drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:(MTLPrimitiveType;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger;objc_object&lt;MTLBuffer&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:(MTLPrimitiveType;MTLIndexType;objc_object&lt;MTLBuffer&gt;*;NSUInteger;objc_object&lt;MTLBuffer&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawPrimitives:indirectBuffer:indirectBufferOffset:" uniqueID="-drawPrimitives:indirectBuffer:indirectBufferOffset:(MTLPrimitiveType;objc_object&lt;MTLBuffer&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawPrimitives:indirectBuffer:indirectBufferOffset:(MTLPrimitiveType;objc_object&lt;MTLBuffer&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawPrimitives:vertexStart:vertexCount:" uniqueID="-drawPrimitives:vertexStart:vertexCount:(MTLPrimitiveType;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawPrimitives:vertexStart:vertexCount:(MTLPrimitiveType;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawPrimitives:vertexStart:vertexCount:instanceCount:" uniqueID="-drawPrimitives:vertexStart:vertexCount:instanceCount:(MTLPrimitiveType;NSUInteger;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawPrimitives:vertexStart:vertexCount:instanceCount:(MTLPrimitiveType;NSUInteger;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:" uniqueID="-drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:(MTLPrimitiveType;NSUInteger;NSUInteger;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:(MTLPrimitiveType;NSUInteger;NSUInteger;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBlendColorRed:green:blue:alpha:" uniqueID="-setBlendColorRed:green:blue:alpha:(float;float;float;float):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setBlendColorRed:green:blue:alpha:(float;float;float;float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCullMode:" uniqueID="-setCullMode:(MTLCullMode):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setCullMode:(MTLCullMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDepthBias:slopeScale:clamp:" uniqueID="-setDepthBias:slopeScale:clamp:(float;float;float):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setDepthBias:slopeScale:clamp:(float;float;float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDepthClipMode:" uniqueID="-setDepthClipMode:(MTLDepthClipMode):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setDepthClipMode:(MTLDepthClipMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDepthStencilState:" uniqueID="-setDepthStencilState:(objc_object&lt;MTLDepthStencilState&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setDepthStencilState:(objc_object&lt;MTLDepthStencilState&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentBuffer:offset:atIndex:" uniqueID="-setFragmentBuffer:offset:atIndex:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentBuffer:offset:atIndex:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentBufferOffset:atIndex:" uniqueID="-setFragmentBufferOffset:atIndex:(NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentBufferOffset:atIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentBuffers:offsets:withRange:" uniqueID="-setFragmentBuffers:offsets:withRange:(const objc_object&lt;MTLBuffer&gt;**;const NSUInteger*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentBuffers:offsets:withRange:(const objc_object&lt;MTLBuffer&gt;**;const NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentBytes:length:atIndex:" uniqueID="-setFragmentBytes:length:atIndex:(const void*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentBytes:length:atIndex:(const void*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentSamplerState:atIndex:" uniqueID="-setFragmentSamplerState:atIndex:(objc_object&lt;MTLSamplerState&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentSamplerState:atIndex:(objc_object&lt;MTLSamplerState&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:" uniqueID="-setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:(objc_object&lt;MTLSamplerState&gt;*;float;float;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:(objc_object&lt;MTLSamplerState&gt;*;float;float;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:" uniqueID="-setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:(const objc_object&lt;MTLSamplerState&gt;**;const float*;const float*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:(const objc_object&lt;MTLSamplerState&gt;**;const float*;const float*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentSamplerStates:withRange:" uniqueID="-setFragmentSamplerStates:withRange:(const objc_object&lt;MTLSamplerState&gt;**;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentSamplerStates:withRange:(const objc_object&lt;MTLSamplerState&gt;**;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentTexture:atIndex:" uniqueID="-setFragmentTexture:atIndex:(objc_object&lt;MTLTexture&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentTexture:atIndex:(objc_object&lt;MTLTexture&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFragmentTextures:withRange:" uniqueID="-setFragmentTextures:withRange:(const objc_object&lt;MTLTexture&gt;**;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFragmentTextures:withRange:(const objc_object&lt;MTLTexture&gt;**;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFrontFacingWinding:" uniqueID="-setFrontFacingWinding:(MTLWinding):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setFrontFacingWinding:(MTLWinding):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRenderPipelineState:" uniqueID="-setRenderPipelineState:(objc_object&lt;MTLRenderPipelineState&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setRenderPipelineState:(objc_object&lt;MTLRenderPipelineState&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setScissorRect:" uniqueID="-setScissorRect:(MTLScissorRect):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setScissorRect:(MTLScissorRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStencilFrontReferenceValue:backReferenceValue:" uniqueID="-setStencilFrontReferenceValue:backReferenceValue:(uint32_t;uint32_t):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setStencilFrontReferenceValue:backReferenceValue:(uint32_t;uint32_t):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setStencilReferenceValue:" uniqueID="-setStencilReferenceValue:(uint32_t):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setStencilReferenceValue:(uint32_t):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTriangleFillMode:" uniqueID="-setTriangleFillMode:(MTLTriangleFillMode):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setTriangleFillMode:(MTLTriangleFillMode):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexBuffer:offset:atIndex:" uniqueID="-setVertexBuffer:offset:atIndex:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexBuffer:offset:atIndex:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexBufferOffset:atIndex:" uniqueID="-setVertexBufferOffset:atIndex:(NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexBufferOffset:atIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexBuffers:offsets:withRange:" uniqueID="-setVertexBuffers:offsets:withRange:(const objc_object&lt;MTLBuffer&gt;**;const NSUInteger*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexBuffers:offsets:withRange:(const objc_object&lt;MTLBuffer&gt;**;const NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexBytes:length:atIndex:" uniqueID="-setVertexBytes:length:atIndex:(const void*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexBytes:length:atIndex:(const void*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexSamplerState:atIndex:" uniqueID="-setVertexSamplerState:atIndex:(objc_object&lt;MTLSamplerState&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexSamplerState:atIndex:(objc_object&lt;MTLSamplerState&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:" uniqueID="-setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:(objc_object&lt;MTLSamplerState&gt;*;float;float;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:(objc_object&lt;MTLSamplerState&gt;*;float;float;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:" uniqueID="-setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:(const objc_object&lt;MTLSamplerState&gt;**;const float*;const float*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:(const objc_object&lt;MTLSamplerState&gt;**;const float*;const float*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexSamplerStates:withRange:" uniqueID="-setVertexSamplerStates:withRange:(const objc_object&lt;MTLSamplerState&gt;**;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexSamplerStates:withRange:(const objc_object&lt;MTLSamplerState&gt;**;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexTexture:atIndex:" uniqueID="-setVertexTexture:atIndex:(objc_object&lt;MTLTexture&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexTexture:atIndex:(objc_object&lt;MTLTexture&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVertexTextures:withRange:" uniqueID="-setVertexTextures:withRange:(const objc_object&lt;MTLTexture&gt;**;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVertexTextures:withRange:(const objc_object&lt;MTLTexture&gt;**;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setViewport:" uniqueID="-setViewport:(MTLViewport):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setViewport:(MTLViewport):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setVisibilityResultMode:offset:" uniqueID="-setVisibilityResultMode:offset:(MTLVisibilityResultMode;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLRenderCommandEncoder.-setVisibilityResultMode:offset:(MTLVisibilityResultMode;NSUInteger):void</signature>
			</method>
		</class>
		<class name="MTLParallelRenderCommandEncoder" uniqueID="&lt;AppScanProtocol&gt;.MTLParallelRenderCommandEncoder">
			<method accessibility="Public" methodKind="Member" name="-renderCommandEncoder" uniqueID="-renderCommandEncoder():objc_object&lt;MTLRenderCommandEncoder&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLParallelRenderCommandEncoder.-renderCommandEncoder():objc_object&lt;MTLRenderCommandEncoder&gt;*</signature>
			</method>
		</class>
		<class name="MTLLibrary" uniqueID="&lt;AppScanProtocol&gt;.MTLLibrary">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLLibrary.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-functionNames" uniqueID="-functionNames():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLLibrary.-functionNames():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLLibrary.-label():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newFunctionWithName:" uniqueID="-newFunctionWithName:(NSString*):objc_object&lt;MTLFunction&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLLibrary.-newFunctionWithName:(NSString*):objc_object&lt;MTLFunction&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLabel:" uniqueID="-setLabel:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLLibrary.-setLabel:(NSString*):void</signature>
			</method>
		</class>
		<class name="MTLFunction" uniqueID="&lt;AppScanProtocol&gt;.MTLFunction">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLFunction.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-functionType" uniqueID="-functionType():MTLFunctionType">
				<signature>&lt;AppScanProtocol&gt;.MTLFunction.-functionType():MTLFunctionType</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLFunction.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-vertexAttributes" uniqueID="-vertexAttributes():NSArray&lt;MTLVertexAttribute *&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLFunction.-vertexAttributes():NSArray&lt;MTLVertexAttribute *&gt;*</signature>
			</method>
		</class>
		<class name="MTLDrawable" uniqueID="&lt;AppScanProtocol&gt;.MTLDrawable">
			<method accessibility="Public" methodKind="Member" name="-present" uniqueID="-present():void">
				<signature>&lt;AppScanProtocol&gt;.MTLDrawable.-present():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentAtTime:" uniqueID="-presentAtTime:(CFTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDrawable.-presentAtTime:(CFTimeInterval):void</signature>
			</method>
		</class>
		<class name="UIApplicationDelegate" uniqueID="&lt;AppScanProtocol&gt;.UIApplicationDelegate">
			<method accessibility="Public" methodKind="Member" name="-application:continueUserActivity:restorationHandler:" uniqueID="-application:continueUserActivity:restorationHandler:(UIApplication*;NSUserActivity*;(^)(NSArray*):void):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:continueUserActivity:restorationHandler:(UIApplication*;NSUserActivity*;(^)(NSArray*):void):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didChangeStatusBarFrame:" uniqueID="-application:didChangeStatusBarFrame:(UIApplication*;CGRect):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didChangeStatusBarFrame:(UIApplication*;CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didChangeStatusBarOrientation:" uniqueID="-application:didChangeStatusBarOrientation:(UIApplication*;UIInterfaceOrientation):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didChangeStatusBarOrientation:(UIApplication*;UIInterfaceOrientation):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didDecodeRestorableStateWithCoder:" uniqueID="-application:didDecodeRestorableStateWithCoder:(UIApplication*;NSCoder*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didDecodeRestorableStateWithCoder:(UIApplication*;NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didFailToContinueUserActivityWithType:error:" uniqueID="-application:didFailToContinueUserActivityWithType:error:(UIApplication*;NSString*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didFailToContinueUserActivityWithType:error:(UIApplication*;NSString*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didFailToRegisterForRemoteNotificationsWithError:" uniqueID="-application:didFailToRegisterForRemoteNotificationsWithError:(UIApplication*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didFailToRegisterForRemoteNotificationsWithError:(UIApplication*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didFinishLaunchingWithOptions:" uniqueID="-application:didFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didReceiveLocalNotification:" uniqueID="-application:didReceiveLocalNotification:(UIApplication*;UILocalNotification*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didReceiveLocalNotification:(UIApplication*;UILocalNotification*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didReceiveRemoteNotification:" uniqueID="-application:didReceiveRemoteNotification:(UIApplication*;NSDictionary*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didReceiveRemoteNotification:(UIApplication*;NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didReceiveRemoteNotification:fetchCompletionHandler:" uniqueID="-application:didReceiveRemoteNotification:fetchCompletionHandler:(UIApplication*;NSDictionary*;(^)(UIBackgroundFetchResult):void):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didReceiveRemoteNotification:fetchCompletionHandler:(UIApplication*;NSDictionary*;(^)(UIBackgroundFetchResult):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didRegisterForRemoteNotificationsWithDeviceToken:" uniqueID="-application:didRegisterForRemoteNotificationsWithDeviceToken:(UIApplication*;NSData*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didRegisterForRemoteNotificationsWithDeviceToken:(UIApplication*;NSData*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didRegisterUserNotificationSettings:" uniqueID="-application:didRegisterUserNotificationSettings:(UIApplication*;UIUserNotificationSettings*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didRegisterUserNotificationSettings:(UIApplication*;UIUserNotificationSettings*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:didUpdateUserActivity:" uniqueID="-application:didUpdateUserActivity:(UIApplication*;NSUserActivity*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:didUpdateUserActivity:(UIApplication*;NSUserActivity*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleActionWithIdentifier:forLocalNotification:completionHandler:" uniqueID="-application:handleActionWithIdentifier:forLocalNotification:completionHandler:(UIApplication*;NSString*;UILocalNotification*;void ()):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleActionWithIdentifier:forLocalNotification:completionHandler:(UIApplication*;NSString*;UILocalNotification*;void ()):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:" uniqueID="-application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:(UIApplication*;NSString*;UILocalNotification*;NSDictionary*;void ()):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:(UIApplication*;NSString*;UILocalNotification*;NSDictionary*;void ()):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleActionWithIdentifier:forRemoteNotification:completionHandler:" uniqueID="-application:handleActionWithIdentifier:forRemoteNotification:completionHandler:(UIApplication*;NSString*;NSDictionary*;void ()):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleActionWithIdentifier:forRemoteNotification:completionHandler:(UIApplication*;NSString*;NSDictionary*;void ()):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:" uniqueID="-application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:(UIApplication*;NSString*;NSDictionary*;NSDictionary*;void ()):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:(UIApplication*;NSString*;NSDictionary*;NSDictionary*;void ()):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleEventsForBackgroundURLSession:completionHandler:" uniqueID="-application:handleEventsForBackgroundURLSession:completionHandler:(UIApplication*;NSString*;void ()):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleEventsForBackgroundURLSession:completionHandler:(UIApplication*;NSString*;void ()):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleOpenURL:" uniqueID="-application:handleOpenURL:(UIApplication*;NSURL*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleOpenURL:(UIApplication*;NSURL*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:handleWatchKitExtensionRequest:reply:" uniqueID="-application:handleWatchKitExtensionRequest:reply:(UIApplication*;NSDictionary*;(^)(NSDictionary*):void):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:handleWatchKitExtensionRequest:reply:(UIApplication*;NSDictionary*;(^)(NSDictionary*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:openURL:options:" uniqueID="-application:openURL:options:(UIApplication*;NSURL*;NSDictionary&lt;NSString *,id&gt;*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:openURL:options:(UIApplication*;NSURL*;NSDictionary&lt;NSString *,id&gt;*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:openURL:sourceApplication:annotation:" uniqueID="-application:openURL:sourceApplication:annotation:(UIApplication*;NSURL*;NSString*;id _Nonnull):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:openURL:sourceApplication:annotation:(UIApplication*;NSURL*;NSString*;id _Nonnull):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:performActionForShortcutItem:completionHandler:" uniqueID="-application:performActionForShortcutItem:completionHandler:(UIApplication*;UIApplicationShortcutItem*;(^)(BOOL):void):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:performActionForShortcutItem:completionHandler:(UIApplication*;UIApplicationShortcutItem*;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:performFetchWithCompletionHandler:" uniqueID="-application:performFetchWithCompletionHandler:(UIApplication*;(^)(UIBackgroundFetchResult):void):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:performFetchWithCompletionHandler:(UIApplication*;(^)(UIBackgroundFetchResult):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:shouldAllowExtensionPointIdentifier:" uniqueID="-application:shouldAllowExtensionPointIdentifier:(UIApplication*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:shouldAllowExtensionPointIdentifier:(UIApplication*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:shouldRestoreApplicationState:" uniqueID="-application:shouldRestoreApplicationState:(UIApplication*;NSCoder*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:shouldRestoreApplicationState:(UIApplication*;NSCoder*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:shouldSaveApplicationState:" uniqueID="-application:shouldSaveApplicationState:(UIApplication*;NSCoder*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:shouldSaveApplicationState:(UIApplication*;NSCoder*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:supportedInterfaceOrientationsForWindow:" uniqueID="-application:supportedInterfaceOrientationsForWindow:(UIApplication*;UIWindow*):UIInterfaceOrientationMask">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:supportedInterfaceOrientationsForWindow:(UIApplication*;UIWindow*):UIInterfaceOrientationMask</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:viewControllerWithRestorationIdentifierPath:coder:" uniqueID="-application:viewControllerWithRestorationIdentifierPath:coder:(UIApplication*;NSArray*;NSCoder*):UIViewController*">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:viewControllerWithRestorationIdentifierPath:coder:(UIApplication*;NSArray*;NSCoder*):UIViewController*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:willChangeStatusBarFrame:" uniqueID="-application:willChangeStatusBarFrame:(UIApplication*;CGRect):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:willChangeStatusBarFrame:(UIApplication*;CGRect):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:willChangeStatusBarOrientation:duration:" uniqueID="-application:willChangeStatusBarOrientation:duration:(UIApplication*;UIInterfaceOrientation;NSTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:willChangeStatusBarOrientation:duration:(UIApplication*;UIInterfaceOrientation;NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:willContinueUserActivityWithType:" uniqueID="-application:willContinueUserActivityWithType:(UIApplication*;NSString*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:willContinueUserActivityWithType:(UIApplication*;NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:willEncodeRestorableStateWithCoder:" uniqueID="-application:willEncodeRestorableStateWithCoder:(UIApplication*;NSCoder*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:willEncodeRestorableStateWithCoder:(UIApplication*;NSCoder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-application:willFinishLaunchingWithOptions:" uniqueID="-application:willFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-application:willFinishLaunchingWithOptions:(UIApplication*;NSDictionary*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidBecomeActive:" uniqueID="-applicationDidBecomeActive:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationDidBecomeActive:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidEnterBackground:" uniqueID="-applicationDidEnterBackground:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationDidEnterBackground:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidFinishLaunching:" uniqueID="-applicationDidFinishLaunching:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationDidFinishLaunching:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationDidReceiveMemoryWarning:" uniqueID="-applicationDidReceiveMemoryWarning:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationDidReceiveMemoryWarning:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationProtectedDataDidBecomeAvailable:" uniqueID="-applicationProtectedDataDidBecomeAvailable:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationProtectedDataDidBecomeAvailable:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationProtectedDataWillBecomeUnavailable:" uniqueID="-applicationProtectedDataWillBecomeUnavailable:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationProtectedDataWillBecomeUnavailable:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationShouldRequestHealthAuthorization:" uniqueID="-applicationShouldRequestHealthAuthorization:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationShouldRequestHealthAuthorization:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationSignificantTimeChange:" uniqueID="-applicationSignificantTimeChange:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationSignificantTimeChange:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationWillEnterForeground:" uniqueID="-applicationWillEnterForeground:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationWillEnterForeground:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationWillResignActive:" uniqueID="-applicationWillResignActive:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationWillResignActive:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-applicationWillTerminate:" uniqueID="-applicationWillTerminate:(UIApplication*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-applicationWillTerminate:(UIApplication*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setWindow:" uniqueID="-setWindow:(UIWindow*):void">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-setWindow:(UIWindow*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-window" uniqueID="-window():UIWindow*">
				<signature>&lt;AppScanProtocol&gt;.UIApplicationDelegate.-window():UIWindow*</signature>
			</method>
		</class>
		<class name="MTLDevice" uniqueID="&lt;AppScanProtocol&gt;.MTLDevice">
			<method accessibility="Public" methodKind="Member" name="-isDepth24Stencil8PixelFormatSupported" uniqueID="-isDepth24Stencil8PixelFormatSupported():BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-isDepth24Stencil8PixelFormatSupported():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isHeadless" uniqueID="-isHeadless():BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-isHeadless():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isLowPower" uniqueID="-isLowPower():BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-isLowPower():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maxThreadsPerThreadgroup" uniqueID="-maxThreadsPerThreadgroup():MTLSize">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-maxThreadsPerThreadgroup():MTLSize</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-name" uniqueID="-name():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-name():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newBufferWithBytes:length:options:" uniqueID="-newBufferWithBytes:length:options:(const void*;NSUInteger;MTLResourceOptions):objc_object&lt;MTLBuffer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newBufferWithBytes:length:options:(const void*;NSUInteger;MTLResourceOptions):objc_object&lt;MTLBuffer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newBufferWithBytesNoCopy:length:options:deallocator:" uniqueID="-newBufferWithBytesNoCopy:length:options:deallocator:(void*;NSUInteger;MTLResourceOptions;(^)(void*;NSUInteger):void):objc_object&lt;MTLBuffer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newBufferWithBytesNoCopy:length:options:deallocator:(void*;NSUInteger;MTLResourceOptions;(^)(void*;NSUInteger):void):objc_object&lt;MTLBuffer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newBufferWithLength:options:" uniqueID="-newBufferWithLength:options:(NSUInteger;MTLResourceOptions):objc_object&lt;MTLBuffer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newBufferWithLength:options:(NSUInteger;MTLResourceOptions):objc_object&lt;MTLBuffer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newCommandQueue" uniqueID="-newCommandQueue():objc_object&lt;MTLCommandQueue&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newCommandQueue():objc_object&lt;MTLCommandQueue&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newCommandQueueWithMaxCommandBufferCount:" uniqueID="-newCommandQueueWithMaxCommandBufferCount:(NSUInteger):objc_object&lt;MTLCommandQueue&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newCommandQueueWithMaxCommandBufferCount:(NSUInteger):objc_object&lt;MTLCommandQueue&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newComputePipelineStateWithDescriptor:options:completionHandler:" uniqueID="-newComputePipelineStateWithDescriptor:options:completionHandler:(MTLComputePipelineDescriptor*;MTLPipelineOption;(^)(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newComputePipelineStateWithDescriptor:options:completionHandler:(MTLComputePipelineDescriptor*;MTLPipelineOption;(^)(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newComputePipelineStateWithDescriptor:options:reflection:error:" uniqueID="-newComputePipelineStateWithDescriptor:options:reflection:error:(MTLComputePipelineDescriptor*;MTLPipelineOption;MTLComputePipelineReflection**;NSError**):objc_object&lt;MTLComputePipelineState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newComputePipelineStateWithDescriptor:options:reflection:error:(MTLComputePipelineDescriptor*;MTLPipelineOption;MTLComputePipelineReflection**;NSError**):objc_object&lt;MTLComputePipelineState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newComputePipelineStateWithFunction:completionHandler:" uniqueID="-newComputePipelineStateWithFunction:completionHandler:(objc_object&lt;MTLFunction&gt;*;(^)(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newComputePipelineStateWithFunction:completionHandler:(objc_object&lt;MTLFunction&gt;*;(^)(objc_object&lt;MTLComputePipelineState&gt;*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newComputePipelineStateWithFunction:error:" uniqueID="-newComputePipelineStateWithFunction:error:(objc_object&lt;MTLFunction&gt;*;NSError**):objc_object&lt;MTLComputePipelineState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newComputePipelineStateWithFunction:error:(objc_object&lt;MTLFunction&gt;*;NSError**):objc_object&lt;MTLComputePipelineState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newComputePipelineStateWithFunction:options:completionHandler:" uniqueID="-newComputePipelineStateWithFunction:options:completionHandler:(objc_object&lt;MTLFunction&gt;*;MTLPipelineOption;(^)(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newComputePipelineStateWithFunction:options:completionHandler:(objc_object&lt;MTLFunction&gt;*;MTLPipelineOption;(^)(objc_object&lt;MTLComputePipelineState&gt;*;MTLComputePipelineReflection*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newComputePipelineStateWithFunction:options:reflection:error:" uniqueID="-newComputePipelineStateWithFunction:options:reflection:error:(objc_object&lt;MTLFunction&gt;*;MTLPipelineOption;MTLComputePipelineReflection**;NSError**):objc_object&lt;MTLComputePipelineState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newComputePipelineStateWithFunction:options:reflection:error:(objc_object&lt;MTLFunction&gt;*;MTLPipelineOption;MTLComputePipelineReflection**;NSError**):objc_object&lt;MTLComputePipelineState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newDefaultLibrary" uniqueID="-newDefaultLibrary():objc_object&lt;MTLLibrary&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newDefaultLibrary():objc_object&lt;MTLLibrary&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newDepthStencilStateWithDescriptor:" uniqueID="-newDepthStencilStateWithDescriptor:(MTLDepthStencilDescriptor*):objc_object&lt;MTLDepthStencilState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newDepthStencilStateWithDescriptor:(MTLDepthStencilDescriptor*):objc_object&lt;MTLDepthStencilState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newLibraryWithData:error:" uniqueID="-newLibraryWithData:error:(NSObject&lt;OS_dispatch_data&gt;*;NSError**):objc_object&lt;MTLLibrary&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newLibraryWithData:error:(NSObject&lt;OS_dispatch_data&gt;*;NSError**):objc_object&lt;MTLLibrary&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newLibraryWithFile:error:" uniqueID="-newLibraryWithFile:error:(NSString*;NSError**):objc_object&lt;MTLLibrary&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newLibraryWithFile:error:(NSString*;NSError**):objc_object&lt;MTLLibrary&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newLibraryWithSource:options:completionHandler:" uniqueID="-newLibraryWithSource:options:completionHandler:(NSString*;MTLCompileOptions*;(^)(objc_object&lt;MTLLibrary&gt;*;NSError*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newLibraryWithSource:options:completionHandler:(NSString*;MTLCompileOptions*;(^)(objc_object&lt;MTLLibrary&gt;*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newLibraryWithSource:options:error:" uniqueID="-newLibraryWithSource:options:error:(NSString*;MTLCompileOptions*;NSError**):objc_object&lt;MTLLibrary&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newLibraryWithSource:options:error:(NSString*;MTLCompileOptions*;NSError**):objc_object&lt;MTLLibrary&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newRenderPipelineStateWithDescriptor:completionHandler:" uniqueID="-newRenderPipelineStateWithDescriptor:completionHandler:(MTLRenderPipelineDescriptor*;(^)(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newRenderPipelineStateWithDescriptor:completionHandler:(MTLRenderPipelineDescriptor*;(^)(objc_object&lt;MTLRenderPipelineState&gt;*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newRenderPipelineStateWithDescriptor:error:" uniqueID="-newRenderPipelineStateWithDescriptor:error:(MTLRenderPipelineDescriptor*;NSError**):objc_object&lt;MTLRenderPipelineState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newRenderPipelineStateWithDescriptor:error:(MTLRenderPipelineDescriptor*;NSError**):objc_object&lt;MTLRenderPipelineState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newRenderPipelineStateWithDescriptor:options:completionHandler:" uniqueID="-newRenderPipelineStateWithDescriptor:options:completionHandler:(MTLRenderPipelineDescriptor*;MTLPipelineOption;(^)(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newRenderPipelineStateWithDescriptor:options:completionHandler:(MTLRenderPipelineDescriptor*;MTLPipelineOption;(^)(objc_object&lt;MTLRenderPipelineState&gt;*;MTLRenderPipelineReflection*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newRenderPipelineStateWithDescriptor:options:reflection:error:" uniqueID="-newRenderPipelineStateWithDescriptor:options:reflection:error:(MTLRenderPipelineDescriptor*;MTLPipelineOption;MTLRenderPipelineReflection**;NSError**):objc_object&lt;MTLRenderPipelineState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newRenderPipelineStateWithDescriptor:options:reflection:error:(MTLRenderPipelineDescriptor*;MTLPipelineOption;MTLRenderPipelineReflection**;NSError**):objc_object&lt;MTLRenderPipelineState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newSamplerStateWithDescriptor:" uniqueID="-newSamplerStateWithDescriptor:(MTLSamplerDescriptor*):objc_object&lt;MTLSamplerState&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newSamplerStateWithDescriptor:(MTLSamplerDescriptor*):objc_object&lt;MTLSamplerState&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newTextureWithDescriptor:" uniqueID="-newTextureWithDescriptor:(MTLTextureDescriptor*):objc_object&lt;MTLTexture&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-newTextureWithDescriptor:(MTLTextureDescriptor*):objc_object&lt;MTLTexture&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportsFeatureSet:" uniqueID="-supportsFeatureSet:(MTLFeatureSet):BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-supportsFeatureSet:(MTLFeatureSet):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-supportsTextureSampleCount:" uniqueID="-supportsTextureSampleCount:(NSUInteger):BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLDevice.-supportsTextureSampleCount:(NSUInteger):BOOL</signature>
			</method>
		</class>
		<class name="MTLDepthStencilState" uniqueID="&lt;AppScanProtocol&gt;.MTLDepthStencilState">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLDepthStencilState.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLDepthStencilState.-label():NSString*</signature>
			</method>
		</class>
		<class name="MTLComputePipelineState" uniqueID="&lt;AppScanProtocol&gt;.MTLComputePipelineState">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLComputePipelineState.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-maxTotalThreadsPerThreadgroup" uniqueID="-maxTotalThreadsPerThreadgroup():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLComputePipelineState.-maxTotalThreadsPerThreadgroup():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-threadExecutionWidth" uniqueID="-threadExecutionWidth():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLComputePipelineState.-threadExecutionWidth():NSUInteger</signature>
			</method>
		</class>
		<class name="MTLComputeCommandEncoder" uniqueID="&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder">
			<method accessibility="Public" methodKind="Member" name="-dispatchThreadgroups:threadsPerThreadgroup:" uniqueID="-dispatchThreadgroups:threadsPerThreadgroup:(MTLSize;MTLSize):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-dispatchThreadgroups:threadsPerThreadgroup:(MTLSize;MTLSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:" uniqueID="-dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;MTLSize):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;MTLSize):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBuffer:offset:atIndex:" uniqueID="-setBuffer:offset:atIndex:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setBuffer:offset:atIndex:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBufferOffset:atIndex:" uniqueID="-setBufferOffset:atIndex:(NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setBufferOffset:atIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBuffers:offsets:withRange:" uniqueID="-setBuffers:offsets:withRange:(const objc_object&lt;MTLBuffer&gt;**;const NSUInteger*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setBuffers:offsets:withRange:(const objc_object&lt;MTLBuffer&gt;**;const NSUInteger*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBytes:length:atIndex:" uniqueID="-setBytes:length:atIndex:(const void*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setBytes:length:atIndex:(const void*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setComputePipelineState:" uniqueID="-setComputePipelineState:(objc_object&lt;MTLComputePipelineState&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setComputePipelineState:(objc_object&lt;MTLComputePipelineState&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSamplerState:atIndex:" uniqueID="-setSamplerState:atIndex:(objc_object&lt;MTLSamplerState&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setSamplerState:atIndex:(objc_object&lt;MTLSamplerState&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSamplerState:lodMinClamp:lodMaxClamp:atIndex:" uniqueID="-setSamplerState:lodMinClamp:lodMaxClamp:atIndex:(objc_object&lt;MTLSamplerState&gt;*;float;float;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setSamplerState:lodMinClamp:lodMaxClamp:atIndex:(objc_object&lt;MTLSamplerState&gt;*;float;float;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSamplerStates:lodMinClamps:lodMaxClamps:withRange:" uniqueID="-setSamplerStates:lodMinClamps:lodMaxClamps:withRange:(const objc_object&lt;MTLSamplerState&gt;**;const float*;const float*;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setSamplerStates:lodMinClamps:lodMaxClamps:withRange:(const objc_object&lt;MTLSamplerState&gt;**;const float*;const float*;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSamplerStates:withRange:" uniqueID="-setSamplerStates:withRange:(const objc_object&lt;MTLSamplerState&gt;**;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setSamplerStates:withRange:(const objc_object&lt;MTLSamplerState&gt;**;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTexture:atIndex:" uniqueID="-setTexture:atIndex:(objc_object&lt;MTLTexture&gt;*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setTexture:atIndex:(objc_object&lt;MTLTexture&gt;*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTextures:withRange:" uniqueID="-setTextures:withRange:(const objc_object&lt;MTLTexture&gt;**;NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setTextures:withRange:(const objc_object&lt;MTLTexture&gt;**;NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setThreadgroupMemoryLength:atIndex:" uniqueID="-setThreadgroupMemoryLength:atIndex:(NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLComputeCommandEncoder.-setThreadgroupMemoryLength:atIndex:(NSUInteger;NSUInteger):void</signature>
			</method>
		</class>
		<class name="MTLCommandQueue" uniqueID="&lt;AppScanProtocol&gt;.MTLCommandQueue">
			<method accessibility="Public" methodKind="Member" name="-commandBuffer" uniqueID="-commandBuffer():objc_object&lt;MTLCommandBuffer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandQueue.-commandBuffer():objc_object&lt;MTLCommandBuffer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-commandBufferWithUnretainedReferences" uniqueID="-commandBufferWithUnretainedReferences():objc_object&lt;MTLCommandBuffer&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandQueue.-commandBufferWithUnretainedReferences():objc_object&lt;MTLCommandBuffer&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandQueue.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertDebugCaptureBoundary" uniqueID="-insertDebugCaptureBoundary():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandQueue.-insertDebugCaptureBoundary():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandQueue.-label():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLabel:" uniqueID="-setLabel:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandQueue.-setLabel:(NSString*):void</signature>
			</method>
		</class>
		<class name="MTLCommandBuffer" uniqueID="&lt;AppScanProtocol&gt;.MTLCommandBuffer">
			<method accessibility="Public" methodKind="Member" name="-addCompletedHandler:" uniqueID="-addCompletedHandler:((^)(objc_object&lt;MTLCommandBuffer&gt;*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-addCompletedHandler:((^)(objc_object&lt;MTLCommandBuffer&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-addScheduledHandler:" uniqueID="-addScheduledHandler:((^)(objc_object&lt;MTLCommandBuffer&gt;*):void):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-addScheduledHandler:((^)(objc_object&lt;MTLCommandBuffer&gt;*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-blitCommandEncoder" uniqueID="-blitCommandEncoder():objc_object&lt;MTLBlitCommandEncoder&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-blitCommandEncoder():objc_object&lt;MTLBlitCommandEncoder&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-commandQueue" uniqueID="-commandQueue():objc_object&lt;MTLCommandQueue&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-commandQueue():objc_object&lt;MTLCommandQueue&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-commit" uniqueID="-commit():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-commit():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-computeCommandEncoder" uniqueID="-computeCommandEncoder():objc_object&lt;MTLComputeCommandEncoder&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-computeCommandEncoder():objc_object&lt;MTLComputeCommandEncoder&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-enqueue" uniqueID="-enqueue():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-enqueue():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-error" uniqueID="-error():NSError*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-error():NSError*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-label():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-parallelRenderCommandEncoderWithDescriptor:" uniqueID="-parallelRenderCommandEncoderWithDescriptor:(MTLRenderPassDescriptor*):objc_object&lt;MTLParallelRenderCommandEncoder&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-parallelRenderCommandEncoderWithDescriptor:(MTLRenderPassDescriptor*):objc_object&lt;MTLParallelRenderCommandEncoder&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentDrawable:" uniqueID="-presentDrawable:(objc_object&lt;MTLDrawable&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-presentDrawable:(objc_object&lt;MTLDrawable&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-presentDrawable:atTime:" uniqueID="-presentDrawable:atTime:(objc_object&lt;MTLDrawable&gt;*;CFTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-presentDrawable:atTime:(objc_object&lt;MTLDrawable&gt;*;CFTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-renderCommandEncoderWithDescriptor:" uniqueID="-renderCommandEncoderWithDescriptor:(MTLRenderPassDescriptor*):objc_object&lt;MTLRenderCommandEncoder&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-renderCommandEncoderWithDescriptor:(MTLRenderPassDescriptor*):objc_object&lt;MTLRenderCommandEncoder&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-retainedReferences" uniqueID="-retainedReferences():BOOL">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-retainedReferences():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLabel:" uniqueID="-setLabel:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-setLabel:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-status" uniqueID="-status():MTLCommandBufferStatus">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-status():MTLCommandBufferStatus</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitUntilCompleted" uniqueID="-waitUntilCompleted():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-waitUntilCompleted():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-waitUntilScheduled" uniqueID="-waitUntilScheduled():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandBuffer.-waitUntilScheduled():void</signature>
			</method>
		</class>
		<class name="MTLBuffer" uniqueID="&lt;AppScanProtocol&gt;.MTLBuffer">
			<method accessibility="Public" methodKind="Member" name="-contents" uniqueID="-contents():void*">
				<signature>&lt;AppScanProtocol&gt;.MTLBuffer.-contents():void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-didModifyRange:" uniqueID="-didModifyRange:(NSRange):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBuffer.-didModifyRange:(NSRange):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.MTLBuffer.-length():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-newTextureWithDescriptor:offset:bytesPerRow:" uniqueID="-newTextureWithDescriptor:offset:bytesPerRow:(MTLTextureDescriptor*;NSUInteger;NSUInteger):objc_object&lt;MTLTexture&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLBuffer.-newTextureWithDescriptor:offset:bytesPerRow:(MTLTextureDescriptor*;NSUInteger;NSUInteger):objc_object&lt;MTLTexture&gt;*</signature>
			</method>
		</class>
		<class name="MTLResource" uniqueID="&lt;AppScanProtocol&gt;.MTLResource">
			<method accessibility="Public" methodKind="Member" name="-cpuCacheMode" uniqueID="-cpuCacheMode():MTLCPUCacheMode">
				<signature>&lt;AppScanProtocol&gt;.MTLResource.-cpuCacheMode():MTLCPUCacheMode</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLResource.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLResource.-label():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLabel:" uniqueID="-setLabel:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLResource.-setLabel:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setPurgeableState:" uniqueID="-setPurgeableState:(MTLPurgeableState):MTLPurgeableState">
				<signature>&lt;AppScanProtocol&gt;.MTLResource.-setPurgeableState:(MTLPurgeableState):MTLPurgeableState</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-storageMode" uniqueID="-storageMode():MTLStorageMode">
				<signature>&lt;AppScanProtocol&gt;.MTLResource.-storageMode():MTLStorageMode</signature>
			</method>
		</class>
		<class name="MTLBlitCommandEncoder" uniqueID="&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder">
			<method accessibility="Public" methodKind="Member" name="-copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:" uniqueID="-copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger;MTLSize;objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger;MTLSize;objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:" uniqueID="-copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger;MTLSize;objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLBlitOption):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger;MTLSize;objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLBlitOption):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:" uniqueID="-copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:(objc_object&lt;MTLBuffer&gt;*;NSUInteger;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:" uniqueID="-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLSize;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLSize;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:" uniqueID="-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLSize;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger;MTLBlitOption):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLSize;objc_object&lt;MTLBuffer&gt;*;NSUInteger;NSUInteger;NSUInteger;MTLBlitOption):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:" uniqueID="-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLSize;objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin;MTLSize;objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger;MTLOrigin):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fillBuffer:range:value:" uniqueID="-fillBuffer:range:value:(objc_object&lt;MTLBuffer&gt;*;NSRange;uint8_t):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-fillBuffer:range:value:(objc_object&lt;MTLBuffer&gt;*;NSRange;uint8_t):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-generateMipmapsForTexture:" uniqueID="-generateMipmapsForTexture:(objc_object&lt;MTLTexture&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-generateMipmapsForTexture:(objc_object&lt;MTLTexture&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-synchronizeResource:" uniqueID="-synchronizeResource:(objc_object&lt;MTLResource&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-synchronizeResource:(objc_object&lt;MTLResource&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-synchronizeTexture:slice:level:" uniqueID="-synchronizeTexture:slice:level:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.MTLBlitCommandEncoder.-synchronizeTexture:slice:level:(objc_object&lt;MTLTexture&gt;*;NSUInteger;NSUInteger):void</signature>
			</method>
		</class>
		<class name="UINavigationControllerDelegate" uniqueID="&lt;AppScanProtocol&gt;.UINavigationControllerDelegate">
			<method accessibility="Public" methodKind="Member" name="-navigationController:animationControllerForOperation:fromViewController:toViewController:" uniqueID="-navigationController:animationControllerForOperation:fromViewController:toViewController:(UINavigationController*;UINavigationControllerOperation;UIViewController*;UIViewController*):objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UINavigationControllerDelegate.-navigationController:animationControllerForOperation:fromViewController:toViewController:(UINavigationController*;UINavigationControllerOperation;UIViewController*;UIViewController*):objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationController:didShowViewController:animated:" uniqueID="-navigationController:didShowViewController:animated:(UINavigationController*;UIViewController*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UINavigationControllerDelegate.-navigationController:didShowViewController:animated:(UINavigationController*;UIViewController*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationController:interactionControllerForAnimationController:" uniqueID="-navigationController:interactionControllerForAnimationController:(UINavigationController*;objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*):objc_object&lt;UIViewControllerInteractiveTransitioning&gt;*">
				<signature>&lt;AppScanProtocol&gt;.UINavigationControllerDelegate.-navigationController:interactionControllerForAnimationController:(UINavigationController*;objc_object&lt;UIViewControllerAnimatedTransitioning&gt;*):objc_object&lt;UIViewControllerInteractiveTransitioning&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationController:willShowViewController:animated:" uniqueID="-navigationController:willShowViewController:animated:(UINavigationController*;UIViewController*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.UINavigationControllerDelegate.-navigationController:willShowViewController:animated:(UINavigationController*;UIViewController*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationControllerPreferredInterfaceOrientationForPresentation:" uniqueID="-navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController*):UIInterfaceOrientation">
				<signature>&lt;AppScanProtocol&gt;.UINavigationControllerDelegate.-navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController*):UIInterfaceOrientation</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-navigationControllerSupportedInterfaceOrientations:" uniqueID="-navigationControllerSupportedInterfaceOrientations:(UINavigationController*):UIInterfaceOrientationMask">
				<signature>&lt;AppScanProtocol&gt;.UINavigationControllerDelegate.-navigationControllerSupportedInterfaceOrientations:(UINavigationController*):UIInterfaceOrientationMask</signature>
			</method>
		</class>
		<class name="UILayoutSupport" uniqueID="&lt;AppScanProtocol&gt;.UILayoutSupport">
			<method accessibility="Public" methodKind="Member" name="-bottomAnchor" uniqueID="-bottomAnchor():NSLayoutYAxisAnchor*">
				<signature>&lt;AppScanProtocol&gt;.UILayoutSupport.-bottomAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-heightAnchor" uniqueID="-heightAnchor():NSLayoutDimension*">
				<signature>&lt;AppScanProtocol&gt;.UILayoutSupport.-heightAnchor():NSLayoutDimension*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-length" uniqueID="-length():CGFloat">
				<signature>&lt;AppScanProtocol&gt;.UILayoutSupport.-length():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-topAnchor" uniqueID="-topAnchor():NSLayoutYAxisAnchor*">
				<signature>&lt;AppScanProtocol&gt;.UILayoutSupport.-topAnchor():NSLayoutYAxisAnchor*</signature>
			</method>
		</class>
		<class name="MTLCommandEncoder" uniqueID="&lt;AppScanProtocol&gt;.MTLCommandEncoder">
			<method accessibility="Public" methodKind="Member" name="-device" uniqueID="-device():objc_object&lt;MTLDevice&gt;*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-device():objc_object&lt;MTLDevice&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endEncoding" uniqueID="-endEncoding():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-endEncoding():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-insertDebugSignpost:" uniqueID="-insertDebugSignpost:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-insertDebugSignpost:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-label" uniqueID="-label():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-label():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-popDebugGroup" uniqueID="-popDebugGroup():void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-popDebugGroup():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-pushDebugGroup:" uniqueID="-pushDebugGroup:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-pushDebugGroup:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setLabel:" uniqueID="-setLabel:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.MTLCommandEncoder.-setLabel:(NSString*):void</signature>
			</method>
		</class>
		<class name="MKOverlay" uniqueID="&lt;AppScanProtocol&gt;.MKOverlay">
			<method accessibility="Public" methodKind="Member" name="-boundingMapRect" uniqueID="-boundingMapRect():MKMapRect">
				<signature>&lt;AppScanProtocol&gt;.MKOverlay.-boundingMapRect():MKMapRect</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-canReplaceMapContent" uniqueID="-canReplaceMapContent():BOOL">
				<signature>&lt;AppScanProtocol&gt;.MKOverlay.-canReplaceMapContent():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-coordinate" uniqueID="-coordinate():CLLocationCoordinate2D">
				<signature>&lt;AppScanProtocol&gt;.MKOverlay.-coordinate():CLLocationCoordinate2D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-intersectsMapRect:" uniqueID="-intersectsMapRect:(MKMapRect):BOOL">
				<signature>&lt;AppScanProtocol&gt;.MKOverlay.-intersectsMapRect:(MKMapRect):BOOL</signature>
			</method>
		</class>
		<class name="MKMapViewDelegate" uniqueID="&lt;AppScanProtocol&gt;.MKMapViewDelegate">
			<method accessibility="Public" methodKind="Member" name="-mapView:annotationView:calloutAccessoryControlTapped:" uniqueID="-mapView:annotationView:calloutAccessoryControlTapped:(MKMapView*;MKAnnotationView*;UIControl*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:annotationView:calloutAccessoryControlTapped:(MKMapView*;MKAnnotationView*;UIControl*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:annotationView:didChangeDragState:fromOldState:" uniqueID="-mapView:annotationView:didChangeDragState:fromOldState:(MKMapView*;MKAnnotationView*;MKAnnotationViewDragState;MKAnnotationViewDragState):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:annotationView:didChangeDragState:fromOldState:(MKMapView*;MKAnnotationView*;MKAnnotationViewDragState;MKAnnotationViewDragState):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didAddAnnotationViews:" uniqueID="-mapView:didAddAnnotationViews:(MKMapView*;NSArray&lt;MKAnnotationView *&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didAddAnnotationViews:(MKMapView*;NSArray&lt;MKAnnotationView *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didAddOverlayRenderers:" uniqueID="-mapView:didAddOverlayRenderers:(MKMapView*;NSArray&lt;MKOverlayRenderer *&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didAddOverlayRenderers:(MKMapView*;NSArray&lt;MKOverlayRenderer *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didAddOverlayViews:" uniqueID="-mapView:didAddOverlayViews:(MKMapView*;NSArray*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didAddOverlayViews:(MKMapView*;NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didChangeUserTrackingMode:animated:" uniqueID="-mapView:didChangeUserTrackingMode:animated:(MKMapView*;MKUserTrackingMode;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didChangeUserTrackingMode:animated:(MKMapView*;MKUserTrackingMode;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didDeselectAnnotationView:" uniqueID="-mapView:didDeselectAnnotationView:(MKMapView*;MKAnnotationView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didDeselectAnnotationView:(MKMapView*;MKAnnotationView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didFailToLocateUserWithError:" uniqueID="-mapView:didFailToLocateUserWithError:(MKMapView*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didFailToLocateUserWithError:(MKMapView*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didSelectAnnotationView:" uniqueID="-mapView:didSelectAnnotationView:(MKMapView*;MKAnnotationView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didSelectAnnotationView:(MKMapView*;MKAnnotationView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:didUpdateUserLocation:" uniqueID="-mapView:didUpdateUserLocation:(MKMapView*;MKUserLocation*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:didUpdateUserLocation:(MKMapView*;MKUserLocation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:regionDidChangeAnimated:" uniqueID="-mapView:regionDidChangeAnimated:(MKMapView*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:regionDidChangeAnimated:(MKMapView*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:regionWillChangeAnimated:" uniqueID="-mapView:regionWillChangeAnimated:(MKMapView*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:regionWillChangeAnimated:(MKMapView*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:rendererForOverlay:" uniqueID="-mapView:rendererForOverlay:(MKMapView*;objc_object&lt;MKOverlay&gt;*):MKOverlayRenderer*">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:rendererForOverlay:(MKMapView*;objc_object&lt;MKOverlay&gt;*):MKOverlayRenderer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:viewForAnnotation:" uniqueID="-mapView:viewForAnnotation:(MKMapView*;objc_object&lt;MKAnnotation&gt;*):MKAnnotationView*">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:viewForAnnotation:(MKMapView*;objc_object&lt;MKAnnotation&gt;*):MKAnnotationView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapView:viewForOverlay:" uniqueID="-mapView:viewForOverlay:(MKMapView*;objc_object&lt;MKOverlay&gt;*):MKOverlayView*">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapView:viewForOverlay:(MKMapView*;objc_object&lt;MKOverlay&gt;*):MKOverlayView*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewDidFailLoadingMap:withError:" uniqueID="-mapViewDidFailLoadingMap:withError:(MKMapView*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewDidFailLoadingMap:withError:(MKMapView*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewDidFinishLoadingMap:" uniqueID="-mapViewDidFinishLoadingMap:(MKMapView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewDidFinishLoadingMap:(MKMapView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewDidFinishRenderingMap:fullyRendered:" uniqueID="-mapViewDidFinishRenderingMap:fullyRendered:(MKMapView*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewDidFinishRenderingMap:fullyRendered:(MKMapView*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewDidStopLocatingUser:" uniqueID="-mapViewDidStopLocatingUser:(MKMapView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewDidStopLocatingUser:(MKMapView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewWillStartLoadingMap:" uniqueID="-mapViewWillStartLoadingMap:(MKMapView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewWillStartLoadingMap:(MKMapView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewWillStartLocatingUser:" uniqueID="-mapViewWillStartLocatingUser:(MKMapView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewWillStartLocatingUser:(MKMapView*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-mapViewWillStartRenderingMap:" uniqueID="-mapViewWillStartRenderingMap:(MKMapView*):void">
				<signature>&lt;AppScanProtocol&gt;.MKMapViewDelegate.-mapViewWillStartRenderingMap:(MKMapView*):void</signature>
			</method>
		</class>
		<class name="MKAnnotation" uniqueID="&lt;AppScanProtocol&gt;.MKAnnotation">
			<method accessibility="Public" methodKind="Member" name="-coordinate" uniqueID="-coordinate():CLLocationCoordinate2D">
				<signature>&lt;AppScanProtocol&gt;.MKAnnotation.-coordinate():CLLocationCoordinate2D</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setCoordinate:" uniqueID="-setCoordinate:(CLLocationCoordinate2D):void">
				<signature>&lt;AppScanProtocol&gt;.MKAnnotation.-setCoordinate:(CLLocationCoordinate2D):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-subtitle" uniqueID="-subtitle():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MKAnnotation.-subtitle():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-title" uniqueID="-title():NSString*">
				<signature>&lt;AppScanProtocol&gt;.MKAnnotation.-title():NSString*</signature>
			</method>
		</class>
		<class name="CLLocationManagerDelegate" uniqueID="&lt;AppScanProtocol&gt;.CLLocationManagerDelegate">
			<method accessibility="Public" methodKind="Member" name="-locationManager:didChangeAuthorizationStatus:" uniqueID="-locationManager:didChangeAuthorizationStatus:(CLLocationManager*;CLAuthorizationStatus):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didChangeAuthorizationStatus:(CLLocationManager*;CLAuthorizationStatus):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didDetermineState:forRegion:" uniqueID="-locationManager:didDetermineState:forRegion:(CLLocationManager*;CLRegionState;CLRegion*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didDetermineState:forRegion:(CLLocationManager*;CLRegionState;CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didEnterRegion:" uniqueID="-locationManager:didEnterRegion:(CLLocationManager*;CLRegion*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didEnterRegion:(CLLocationManager*;CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didExitRegion:" uniqueID="-locationManager:didExitRegion:(CLLocationManager*;CLRegion*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didExitRegion:(CLLocationManager*;CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didFailWithError:" uniqueID="-locationManager:didFailWithError:(CLLocationManager*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didFailWithError:(CLLocationManager*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didFinishDeferredUpdatesWithError:" uniqueID="-locationManager:didFinishDeferredUpdatesWithError:(CLLocationManager*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didFinishDeferredUpdatesWithError:(CLLocationManager*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didRangeBeacons:inRegion:" uniqueID="-locationManager:didRangeBeacons:inRegion:(CLLocationManager*;NSArray&lt;CLBeacon *&gt;*;CLBeaconRegion*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didRangeBeacons:inRegion:(CLLocationManager*;NSArray&lt;CLBeacon *&gt;*;CLBeaconRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didStartMonitoringForRegion:" uniqueID="-locationManager:didStartMonitoringForRegion:(CLLocationManager*;CLRegion*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didStartMonitoringForRegion:(CLLocationManager*;CLRegion*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didUpdateHeading:" uniqueID="-locationManager:didUpdateHeading:(CLLocationManager*;CLHeading*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didUpdateHeading:(CLLocationManager*;CLHeading*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didUpdateLocations:" uniqueID="-locationManager:didUpdateLocations:(CLLocationManager*;NSArray&lt;CLLocation *&gt;*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didUpdateLocations:(CLLocationManager*;NSArray&lt;CLLocation *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didUpdateToLocation:fromLocation:" uniqueID="-locationManager:didUpdateToLocation:fromLocation:(CLLocationManager*;CLLocation*;CLLocation*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didUpdateToLocation:fromLocation:(CLLocationManager*;CLLocation*;CLLocation*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:didVisit:" uniqueID="-locationManager:didVisit:(CLLocationManager*;CLVisit*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:didVisit:(CLLocationManager*;CLVisit*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:monitoringDidFailForRegion:withError:" uniqueID="-locationManager:monitoringDidFailForRegion:withError:(CLLocationManager*;CLRegion*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:monitoringDidFailForRegion:withError:(CLLocationManager*;CLRegion*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManager:rangingBeaconsDidFailForRegion:withError:" uniqueID="-locationManager:rangingBeaconsDidFailForRegion:withError:(CLLocationManager*;CLBeaconRegion*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManager:rangingBeaconsDidFailForRegion:withError:(CLLocationManager*;CLBeaconRegion*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManagerDidPauseLocationUpdates:" uniqueID="-locationManagerDidPauseLocationUpdates:(CLLocationManager*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManagerDidPauseLocationUpdates:(CLLocationManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManagerDidResumeLocationUpdates:" uniqueID="-locationManagerDidResumeLocationUpdates:(CLLocationManager*):void">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManagerDidResumeLocationUpdates:(CLLocationManager*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-locationManagerShouldDisplayHeadingCalibration:" uniqueID="-locationManagerShouldDisplayHeadingCalibration:(CLLocationManager*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.CLLocationManagerDelegate.-locationManagerShouldDisplayHeadingCalibration:(CLLocationManager*):BOOL</signature>
			</method>
		</class>
		<class name="CAMediaTiming" uniqueID="&lt;AppScanProtocol&gt;.CAMediaTiming">
			<method accessibility="Public" methodKind="Member" name="-autoreverses" uniqueID="-autoreverses():BOOL">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-autoreverses():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-beginTime" uniqueID="-beginTime():CFTimeInterval">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-beginTime():CFTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-duration" uniqueID="-duration():CFTimeInterval">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-duration():CFTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-fillMode" uniqueID="-fillMode():NSString*">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-fillMode():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-repeatCount" uniqueID="-repeatCount():float">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-repeatCount():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-repeatDuration" uniqueID="-repeatDuration():CFTimeInterval">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-repeatDuration():CFTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setAutoreverses:" uniqueID="-setAutoreverses:(BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setAutoreverses:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setBeginTime:" uniqueID="-setBeginTime:(CFTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setBeginTime:(CFTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setDuration:" uniqueID="-setDuration:(CFTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setDuration:(CFTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setFillMode:" uniqueID="-setFillMode:(NSString*):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setFillMode:(NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRepeatCount:" uniqueID="-setRepeatCount:(float):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setRepeatCount:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setRepeatDuration:" uniqueID="-setRepeatDuration:(CFTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setRepeatDuration:(CFTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setSpeed:" uniqueID="-setSpeed:(float):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setSpeed:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-setTimeOffset:" uniqueID="-setTimeOffset:(CFTimeInterval):void">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-setTimeOffset:(CFTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-speed" uniqueID="-speed():float">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-speed():float</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-timeOffset" uniqueID="-timeOffset():CFTimeInterval">
				<signature>&lt;AppScanProtocol&gt;.CAMediaTiming.-timeOffset():CFTimeInterval</signature>
			</method>
		</class>
		<class name="CAAction" uniqueID="&lt;AppScanProtocol&gt;.CAAction">
			<method accessibility="Public" methodKind="Member" name="-runActionForKey:object:arguments:" uniqueID="-runActionForKey:object:arguments:(NSString*;id _Nonnull;NSDictionary*):void">
				<signature>&lt;AppScanProtocol&gt;.CAAction.-runActionForKey:object:arguments:(NSString*;id _Nonnull;NSDictionary*):void</signature>
			</method>
		</class>
		<class name="AVAudioSessionDelegate" uniqueID="&lt;AppScanProtocol&gt;.AVAudioSessionDelegate">
			<method accessibility="Public" methodKind="Member" name="-beginInterruption" uniqueID="-beginInterruption():void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioSessionDelegate.-beginInterruption():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endInterruption" uniqueID="-endInterruption():void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioSessionDelegate.-endInterruption():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-endInterruptionWithFlags:" uniqueID="-endInterruptionWithFlags:(NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioSessionDelegate.-endInterruptionWithFlags:(NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-inputIsAvailableChanged:" uniqueID="-inputIsAvailableChanged:(BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioSessionDelegate.-inputIsAvailableChanged:(BOOL):void</signature>
			</method>
		</class>
		<class name="AVAudioRecorderDelegate" uniqueID="&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate">
			<method accessibility="Public" methodKind="Member" name="-audioRecorderBeginInterruption:" uniqueID="-audioRecorderBeginInterruption:(AVAudioRecorder*):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate.-audioRecorderBeginInterruption:(AVAudioRecorder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioRecorderDidFinishRecording:successfully:" uniqueID="-audioRecorderDidFinishRecording:successfully:(AVAudioRecorder*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate.-audioRecorderDidFinishRecording:successfully:(AVAudioRecorder*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioRecorderEncodeErrorDidOccur:error:" uniqueID="-audioRecorderEncodeErrorDidOccur:error:(AVAudioRecorder*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate.-audioRecorderEncodeErrorDidOccur:error:(AVAudioRecorder*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioRecorderEndInterruption:" uniqueID="-audioRecorderEndInterruption:(AVAudioRecorder*):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate.-audioRecorderEndInterruption:(AVAudioRecorder*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioRecorderEndInterruption:withFlags:" uniqueID="-audioRecorderEndInterruption:withFlags:(AVAudioRecorder*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate.-audioRecorderEndInterruption:withFlags:(AVAudioRecorder*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioRecorderEndInterruption:withOptions:" uniqueID="-audioRecorderEndInterruption:withOptions:(AVAudioRecorder*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioRecorderDelegate.-audioRecorderEndInterruption:withOptions:(AVAudioRecorder*;NSUInteger):void</signature>
			</method>
		</class>
		<class name="AVAudioPlayerDelegate" uniqueID="&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate">
			<method accessibility="Public" methodKind="Member" name="-audioPlayerBeginInterruption:" uniqueID="-audioPlayerBeginInterruption:(AVAudioPlayer*):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate.-audioPlayerBeginInterruption:(AVAudioPlayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioPlayerDecodeErrorDidOccur:error:" uniqueID="-audioPlayerDecodeErrorDidOccur:error:(AVAudioPlayer*;NSError*):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate.-audioPlayerDecodeErrorDidOccur:error:(AVAudioPlayer*;NSError*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioPlayerDidFinishPlaying:successfully:" uniqueID="-audioPlayerDidFinishPlaying:successfully:(AVAudioPlayer*;BOOL):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate.-audioPlayerDidFinishPlaying:successfully:(AVAudioPlayer*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioPlayerEndInterruption:" uniqueID="-audioPlayerEndInterruption:(AVAudioPlayer*):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate.-audioPlayerEndInterruption:(AVAudioPlayer*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioPlayerEndInterruption:withFlags:" uniqueID="-audioPlayerEndInterruption:withFlags:(AVAudioPlayer*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate.-audioPlayerEndInterruption:withFlags:(AVAudioPlayer*;NSUInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-audioPlayerEndInterruption:withOptions:" uniqueID="-audioPlayerEndInterruption:withOptions:(AVAudioPlayer*;NSUInteger):void">
				<signature>&lt;AppScanProtocol&gt;.AVAudioPlayerDelegate.-audioPlayerEndInterruption:withOptions:(AVAudioPlayer*;NSUInteger):void</signature>
			</method>
		</class>
		<class name="NSObject" uniqueID="&lt;AppScanProtocol&gt;.NSObject">
			<method accessibility="Public" methodKind="Member" name="-autorelease" uniqueID="-autorelease():instancetype">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-autorelease():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-class" uniqueID="-class():Class*">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-class():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-conformsToProtocol:" uniqueID="-conformsToProtocol:(Protocol*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-conformsToProtocol:(Protocol*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-debugDescription" uniqueID="-debugDescription():NSString*">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-debugDescription():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-description" uniqueID="-description():NSString*">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-hash" uniqueID="-hash():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-hash():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isEqual:" uniqueID="-isEqual:(id):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-isEqual:(id):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isKindOfClass:" uniqueID="-isKindOfClass:(Class*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-isKindOfClass:(Class*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isMemberOfClass:" uniqueID="-isMemberOfClass:(Class*):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-isMemberOfClass:(Class*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-isProxy" uniqueID="-isProxy():BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-isProxy():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:" uniqueID="-performSelector:(SEL):id">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-performSelector:(SEL):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:withObject:" uniqueID="-performSelector:withObject:(SEL;id):id">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-performSelector:withObject:(SEL;id):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-performSelector:withObject:withObject:" uniqueID="-performSelector:withObject:withObject:(SEL;id;id):id">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-performSelector:withObject:withObject:(SEL;id;id):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-release" uniqueID="-release():void">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-release():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-respondsToSelector:" uniqueID="-respondsToSelector:(SEL):BOOL">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-respondsToSelector:(SEL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-retain" uniqueID="-retain():instancetype">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-retain():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-retainCount" uniqueID="-retainCount():NSUInteger">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-retainCount():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-self" uniqueID="-self():instancetype">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-self():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-superclass" uniqueID="-superclass():Class*">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-superclass():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="-zone" uniqueID="-zone():struct _NSZone*">
				<signature>&lt;AppScanProtocol&gt;.NSObject.-zone():struct _NSZone*</signature>
			</method>
		</class>
	</package>
	<package name="&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;">
		<class name="UIViewControllerRestoration" uniqueID="&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIViewControllerRestoration">
			<method accessibility="Public" methodKind="Member" name="+viewControllerWithRestorationIdentifierPath:coder:" uniqueID="+viewControllerWithRestorationIdentifierPath:coder:(NSArray*;NSCoder*):UIViewController*">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIViewControllerRestoration.+viewControllerWithRestorationIdentifierPath:coder:(NSArray*;NSCoder*):UIViewController*</signature>
			</method>
		</class>
		<class name="UIObjectRestoration" uniqueID="&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIObjectRestoration">
			<method accessibility="Public" methodKind="Member" name="+objectWithRestorationIdentifierPath:coder:" uniqueID="+objectWithRestorationIdentifierPath:coder:(NSArray&lt;NSString *&gt;*;NSCoder*):objc_object&lt;UIStateRestoring&gt;*">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIObjectRestoration.+objectWithRestorationIdentifierPath:coder:(NSArray&lt;NSString *&gt;*;NSCoder*):objc_object&lt;UIStateRestoring&gt;*</signature>
			</method>
		</class>
		<class name="UIAppearance" uniqueID="&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance">
			<method accessibility="Public" methodKind="Member" name="+appearance" uniqueID="+appearance():instancetype _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance.+appearance():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+appearanceForTraitCollection:" uniqueID="+appearanceForTraitCollection:(UITraitCollection*):instancetype _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance.+appearanceForTraitCollection:(UITraitCollection*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+appearanceForTraitCollection:whenContainedIn:" uniqueID="+appearanceForTraitCollection:whenContainedIn:(UITraitCollection*;objc_class&lt;UIAppearanceContainer&gt;*;...):instancetype _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance.+appearanceForTraitCollection:whenContainedIn:(UITraitCollection*;objc_class&lt;UIAppearanceContainer&gt;*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+appearanceForTraitCollection:whenContainedInInstancesOfClasses:" uniqueID="+appearanceForTraitCollection:whenContainedInInstancesOfClasses:(UITraitCollection*;NSArray&lt;Class&lt;UIAppearanceContainer&gt;&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance.+appearanceForTraitCollection:whenContainedInInstancesOfClasses:(UITraitCollection*;NSArray&lt;Class&lt;UIAppearanceContainer&gt;&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+appearanceWhenContainedIn:" uniqueID="+appearanceWhenContainedIn:(objc_class&lt;UIAppearanceContainer&gt;*;...):instancetype _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance.+appearanceWhenContainedIn:(objc_class&lt;UIAppearanceContainer&gt;*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+appearanceWhenContainedInInstancesOfClasses:" uniqueID="+appearanceWhenContainedInInstancesOfClasses:(NSArray&lt;Class&lt;UIAppearanceContainer&gt;&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.UIAppearance.+appearanceWhenContainedInInstancesOfClasses:(NSArray&lt;Class&lt;UIAppearanceContainer&gt;&gt;*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSSecureCoding" uniqueID="&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.NSSecureCoding">
			<method accessibility="Public" methodKind="Member" name="+supportsSecureCoding" uniqueID="+supportsSecureCoding():BOOL">
				<signature>&lt;AppScanProtocol&gt;.&lt;AppScanClass&gt;.NSSecureCoding.+supportsSecureCoding():BOOL</signature>
			</method>
		</class>
	</package>
	<package name="&lt;AppScanClass&gt;">
		<class name="UITraitCollection" uniqueID="&lt;AppScanClass&gt;.UITraitCollection">
			<method accessibility="Public" methodKind="Member" name="+traitCollectionWithDisplayScale:" uniqueID="+traitCollectionWithDisplayScale:(CGFloat):UITraitCollection*">
				<signature>&lt;AppScanClass&gt;.UITraitCollection.+traitCollectionWithDisplayScale:(CGFloat):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+traitCollectionWithForceTouchCapability:" uniqueID="+traitCollectionWithForceTouchCapability:(UIForceTouchCapability):UITraitCollection*">
				<signature>&lt;AppScanClass&gt;.UITraitCollection.+traitCollectionWithForceTouchCapability:(UIForceTouchCapability):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+traitCollectionWithHorizontalSizeClass:" uniqueID="+traitCollectionWithHorizontalSizeClass:(UIUserInterfaceSizeClass):UITraitCollection*">
				<signature>&lt;AppScanClass&gt;.UITraitCollection.+traitCollectionWithHorizontalSizeClass:(UIUserInterfaceSizeClass):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+traitCollectionWithTraitsFromCollections:" uniqueID="+traitCollectionWithTraitsFromCollections:(NSArray&lt;UITraitCollection *&gt;*):UITraitCollection*">
				<signature>&lt;AppScanClass&gt;.UITraitCollection.+traitCollectionWithTraitsFromCollections:(NSArray&lt;UITraitCollection *&gt;*):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+traitCollectionWithUserInterfaceIdiom:" uniqueID="+traitCollectionWithUserInterfaceIdiom:(UIUserInterfaceIdiom):UITraitCollection*">
				<signature>&lt;AppScanClass&gt;.UITraitCollection.+traitCollectionWithUserInterfaceIdiom:(UIUserInterfaceIdiom):UITraitCollection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+traitCollectionWithVerticalSizeClass:" uniqueID="+traitCollectionWithVerticalSizeClass:(UIUserInterfaceSizeClass):UITraitCollection*">
				<signature>&lt;AppScanClass&gt;.UITraitCollection.+traitCollectionWithVerticalSizeClass:(UIUserInterfaceSizeClass):UITraitCollection*</signature>
			</method>
		</class>
		<class name="UIStoryboardSegue" uniqueID="&lt;AppScanClass&gt;.UIStoryboardSegue">
			<method accessibility="Public" methodKind="Member" name="+segueWithIdentifier:source:destination:performHandler:" uniqueID="+segueWithIdentifier:source:destination:performHandler:(NSString*;UIViewController*;UIViewController*;(^)():void):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.UIStoryboardSegue.+segueWithIdentifier:source:destination:performHandler:(NSString*;UIViewController*;UIViewController*;(^)():void):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="UIScreen" uniqueID="&lt;AppScanClass&gt;.UIScreen">
			<method accessibility="Public" methodKind="Member" name="+mainScreen" uniqueID="+mainScreen():UIScreen*">
				<signature>&lt;AppScanClass&gt;.UIScreen.+mainScreen():UIScreen*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+screens" uniqueID="+screens():NSArray&lt;UIScreen *&gt;*">
				<signature>&lt;AppScanClass&gt;.UIScreen.+screens():NSArray&lt;UIScreen *&gt;*</signature>
			</method>
		</class>
		<class name="UIFont" uniqueID="&lt;AppScanClass&gt;.UIFont">
			<method accessibility="Public" methodKind="Member" name="+boldSystemFontOfSize:" uniqueID="+boldSystemFontOfSize:(CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+boldSystemFontOfSize:(CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+buttonFontSize" uniqueID="+buttonFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont.+buttonFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+familyNames" uniqueID="+familyNames():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.UIFont.+familyNames():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fontNamesForFamilyName:" uniqueID="+fontNamesForFamilyName:(NSString*):NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.UIFont.+fontNamesForFamilyName:(NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fontWithDescriptor:size:" uniqueID="+fontWithDescriptor:size:(UIFontDescriptor*;CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+fontWithDescriptor:size:(UIFontDescriptor*;CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fontWithName:size:" uniqueID="+fontWithName:size:(NSString*;CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+fontWithName:size:(NSString*;CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+italicSystemFontOfSize:" uniqueID="+italicSystemFontOfSize:(CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+italicSystemFontOfSize:(CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+labelFontSize" uniqueID="+labelFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont.+labelFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+monospacedDigitSystemFontOfSize:weight:" uniqueID="+monospacedDigitSystemFontOfSize:weight:(CGFloat;CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+monospacedDigitSystemFontOfSize:weight:(CGFloat;CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+preferredFontForTextStyle:" uniqueID="+preferredFontForTextStyle:(NSString*):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+preferredFontForTextStyle:(NSString*):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+smallSystemFontSize" uniqueID="+smallSystemFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont.+smallSystemFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemFontOfSize:" uniqueID="+systemFontOfSize:(CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+systemFontOfSize:(CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemFontOfSize:weight:" uniqueID="+systemFontOfSize:weight:(CGFloat;CGFloat):UIFont*">
				<signature>&lt;AppScanClass&gt;.UIFont.+systemFontOfSize:weight:(CGFloat;CGFloat):UIFont*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemFontSize" uniqueID="+systemFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont.+systemFontSize():CGFloat</signature>
			</method>
		</class>
		<class name="UIFont+UIFontSystemFonts" uniqueID="&lt;AppScanClass&gt;.UIFont+UIFontSystemFonts">
			<method accessibility="Public" methodKind="Member" name="+buttonFontSize" uniqueID="+buttonFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont+UIFontSystemFonts.+buttonFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+labelFontSize" uniqueID="+labelFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont+UIFontSystemFonts.+labelFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+smallSystemFontSize" uniqueID="+smallSystemFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont+UIFontSystemFonts.+smallSystemFontSize():CGFloat</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemFontSize" uniqueID="+systemFontSize():CGFloat">
				<signature>&lt;AppScanClass&gt;.UIFont+UIFontSystemFonts.+systemFontSize():CGFloat</signature>
			</method>
		</class>
		<class name="UIColor" uniqueID="&lt;AppScanClass&gt;.UIColor">
			<method accessibility="Public" methodKind="Member" name="+blackColor" uniqueID="+blackColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+blackColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+blueColor" uniqueID="+blueColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+blueColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+brownColor" uniqueID="+brownColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+brownColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+clearColor" uniqueID="+clearColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+clearColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithCGColor:" uniqueID="+colorWithCGColor:(struct CGColor*):UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+colorWithCGColor:(struct CGColor*):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithCIColor:" uniqueID="+colorWithCIColor:(CIColor*):UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+colorWithCIColor:(CIColor*):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithHue:saturation:brightness:alpha:" uniqueID="+colorWithHue:saturation:brightness:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+colorWithHue:saturation:brightness:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithPatternImage:" uniqueID="+colorWithPatternImage:(UIImage*):UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+colorWithPatternImage:(UIImage*):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithRed:green:blue:alpha:" uniqueID="+colorWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+colorWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithWhite:alpha:" uniqueID="+colorWithWhite:alpha:(CGFloat;CGFloat):UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+colorWithWhite:alpha:(CGFloat;CGFloat):UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+cyanColor" uniqueID="+cyanColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+cyanColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+darkGrayColor" uniqueID="+darkGrayColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+darkGrayColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+darkTextColor" uniqueID="+darkTextColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+darkTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+grayColor" uniqueID="+grayColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+grayColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+greenColor" uniqueID="+greenColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+greenColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+groupTableViewBackgroundColor" uniqueID="+groupTableViewBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+groupTableViewBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+lightGrayColor" uniqueID="+lightGrayColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+lightGrayColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+lightTextColor" uniqueID="+lightTextColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+lightTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+magentaColor" uniqueID="+magentaColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+magentaColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+orangeColor" uniqueID="+orangeColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+orangeColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+purpleColor" uniqueID="+purpleColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+purpleColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+redColor" uniqueID="+redColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+redColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+scrollViewTexturedBackgroundColor" uniqueID="+scrollViewTexturedBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+scrollViewTexturedBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+underPageBackgroundColor" uniqueID="+underPageBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+underPageBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+viewFlipsideBackgroundColor" uniqueID="+viewFlipsideBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+viewFlipsideBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+whiteColor" uniqueID="+whiteColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+whiteColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+yellowColor" uniqueID="+yellowColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor.+yellowColor():UIColor*</signature>
			</method>
		</class>
		<class name="UIColor+UIColorSystemColors" uniqueID="&lt;AppScanClass&gt;.UIColor+UIColorSystemColors">
			<method accessibility="Public" methodKind="Member" name="+darkTextColor" uniqueID="+darkTextColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor+UIColorSystemColors.+darkTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+groupTableViewBackgroundColor" uniqueID="+groupTableViewBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor+UIColorSystemColors.+groupTableViewBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+lightTextColor" uniqueID="+lightTextColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor+UIColorSystemColors.+lightTextColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+scrollViewTexturedBackgroundColor" uniqueID="+scrollViewTexturedBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor+UIColorSystemColors.+scrollViewTexturedBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+underPageBackgroundColor" uniqueID="+underPageBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor+UIColorSystemColors.+underPageBackgroundColor():UIColor*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+viewFlipsideBackgroundColor" uniqueID="+viewFlipsideBackgroundColor():UIColor*">
				<signature>&lt;AppScanClass&gt;.UIColor+UIColorSystemColors.+viewFlipsideBackgroundColor():UIColor*</signature>
			</method>
		</class>
		<class name="NSUUID" uniqueID="&lt;AppScanClass&gt;.NSUUID">
			<method accessibility="Public" methodKind="Member" name="+UUID" uniqueID="+UUID():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSUUID.+UUID():instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSURLSessionConfiguration+NSURLSessionDeprecated" uniqueID="&lt;AppScanClass&gt;.NSURLSessionConfiguration+NSURLSessionDeprecated">
			<method accessibility="Public" methodKind="Member" name="+backgroundSessionConfiguration:" uniqueID="+backgroundSessionConfiguration:(NSString*):NSURLSessionConfiguration*">
				<signature>&lt;AppScanClass&gt;.NSURLSessionConfiguration+NSURLSessionDeprecated.+backgroundSessionConfiguration:(NSString*):NSURLSessionConfiguration*</signature>
			</method>
		</class>
		<class name="NSURLCredentialStorage" uniqueID="&lt;AppScanClass&gt;.NSURLCredentialStorage">
			<method accessibility="Public" methodKind="Member" name="+sharedCredentialStorage" uniqueID="+sharedCredentialStorage():NSURLCredentialStorage*">
				<signature>&lt;AppScanClass&gt;.NSURLCredentialStorage.+sharedCredentialStorage():NSURLCredentialStorage*</signature>
			</method>
		</class>
		<class name="NSURLCredential" uniqueID="&lt;AppScanClass&gt;.NSURLCredential">
			<method accessibility="Public" methodKind="Member" name="+credentialForTrust:" uniqueID="+credentialForTrust:(struct __SecTrust*):NSURLCredential*">
				<signature>&lt;AppScanClass&gt;.NSURLCredential.+credentialForTrust:(struct __SecTrust*):NSURLCredential*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+credentialWithIdentity:certificates:persistence:" uniqueID="+credentialWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):NSURLCredential*">
				<signature>&lt;AppScanClass&gt;.NSURLCredential.+credentialWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):NSURLCredential*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+credentialWithUser:password:persistence:" uniqueID="+credentialWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):NSURLCredential*">
				<signature>&lt;AppScanClass&gt;.NSURLCredential.+credentialWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):NSURLCredential*</signature>
			</method>
		</class>
		<class name="NSURLCredential+NSServerTrust" uniqueID="&lt;AppScanClass&gt;.NSURLCredential+NSServerTrust">
			<method accessibility="Public" methodKind="Member" name="+credentialForTrust:" uniqueID="+credentialForTrust:(struct __SecTrust*):NSURLCredential*">
				<signature>&lt;AppScanClass&gt;.NSURLCredential+NSServerTrust.+credentialForTrust:(struct __SecTrust*):NSURLCredential*</signature>
			</method>
		</class>
		<class name="NSURLCredential+NSClientCertificate" uniqueID="&lt;AppScanClass&gt;.NSURLCredential+NSClientCertificate">
			<method accessibility="Public" methodKind="Member" name="+credentialWithIdentity:certificates:persistence:" uniqueID="+credentialWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):NSURLCredential*">
				<signature>&lt;AppScanClass&gt;.NSURLCredential+NSClientCertificate.+credentialWithIdentity:certificates:persistence:(struct __SecIdentity*;NSArray*;NSURLCredentialPersistence):NSURLCredential*</signature>
			</method>
		</class>
		<class name="NSURLConnection" uniqueID="&lt;AppScanClass&gt;.NSURLConnection">
			<method accessibility="Public" methodKind="Member" name="+canHandleRequest:" uniqueID="+canHandleRequest:(NSURLRequest*):BOOL">
				<signature>&lt;AppScanClass&gt;.NSURLConnection.+canHandleRequest:(NSURLRequest*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+connectionWithRequest:delegate:" uniqueID="+connectionWithRequest:delegate:(NSURLRequest*;id _Nullable):NSURLConnection*">
				<signature>&lt;AppScanClass&gt;.NSURLConnection.+connectionWithRequest:delegate:(NSURLRequest*;id _Nullable):NSURLConnection*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sendAsynchronousRequest:queue:completionHandler:" uniqueID="+sendAsynchronousRequest:queue:completionHandler:(NSURLRequest*;NSOperationQueue*;(^)(NSURLResponse*;NSData*;NSError*):void):void">
				<signature>&lt;AppScanClass&gt;.NSURLConnection.+sendAsynchronousRequest:queue:completionHandler:(NSURLRequest*;NSOperationQueue*;(^)(NSURLResponse*;NSData*;NSError*):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sendSynchronousRequest:returningResponse:error:" uniqueID="+sendSynchronousRequest:returningResponse:error:(NSURLRequest*;NSURLResponse**;NSError**):NSData*">
				<signature>&lt;AppScanClass&gt;.NSURLConnection.+sendSynchronousRequest:returningResponse:error:(NSURLRequest*;NSURLResponse**;NSError**):NSData*</signature>
			</method>
		</class>
		<class name="NSURLConnection+NSURLConnectionQueuedLoading" uniqueID="&lt;AppScanClass&gt;.NSURLConnection+NSURLConnectionQueuedLoading">
			<method accessibility="Public" methodKind="Member" name="+sendAsynchronousRequest:queue:completionHandler:" uniqueID="+sendAsynchronousRequest:queue:completionHandler:(NSURLRequest*;NSOperationQueue*;(^)(NSURLResponse*;NSData*;NSError*):void):void">
				<signature>&lt;AppScanClass&gt;.NSURLConnection+NSURLConnectionQueuedLoading.+sendAsynchronousRequest:queue:completionHandler:(NSURLRequest*;NSOperationQueue*;(^)(NSURLResponse*;NSData*;NSError*):void):void</signature>
			</method>
		</class>
		<class name="NSURLCache" uniqueID="&lt;AppScanClass&gt;.NSURLCache">
			<method accessibility="Public" methodKind="Member" name="+setSharedURLCache:" uniqueID="+setSharedURLCache:(NSURLCache*):void">
				<signature>&lt;AppScanClass&gt;.NSURLCache.+setSharedURLCache:(NSURLCache*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sharedURLCache" uniqueID="+sharedURLCache():NSURLCache*">
				<signature>&lt;AppScanClass&gt;.NSURLCache.+sharedURLCache():NSURLCache*</signature>
			</method>
		</class>
		<class name="NSURL+NSURLPathUtilities" uniqueID="&lt;AppScanClass&gt;.NSURL+NSURLPathUtilities">
			<method accessibility="Public" methodKind="Member" name="+fileURLWithPathComponents:" uniqueID="+fileURLWithPathComponents:(NSArray&lt;NSString *&gt;*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL+NSURLPathUtilities.+fileURLWithPathComponents:(NSArray&lt;NSString *&gt;*):NSURL*</signature>
			</method>
		</class>
		<class name="NSTimeZone" uniqueID="&lt;AppScanClass&gt;.NSTimeZone">
			<method accessibility="Public" methodKind="Member" name="+abbreviationDictionary" uniqueID="+abbreviationDictionary():NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+abbreviationDictionary():NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultTimeZone" uniqueID="+defaultTimeZone():NSTimeZone*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+defaultTimeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+knownTimeZoneNames" uniqueID="+knownTimeZoneNames():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+knownTimeZoneNames():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localTimeZone" uniqueID="+localTimeZone():NSTimeZone*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+localTimeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+resetSystemTimeZone" uniqueID="+resetSystemTimeZone():void">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+resetSystemTimeZone():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAbbreviationDictionary:" uniqueID="+setAbbreviationDictionary:(NSDictionary&lt;NSString *,NSString *&gt;*):void">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+setAbbreviationDictionary:(NSDictionary&lt;NSString *,NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setDefaultTimeZone:" uniqueID="+setDefaultTimeZone:(NSTimeZone*):void">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+setDefaultTimeZone:(NSTimeZone*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemTimeZone" uniqueID="+systemTimeZone():NSTimeZone*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+systemTimeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneDataVersion" uniqueID="+timeZoneDataVersion():NSString*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+timeZoneDataVersion():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneForSecondsFromGMT:" uniqueID="+timeZoneForSecondsFromGMT:(NSInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+timeZoneForSecondsFromGMT:(NSInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneWithAbbreviation:" uniqueID="+timeZoneWithAbbreviation:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+timeZoneWithAbbreviation:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneWithName:" uniqueID="+timeZoneWithName:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+timeZoneWithName:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneWithName:data:" uniqueID="+timeZoneWithName:data:(NSString*;NSData*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSTimeZone.+timeZoneWithName:data:(NSString*;NSData*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="UIStoryboard" uniqueID="&lt;AppScanClass&gt;.UIStoryboard">
			<method accessibility="Public" methodKind="Member" name="+storyboardWithName:bundle:" uniqueID="+storyboardWithName:bundle:(NSString*;NSBundle*):UIStoryboard*">
				<signature>&lt;AppScanClass&gt;.UIStoryboard.+storyboardWithName:bundle:(NSString*;NSBundle*):UIStoryboard*</signature>
			</method>
		</class>
		<class name="NSTimeZone+NSTimeZoneCreation" uniqueID="&lt;AppScanClass&gt;.NSTimeZone+NSTimeZoneCreation">
			<method accessibility="Public" methodKind="Member" name="+timeZoneForSecondsFromGMT:" uniqueID="+timeZoneForSecondsFromGMT:(NSInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSTimeZoneCreation.+timeZoneForSecondsFromGMT:(NSInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneWithAbbreviation:" uniqueID="+timeZoneWithAbbreviation:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSTimeZoneCreation.+timeZoneWithAbbreviation:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneWithName:" uniqueID="+timeZoneWithName:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSTimeZoneCreation.+timeZoneWithName:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneWithName:data:" uniqueID="+timeZoneWithName:data:(NSString*;NSData*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSTimeZoneCreation.+timeZoneWithName:data:(NSString*;NSData*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSString" uniqueID="&lt;AppScanClass&gt;.NSString">
			<method accessibility="Public" methodKind="Member" name="+availableStringEncodings" uniqueID="+availableStringEncodings():const NSStringEncoding*">
				<signature>&lt;AppScanClass&gt;.NSString.+availableStringEncodings():const NSStringEncoding*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultCStringEncoding" uniqueID="+defaultCStringEncoding():NSStringEncoding">
				<signature>&lt;AppScanClass&gt;.NSString.+defaultCStringEncoding():NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localizedNameOfStringEncoding:" uniqueID="+localizedNameOfStringEncoding:(NSStringEncoding):NSString*">
				<signature>&lt;AppScanClass&gt;.NSString.+localizedNameOfStringEncoding:(NSStringEncoding):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localizedStringWithFormat:" uniqueID="+localizedStringWithFormat:(NSString*;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString.+localizedStringWithFormat:(NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+pathWithComponents:" uniqueID="+pathWithComponents:(NSArray&lt;NSString *&gt;*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSString.+pathWithComponents:(NSArray&lt;NSString *&gt;*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+string" uniqueID="+string():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString.+string():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:" uniqueID="+stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSString**;BOOL*):NSStringEncoding">
				<signature>&lt;AppScanClass&gt;.NSString.+stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSString**;BOOL*):NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCString:" uniqueID="+stringWithCString:(const char*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithCString:(const char*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCString:encoding:" uniqueID="+stringWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCString:length:" uniqueID="+stringWithCString:length:(const char*;NSUInteger):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithCString:length:(const char*;NSUInteger):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCharacters:length:" uniqueID="+stringWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfFile:" uniqueID="+stringWithContentsOfFile:(NSString*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithContentsOfFile:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfFile:encoding:error:" uniqueID="+stringWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfFile:usedEncoding:error:" uniqueID="+stringWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfURL:" uniqueID="+stringWithContentsOfURL:(NSURL*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithContentsOfURL:(NSURL*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfURL:encoding:error:" uniqueID="+stringWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfURL:usedEncoding:error:" uniqueID="+stringWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithFormat:" uniqueID="+stringWithFormat:(NSString*;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithFormat:(NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithString:" uniqueID="+stringWithString:(NSString*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithUTF8String:" uniqueID="+stringWithUTF8String:(const char*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString.+stringWithUTF8String:(const char*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSString+NSStringPathExtensions" uniqueID="&lt;AppScanClass&gt;.NSString+NSStringPathExtensions">
			<method accessibility="Public" methodKind="Member" name="+pathWithComponents:" uniqueID="+pathWithComponents:(NSArray&lt;NSString *&gt;*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringPathExtensions.+pathWithComponents:(NSArray&lt;NSString *&gt;*):NSString*</signature>
			</method>
		</class>
		<class name="NSURL" uniqueID="&lt;AppScanClass&gt;.NSURL">
			<method accessibility="Public" methodKind="Member" name="+URLByResolvingAliasFileAtURL:options:error:" uniqueID="+URLByResolvingAliasFileAtURL:options:error:(NSURL*;NSURLBookmarkResolutionOptions;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSURL.+URLByResolvingAliasFileAtURL:options:error:(NSURL*;NSURLBookmarkResolutionOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:" uniqueID="+URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:(NSData*;NSURLBookmarkResolutionOptions;NSURL*;BOOL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSURL.+URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:(NSData*;NSURLBookmarkResolutionOptions;NSURL*;BOOL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+URLWithDataRepresentation:relativeToURL:" uniqueID="+URLWithDataRepresentation:relativeToURL:(NSData*;NSURL*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+URLWithDataRepresentation:relativeToURL:(NSData*;NSURL*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+URLWithString:" uniqueID="+URLWithString:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSURL.+URLWithString:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+URLWithString:relativeToURL:" uniqueID="+URLWithString:relativeToURL:(NSString*;NSURL*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSURL.+URLWithString:relativeToURL:(NSString*;NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+absoluteURLWithDataRepresentation:relativeToURL:" uniqueID="+absoluteURLWithDataRepresentation:relativeToURL:(NSData*;NSURL*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+absoluteURLWithDataRepresentation:relativeToURL:(NSData*;NSURL*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+bookmarkDataWithContentsOfURL:error:" uniqueID="+bookmarkDataWithContentsOfURL:error:(NSURL*;NSError**):NSData*">
				<signature>&lt;AppScanClass&gt;.NSURL.+bookmarkDataWithContentsOfURL:error:(NSURL*;NSError**):NSData*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:" uniqueID="+fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:(const char*;BOOL;NSURL*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:(const char*;BOOL;NSURL*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileURLWithPath:" uniqueID="+fileURLWithPath:(NSString*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+fileURLWithPath:(NSString*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileURLWithPath:isDirectory:" uniqueID="+fileURLWithPath:isDirectory:(NSString*;BOOL):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+fileURLWithPath:isDirectory:(NSString*;BOOL):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileURLWithPath:isDirectory:relativeToURL:" uniqueID="+fileURLWithPath:isDirectory:relativeToURL:(NSString*;BOOL;NSURL*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+fileURLWithPath:isDirectory:relativeToURL:(NSString*;BOOL;NSURL*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileURLWithPath:relativeToURL:" uniqueID="+fileURLWithPath:relativeToURL:(NSString*;NSURL*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+fileURLWithPath:relativeToURL:(NSString*;NSURL*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileURLWithPathComponents:" uniqueID="+fileURLWithPathComponents:(NSArray&lt;NSString *&gt;*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSURL.+fileURLWithPathComponents:(NSArray&lt;NSString *&gt;*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+resourceValuesForKeys:fromBookmarkData:" uniqueID="+resourceValuesForKeys:fromBookmarkData:(NSArray&lt;NSString *&gt;*;NSData*):NSDictionary&lt;NSString *,id&gt;*">
				<signature>&lt;AppScanClass&gt;.NSURL.+resourceValuesForKeys:fromBookmarkData:(NSArray&lt;NSString *&gt;*;NSData*):NSDictionary&lt;NSString *,id&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+writeBookmarkData:toURL:options:error:" uniqueID="+writeBookmarkData:toURL:options:error:(NSData*;NSURL*;NSURLBookmarkFileCreationOptions;NSError**):BOOL">
				<signature>&lt;AppScanClass&gt;.NSURL.+writeBookmarkData:toURL:options:error:(NSData*;NSURL*;NSURLBookmarkFileCreationOptions;NSError**):BOOL</signature>
			</method>
		</class>
		<class name="NSString+NSStringExtensionMethods" uniqueID="&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods">
			<method accessibility="Public" methodKind="Member" name="+availableStringEncodings" uniqueID="+availableStringEncodings():const NSStringEncoding*">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+availableStringEncodings():const NSStringEncoding*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultCStringEncoding" uniqueID="+defaultCStringEncoding():NSStringEncoding">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+defaultCStringEncoding():NSStringEncoding</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localizedNameOfStringEncoding:" uniqueID="+localizedNameOfStringEncoding:(NSStringEncoding):NSString*">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+localizedNameOfStringEncoding:(NSStringEncoding):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localizedStringWithFormat:" uniqueID="+localizedStringWithFormat:(NSString*;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+localizedStringWithFormat:(NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+string" uniqueID="+string():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+string():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCString:encoding:" uniqueID="+stringWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithCString:encoding:(const char*;NSStringEncoding):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCharacters:length:" uniqueID="+stringWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithCharacters:length:(const unichar*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfFile:encoding:error:" uniqueID="+stringWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithContentsOfFile:encoding:error:(NSString*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfFile:usedEncoding:error:" uniqueID="+stringWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithContentsOfFile:usedEncoding:error:(NSString*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfURL:encoding:error:" uniqueID="+stringWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithContentsOfURL:encoding:error:(NSURL*;NSStringEncoding;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfURL:usedEncoding:error:" uniqueID="+stringWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithContentsOfURL:usedEncoding:error:(NSURL*;NSStringEncoding*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithFormat:" uniqueID="+stringWithFormat:(NSString*;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithFormat:(NSString*;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithString:" uniqueID="+stringWithString:(NSString*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithUTF8String:" uniqueID="+stringWithUTF8String:(const char*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringExtensionMethods.+stringWithUTF8String:(const char*):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSString+NSStringEncodingDetection" uniqueID="&lt;AppScanClass&gt;.NSString+NSStringEncodingDetection">
			<method accessibility="Public" methodKind="Member" name="+stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:" uniqueID="+stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSString**;BOOL*):NSStringEncoding">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringEncodingDetection.+stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:(NSData*;NSDictionary&lt;NSString *,id&gt;*;NSString**;BOOL*):NSStringEncoding</signature>
			</method>
		</class>
		<class name="NSSet" uniqueID="&lt;AppScanClass&gt;.NSSet">
			<method accessibility="Public" methodKind="Member" name="+set" uniqueID="+set():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet.+set():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithArray:" uniqueID="+setWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet.+setWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithObject:" uniqueID="+setWithObject:(ObjectType _Nonnull):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet.+setWithObject:(ObjectType _Nonnull):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithObjects:" uniqueID="+setWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet.+setWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithObjects:count:" uniqueID="+setWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet.+setWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithSet:" uniqueID="+setWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet.+setWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSSet+NSSetCreation" uniqueID="&lt;AppScanClass&gt;.NSSet+NSSetCreation">
			<method accessibility="Public" methodKind="Member" name="+set" uniqueID="+set():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet+NSSetCreation.+set():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithArray:" uniqueID="+setWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet+NSSetCreation.+setWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithObject:" uniqueID="+setWithObject:(ObjectType _Nonnull):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet+NSSetCreation.+setWithObject:(ObjectType _Nonnull):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithObjects:" uniqueID="+setWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet+NSSetCreation.+setWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithObjects:count:" uniqueID="+setWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet+NSSetCreation.+setWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setWithSet:" uniqueID="+setWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSet+NSSetCreation.+setWithSet:(NSSet&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSRunLoop" uniqueID="&lt;AppScanClass&gt;.NSRunLoop">
			<method accessibility="Public" methodKind="Member" name="+currentRunLoop" uniqueID="+currentRunLoop():NSRunLoop*">
				<signature>&lt;AppScanClass&gt;.NSRunLoop.+currentRunLoop():NSRunLoop*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+mainRunLoop" uniqueID="+mainRunLoop():NSRunLoop*">
				<signature>&lt;AppScanClass&gt;.NSRunLoop.+mainRunLoop():NSRunLoop*</signature>
			</method>
		</class>
		<class name="NSRegularExpression" uniqueID="&lt;AppScanClass&gt;.NSRegularExpression">
			<method accessibility="Public" methodKind="Member" name="+escapedPatternForString:" uniqueID="+escapedPatternForString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSRegularExpression.+escapedPatternForString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+escapedTemplateForString:" uniqueID="+escapedTemplateForString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSRegularExpression.+escapedTemplateForString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+regularExpressionWithPattern:options:error:" uniqueID="+regularExpressionWithPattern:options:error:(NSString*;NSRegularExpressionOptions;NSError**):NSRegularExpression*">
				<signature>&lt;AppScanClass&gt;.NSRegularExpression.+regularExpressionWithPattern:options:error:(NSString*;NSRegularExpressionOptions;NSError**):NSRegularExpression*</signature>
			</method>
		</class>
		<class name="NSRegularExpression+NSReplacement" uniqueID="&lt;AppScanClass&gt;.NSRegularExpression+NSReplacement">
			<method accessibility="Public" methodKind="Member" name="+escapedTemplateForString:" uniqueID="+escapedTemplateForString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSRegularExpression+NSReplacement.+escapedTemplateForString:(NSString*):NSString*</signature>
			</method>
		</class>
		<class name="NSSortDescriptor" uniqueID="&lt;AppScanClass&gt;.NSSortDescriptor">
			<method accessibility="Public" methodKind="Member" name="+sortDescriptorWithKey:ascending:" uniqueID="+sortDescriptorWithKey:ascending:(NSString*;BOOL):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSortDescriptor.+sortDescriptorWithKey:ascending:(NSString*;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sortDescriptorWithKey:ascending:comparator:" uniqueID="+sortDescriptorWithKey:ascending:comparator:(NSString*;BOOL;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSortDescriptor.+sortDescriptorWithKey:ascending:comparator:(NSString*;BOOL;(^)(id _Nonnull;id _Nonnull):NSComparisonResult):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sortDescriptorWithKey:ascending:selector:" uniqueID="+sortDescriptorWithKey:ascending:selector:(NSString*;BOOL;SEL _Nullable):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSSortDescriptor.+sortDescriptorWithKey:ascending:selector:(NSString*;BOOL;SEL _Nullable):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSOperationQueue" uniqueID="&lt;AppScanClass&gt;.NSOperationQueue">
			<method accessibility="Public" methodKind="Member" name="+currentQueue" uniqueID="+currentQueue():NSOperationQueue*">
				<signature>&lt;AppScanClass&gt;.NSOperationQueue.+currentQueue():NSOperationQueue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+mainQueue" uniqueID="+mainQueue():NSOperationQueue*">
				<signature>&lt;AppScanClass&gt;.NSOperationQueue.+mainQueue():NSOperationQueue*</signature>
			</method>
		</class>
		<class name="UIImage" uniqueID="&lt;AppScanClass&gt;.UIImage">
			<method accessibility="Public" methodKind="Member" name="+animatedImageNamed:duration:" uniqueID="+animatedImageNamed:duration:(NSString*;NSTimeInterval):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+animatedImageNamed:duration:(NSString*;NSTimeInterval):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animatedImageWithImages:duration:" uniqueID="+animatedImageWithImages:duration:(NSArray&lt;UIImage *&gt;*;NSTimeInterval):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+animatedImageWithImages:duration:(NSArray&lt;UIImage *&gt;*;NSTimeInterval):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animatedResizableImageNamed:capInsets:duration:" uniqueID="+animatedResizableImageNamed:capInsets:duration:(NSString*;UIEdgeInsets;NSTimeInterval):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+animatedResizableImageNamed:capInsets:duration:(NSString*;UIEdgeInsets;NSTimeInterval):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animatedResizableImageNamed:capInsets:resizingMode:duration:" uniqueID="+animatedResizableImageNamed:capInsets:resizingMode:duration:(NSString*;UIEdgeInsets;UIImageResizingMode;NSTimeInterval):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+animatedResizableImageNamed:capInsets:resizingMode:duration:(NSString*;UIEdgeInsets;UIImageResizingMode;NSTimeInterval):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageNamed:" uniqueID="+imageNamed:(NSString*):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageNamed:(NSString*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageNamed:inBundle:compatibleWithTraitCollection:" uniqueID="+imageNamed:inBundle:compatibleWithTraitCollection:(NSString*;NSBundle*;UITraitCollection*):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageNamed:inBundle:compatibleWithTraitCollection:(NSString*;NSBundle*;UITraitCollection*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCGImage:" uniqueID="+imageWithCGImage:(struct CGImage*):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithCGImage:(struct CGImage*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCGImage:scale:orientation:" uniqueID="+imageWithCGImage:scale:orientation:(struct CGImage*;CGFloat;UIImageOrientation):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithCGImage:scale:orientation:(struct CGImage*;CGFloat;UIImageOrientation):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCIImage:" uniqueID="+imageWithCIImage:(CIImage*):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithCIImage:(CIImage*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCIImage:scale:orientation:" uniqueID="+imageWithCIImage:scale:orientation:(CIImage*;CGFloat;UIImageOrientation):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithCIImage:scale:orientation:(CIImage*;CGFloat;UIImageOrientation):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithContentsOfFile:" uniqueID="+imageWithContentsOfFile:(NSString*):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithContentsOfFile:(NSString*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithData:" uniqueID="+imageWithData:(NSData*):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithData:(NSData*):UIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithData:scale:" uniqueID="+imageWithData:scale:(NSData*;CGFloat):UIImage*">
				<signature>&lt;AppScanClass&gt;.UIImage.+imageWithData:scale:(NSData*;CGFloat):UIImage*</signature>
			</method>
		</class>
		<class name="NSValue+NSValueUIGeometryExtensions" uniqueID="&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions">
			<method accessibility="Public" methodKind="Member" name="+valueWithCGAffineTransform:" uniqueID="+valueWithCGAffineTransform:(CGAffineTransform):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithCGAffineTransform:(CGAffineTransform):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGPoint:" uniqueID="+valueWithCGPoint:(CGPoint):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithCGPoint:(CGPoint):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGRect:" uniqueID="+valueWithCGRect:(CGRect):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithCGRect:(CGRect):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGSize:" uniqueID="+valueWithCGSize:(CGSize):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithCGSize:(CGSize):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGVector:" uniqueID="+valueWithCGVector:(CGVector):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithCGVector:(CGVector):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithUIEdgeInsets:" uniqueID="+valueWithUIEdgeInsets:(UIEdgeInsets):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithUIEdgeInsets:(UIEdgeInsets):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithUIOffset:" uniqueID="+valueWithUIOffset:(UIOffset):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueUIGeometryExtensions.+valueWithUIOffset:(UIOffset):NSValue*</signature>
			</method>
		</class>
		<class name="NSValue+NSValueCreation" uniqueID="&lt;AppScanClass&gt;.NSValue+NSValueCreation">
			<method accessibility="Public" methodKind="Member" name="+value:withObjCType:" uniqueID="+value:withObjCType:(const void*;const char*):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueCreation.+value:withObjCType:(const void*;const char*):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithBytes:objCType:" uniqueID="+valueWithBytes:objCType:(const void*;const char*):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueCreation.+valueWithBytes:objCType:(const void*;const char*):NSValue*</signature>
			</method>
		</class>
		<class name="NSValue+CATransform3DAdditions" uniqueID="&lt;AppScanClass&gt;.NSValue+CATransform3DAdditions">
			<method accessibility="Public" methodKind="Member" name="+valueWithCATransform3D:" uniqueID="+valueWithCATransform3D:(CATransform3D):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+CATransform3DAdditions.+valueWithCATransform3D:(CATransform3D):NSValue*</signature>
			</method>
		</class>
		<class name="NSValue+NSValueRangeExtensions" uniqueID="&lt;AppScanClass&gt;.NSValue+NSValueRangeExtensions">
			<method accessibility="Public" methodKind="Member" name="+valueWithRange:" uniqueID="+valueWithRange:(NSRange):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueRangeExtensions.+valueWithRange:(NSRange):NSValue*</signature>
			</method>
		</class>
		<class name="NSNumber+NSNumberCreation" uniqueID="&lt;AppScanClass&gt;.NSNumber+NSNumberCreation">
			<method accessibility="Public" methodKind="Member" name="+numberWithBool:" uniqueID="+numberWithBool:(BOOL):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithBool:(BOOL):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithChar:" uniqueID="+numberWithChar:(char):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithChar:(char):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithDouble:" uniqueID="+numberWithDouble:(double):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithDouble:(double):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithFloat:" uniqueID="+numberWithFloat:(float):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithFloat:(float):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithInt:" uniqueID="+numberWithInt:(int):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithInt:(int):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithInteger:" uniqueID="+numberWithInteger:(NSInteger):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithInteger:(NSInteger):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithLong:" uniqueID="+numberWithLong:(long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithLong:(long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithLongLong:" uniqueID="+numberWithLongLong:(long long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithLongLong:(long long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithShort:" uniqueID="+numberWithShort:(short):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithShort:(short):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedChar:" uniqueID="+numberWithUnsignedChar:(unsigned char):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithUnsignedChar:(unsigned char):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedInt:" uniqueID="+numberWithUnsignedInt:(unsigned int):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithUnsignedInt:(unsigned int):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedInteger:" uniqueID="+numberWithUnsignedInteger:(NSUInteger):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithUnsignedInteger:(NSUInteger):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedLong:" uniqueID="+numberWithUnsignedLong:(unsigned long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithUnsignedLong:(unsigned long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedLongLong:" uniqueID="+numberWithUnsignedLongLong:(unsigned long long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithUnsignedLongLong:(unsigned long long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedShort:" uniqueID="+numberWithUnsignedShort:(unsigned short):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber+NSNumberCreation.+numberWithUnsignedShort:(unsigned short):NSNumber*</signature>
			</method>
		</class>
		<class name="NSNotification" uniqueID="&lt;AppScanClass&gt;.NSNotification">
			<method accessibility="Public" methodKind="Member" name="+notificationWithName:object:" uniqueID="+notificationWithName:object:(NSString*;id _Nullable):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSNotification.+notificationWithName:object:(NSString*;id _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+notificationWithName:object:userInfo:" uniqueID="+notificationWithName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSNotification.+notificationWithName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSNotification+NSNotificationCreation" uniqueID="&lt;AppScanClass&gt;.NSNotification+NSNotificationCreation">
			<method accessibility="Public" methodKind="Member" name="+notificationWithName:object:" uniqueID="+notificationWithName:object:(NSString*;id _Nullable):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSNotification+NSNotificationCreation.+notificationWithName:object:(NSString*;id _Nullable):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+notificationWithName:object:userInfo:" uniqueID="+notificationWithName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSNotification+NSNotificationCreation.+notificationWithName:object:userInfo:(NSString*;id _Nullable;NSDictionary*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSURLRequest" uniqueID="&lt;AppScanClass&gt;.NSURLRequest">
			<method accessibility="Public" methodKind="Member" name="+requestWithURL:" uniqueID="+requestWithURL:(NSURL*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSURLRequest.+requestWithURL:(NSURL*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+requestWithURL:cachePolicy:timeoutInterval:" uniqueID="+requestWithURL:cachePolicy:timeoutInterval:(NSURL*;NSURLRequestCachePolicy;NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSURLRequest.+requestWithURL:cachePolicy:timeoutInterval:(NSURL*;NSURLRequestCachePolicy;NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+supportsSecureCoding" uniqueID="+supportsSecureCoding():BOOL">
				<signature>&lt;AppScanClass&gt;.NSURLRequest.+supportsSecureCoding():BOOL</signature>
			</method>
		</class>
		<class name="NSMutableDictionary" uniqueID="&lt;AppScanClass&gt;.NSMutableDictionary">
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithCapacity:" uniqueID="+dictionaryWithCapacity:(NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary.+dictionaryWithCapacity:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfFile:" uniqueID="+dictionaryWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary.+dictionaryWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfURL:" uniqueID="+dictionaryWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary.+dictionaryWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithSharedKeySet:" uniqueID="+dictionaryWithSharedKeySet:(id _Nonnull):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary.+dictionaryWithSharedKeySet:(id _Nonnull):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableDictionary+NSSharedKeySetDictionary" uniqueID="&lt;AppScanClass&gt;.NSMutableDictionary+NSSharedKeySetDictionary">
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithSharedKeySet:" uniqueID="+dictionaryWithSharedKeySet:(id _Nonnull):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary+NSSharedKeySetDictionary.+dictionaryWithSharedKeySet:(id _Nonnull):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableDictionary+NSMutableDictionaryCreation" uniqueID="&lt;AppScanClass&gt;.NSMutableDictionary+NSMutableDictionaryCreation">
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithCapacity:" uniqueID="+dictionaryWithCapacity:(NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary+NSMutableDictionaryCreation.+dictionaryWithCapacity:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfFile:" uniqueID="+dictionaryWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary+NSMutableDictionaryCreation.+dictionaryWithContentsOfFile:(NSString*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfURL:" uniqueID="+dictionaryWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableDictionary+NSMutableDictionaryCreation.+dictionaryWithContentsOfURL:(NSURL*):NSMutableDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableData" uniqueID="&lt;AppScanClass&gt;.NSMutableData">
			<method accessibility="Public" methodKind="Member" name="+dataWithCapacity:" uniqueID="+dataWithCapacity:(NSUInteger):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSMutableData.+dataWithCapacity:(NSUInteger):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithLength:" uniqueID="+dataWithLength:(NSUInteger):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSMutableData.+dataWithLength:(NSUInteger):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSMutableData+NSMutableDataCreation" uniqueID="&lt;AppScanClass&gt;.NSMutableData+NSMutableDataCreation">
			<method accessibility="Public" methodKind="Member" name="+dataWithCapacity:" uniqueID="+dataWithCapacity:(NSUInteger):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSMutableData+NSMutableDataCreation.+dataWithCapacity:(NSUInteger):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithLength:" uniqueID="+dataWithLength:(NSUInteger):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSMutableData+NSMutableDataCreation.+dataWithLength:(NSUInteger):instancetype _Nullable</signature>
			</method>
		</class>
		<class name="NSMutableArray" uniqueID="&lt;AppScanClass&gt;.NSMutableArray">
			<method accessibility="Public" methodKind="Member" name="+arrayWithCapacity:" uniqueID="+arrayWithCapacity:(NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSMutableArray.+arrayWithCapacity:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfFile:" uniqueID="+arrayWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableArray.+arrayWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfURL:" uniqueID="+arrayWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableArray.+arrayWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSMutableArray+NSMutableArrayCreation" uniqueID="&lt;AppScanClass&gt;.NSMutableArray+NSMutableArrayCreation">
			<method accessibility="Public" methodKind="Member" name="+arrayWithCapacity:" uniqueID="+arrayWithCapacity:(NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSMutableArray+NSMutableArrayCreation.+arrayWithCapacity:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfFile:" uniqueID="+arrayWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableArray+NSMutableArrayCreation.+arrayWithContentsOfFile:(NSString*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfURL:" uniqueID="+arrayWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSMutableArray+NSMutableArrayCreation.+arrayWithContentsOfURL:(NSURL*):NSMutableArray&lt;ObjectType&gt;*</signature>
			</method>
		</class>
		<class name="NSLocale" uniqueID="&lt;AppScanClass&gt;.NSLocale">
			<method accessibility="Public" methodKind="Member" name="+ISOCountryCodes" uniqueID="+ISOCountryCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+ISOCountryCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+ISOCurrencyCodes" uniqueID="+ISOCurrencyCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+ISOCurrencyCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+ISOLanguageCodes" uniqueID="+ISOLanguageCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+ISOLanguageCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+autoupdatingCurrentLocale" uniqueID="+autoupdatingCurrentLocale():NSLocale*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+autoupdatingCurrentLocale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+availableLocaleIdentifiers" uniqueID="+availableLocaleIdentifiers():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+availableLocaleIdentifiers():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+canonicalLanguageIdentifierFromString:" uniqueID="+canonicalLanguageIdentifierFromString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+canonicalLanguageIdentifierFromString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+canonicalLocaleIdentifierFromString:" uniqueID="+canonicalLocaleIdentifierFromString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+canonicalLocaleIdentifierFromString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+characterDirectionForLanguage:" uniqueID="+characterDirectionForLanguage:(NSString*):NSLocaleLanguageDirection">
				<signature>&lt;AppScanClass&gt;.NSLocale.+characterDirectionForLanguage:(NSString*):NSLocaleLanguageDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+commonISOCurrencyCodes" uniqueID="+commonISOCurrencyCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+commonISOCurrencyCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+componentsFromLocaleIdentifier:" uniqueID="+componentsFromLocaleIdentifier:(NSString*):NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+componentsFromLocaleIdentifier:(NSString*):NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentLocale" uniqueID="+currentLocale():NSLocale*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+currentLocale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+lineDirectionForLanguage:" uniqueID="+lineDirectionForLanguage:(NSString*):NSLocaleLanguageDirection">
				<signature>&lt;AppScanClass&gt;.NSLocale.+lineDirectionForLanguage:(NSString*):NSLocaleLanguageDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localeIdentifierFromComponents:" uniqueID="+localeIdentifierFromComponents:(NSDictionary&lt;NSString *,NSString *&gt;*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+localeIdentifierFromComponents:(NSDictionary&lt;NSString *,NSString *&gt;*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localeIdentifierFromWindowsLocaleCode:" uniqueID="+localeIdentifierFromWindowsLocaleCode:(uint32_t):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+localeIdentifierFromWindowsLocaleCode:(uint32_t):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localeWithLocaleIdentifier:" uniqueID="+localeWithLocaleIdentifier:(NSString*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSLocale.+localeWithLocaleIdentifier:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+preferredLanguages" uniqueID="+preferredLanguages():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+preferredLanguages():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemLocale" uniqueID="+systemLocale():NSLocale*">
				<signature>&lt;AppScanClass&gt;.NSLocale.+systemLocale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+windowsLocaleCodeFromLocaleIdentifier:" uniqueID="+windowsLocaleCodeFromLocaleIdentifier:(NSString*):uint32_t">
				<signature>&lt;AppScanClass&gt;.NSLocale.+windowsLocaleCodeFromLocaleIdentifier:(NSString*):uint32_t</signature>
			</method>
		</class>
		<class name="NSNotificationCenter" uniqueID="&lt;AppScanClass&gt;.NSNotificationCenter">
			<method accessibility="Public" methodKind="Member" name="+defaultCenter" uniqueID="+defaultCenter():NSNotificationCenter*">
				<signature>&lt;AppScanClass&gt;.NSNotificationCenter.+defaultCenter():NSNotificationCenter*</signature>
			</method>
		</class>
		<class name="NSLocale+NSLocaleGeneralInfo" uniqueID="&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo">
			<method accessibility="Public" methodKind="Member" name="+ISOCountryCodes" uniqueID="+ISOCountryCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+ISOCountryCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+ISOCurrencyCodes" uniqueID="+ISOCurrencyCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+ISOCurrencyCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+ISOLanguageCodes" uniqueID="+ISOLanguageCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+ISOLanguageCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+availableLocaleIdentifiers" uniqueID="+availableLocaleIdentifiers():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+availableLocaleIdentifiers():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+canonicalLanguageIdentifierFromString:" uniqueID="+canonicalLanguageIdentifierFromString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+canonicalLanguageIdentifierFromString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+canonicalLocaleIdentifierFromString:" uniqueID="+canonicalLocaleIdentifierFromString:(NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+canonicalLocaleIdentifierFromString:(NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+characterDirectionForLanguage:" uniqueID="+characterDirectionForLanguage:(NSString*):NSLocaleLanguageDirection">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+characterDirectionForLanguage:(NSString*):NSLocaleLanguageDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+commonISOCurrencyCodes" uniqueID="+commonISOCurrencyCodes():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+commonISOCurrencyCodes():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+componentsFromLocaleIdentifier:" uniqueID="+componentsFromLocaleIdentifier:(NSString*):NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+componentsFromLocaleIdentifier:(NSString*):NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+lineDirectionForLanguage:" uniqueID="+lineDirectionForLanguage:(NSString*):NSLocaleLanguageDirection">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+lineDirectionForLanguage:(NSString*):NSLocaleLanguageDirection</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localeIdentifierFromComponents:" uniqueID="+localeIdentifierFromComponents:(NSDictionary&lt;NSString *,NSString *&gt;*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+localeIdentifierFromComponents:(NSDictionary&lt;NSString *,NSString *&gt;*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localeIdentifierFromWindowsLocaleCode:" uniqueID="+localeIdentifierFromWindowsLocaleCode:(uint32_t):NSString*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+localeIdentifierFromWindowsLocaleCode:(uint32_t):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+preferredLanguages" uniqueID="+preferredLanguages():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+preferredLanguages():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+windowsLocaleCodeFromLocaleIdentifier:" uniqueID="+windowsLocaleCodeFromLocaleIdentifier:(NSString*):uint32_t">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleGeneralInfo.+windowsLocaleCodeFromLocaleIdentifier:(NSString*):uint32_t</signature>
			</method>
		</class>
		<class name="NSLocale+NSLocaleCreation" uniqueID="&lt;AppScanClass&gt;.NSLocale+NSLocaleCreation">
			<method accessibility="Public" methodKind="Member" name="+autoupdatingCurrentLocale" uniqueID="+autoupdatingCurrentLocale():NSLocale*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleCreation.+autoupdatingCurrentLocale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentLocale" uniqueID="+currentLocale():NSLocale*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleCreation.+currentLocale():NSLocale*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localeWithLocaleIdentifier:" uniqueID="+localeWithLocaleIdentifier:(NSString*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleCreation.+localeWithLocaleIdentifier:(NSString*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemLocale" uniqueID="+systemLocale():NSLocale*">
				<signature>&lt;AppScanClass&gt;.NSLocale+NSLocaleCreation.+systemLocale():NSLocale*</signature>
			</method>
		</class>
		<class name="NSIndexPath+UITableView" uniqueID="&lt;AppScanClass&gt;.NSIndexPath+UITableView">
			<method accessibility="Public" methodKind="Member" name="+indexPathForRow:inSection:" uniqueID="+indexPathForRow:inSection:(NSInteger;NSInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSIndexPath+UITableView.+indexPathForRow:inSection:(NSInteger;NSInteger):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSIndexPath+UICollectionViewAdditions" uniqueID="&lt;AppScanClass&gt;.NSIndexPath+UICollectionViewAdditions">
			<method accessibility="Public" methodKind="Member" name="+indexPathForItem:inSection:" uniqueID="+indexPathForItem:inSection:(NSInteger;NSInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSIndexPath+UICollectionViewAdditions.+indexPathForItem:inSection:(NSInteger;NSInteger):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSHTTPURLResponse" uniqueID="&lt;AppScanClass&gt;.NSHTTPURLResponse">
			<method accessibility="Public" methodKind="Member" name="+localizedStringForStatusCode:" uniqueID="+localizedStringForStatusCode:(NSInteger):NSString*">
				<signature>&lt;AppScanClass&gt;.NSHTTPURLResponse.+localizedStringForStatusCode:(NSInteger):NSString*</signature>
			</method>
		</class>
		<class name="NSHTTPCookieStorage" uniqueID="&lt;AppScanClass&gt;.NSHTTPCookieStorage">
			<method accessibility="Public" methodKind="Member" name="+sharedCookieStorageForGroupContainerIdentifier:" uniqueID="+sharedCookieStorageForGroupContainerIdentifier:(NSString*):NSHTTPCookieStorage*">
				<signature>&lt;AppScanClass&gt;.NSHTTPCookieStorage.+sharedCookieStorageForGroupContainerIdentifier:(NSString*):NSHTTPCookieStorage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sharedHTTPCookieStorage" uniqueID="+sharedHTTPCookieStorage():NSHTTPCookieStorage*">
				<signature>&lt;AppScanClass&gt;.NSHTTPCookieStorage.+sharedHTTPCookieStorage():NSHTTPCookieStorage*</signature>
			</method>
		</class>
		<class name="NSFileHandle+NSFileHandleCreation" uniqueID="&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation">
			<method accessibility="Public" methodKind="Member" name="+fileHandleForReadingAtPath:" uniqueID="+fileHandleForReadingAtPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleForReadingAtPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForReadingFromURL:error:" uniqueID="+fileHandleForReadingFromURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleForReadingFromURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForUpdatingAtPath:" uniqueID="+fileHandleForUpdatingAtPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleForUpdatingAtPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForUpdatingURL:error:" uniqueID="+fileHandleForUpdatingURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleForUpdatingURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForWritingAtPath:" uniqueID="+fileHandleForWritingAtPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleForWritingAtPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForWritingToURL:error:" uniqueID="+fileHandleForWritingToURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleForWritingToURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithNullDevice" uniqueID="+fileHandleWithNullDevice():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleWithNullDevice():NSFileHandle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithStandardError" uniqueID="+fileHandleWithStandardError():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleWithStandardError():NSFileHandle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithStandardInput" uniqueID="+fileHandleWithStandardInput():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleWithStandardInput():NSFileHandle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithStandardOutput" uniqueID="+fileHandleWithStandardOutput():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle+NSFileHandleCreation.+fileHandleWithStandardOutput():NSFileHandle*</signature>
			</method>
		</class>
		<class name="UIDevice" uniqueID="&lt;AppScanClass&gt;.UIDevice">
			<method accessibility="Public" methodKind="Member" name="+currentDevice" uniqueID="+currentDevice():UIDevice*">
				<signature>&lt;AppScanClass&gt;.UIDevice.+currentDevice():UIDevice*</signature>
			</method>
		</class>
		<class name="NSException" uniqueID="&lt;AppScanClass&gt;.NSException">
			<method accessibility="Public" methodKind="Member" name="+exceptionWithName:reason:userInfo:" uniqueID="+exceptionWithName:reason:userInfo:(NSString*;NSString*;NSDictionary*):NSException*">
				<signature>&lt;AppScanClass&gt;.NSException.+exceptionWithName:reason:userInfo:(NSString*;NSString*;NSDictionary*):NSException*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+raise:format:" uniqueID="+raise:format:(NSString*;NSString*;...):void">
				<signature>&lt;AppScanClass&gt;.NSException.+raise:format:(NSString*;NSString*;...):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+raise:format:arguments:" uniqueID="+raise:format:arguments:(NSString*;NSString*;void*):void">
				<signature>&lt;AppScanClass&gt;.NSException.+raise:format:arguments:(NSString*;NSString*;void*):void</signature>
			</method>
		</class>
		<class name="NSDictionary" uniqueID="&lt;AppScanClass&gt;.NSDictionary">
			<method accessibility="Public" methodKind="Member" name="+dictionary" uniqueID="+dictionary():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionary():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfFile:" uniqueID="+dictionaryWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfURL:" uniqueID="+dictionaryWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithDictionary:" uniqueID="+dictionaryWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObject:forKey:" uniqueID="+dictionaryWithObject:forKey:(ObjectType _Nonnull;objc_object&lt;NSCopying&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithObject:forKey:(ObjectType _Nonnull;objc_object&lt;NSCopying&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObjects:forKeys:" uniqueID="+dictionaryWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObjects:forKeys:count:" uniqueID="+dictionaryWithObjects:forKeys:count:(const ObjectType*;const objc_object&lt;NSCopying&gt;**;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithObjects:forKeys:count:(const ObjectType*;const objc_object&lt;NSCopying&gt;**;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObjectsAndKeys:" uniqueID="+dictionaryWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+dictionaryWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sharedKeySetForKeys:" uniqueID="+sharedKeySetForKeys:(NSArray&lt;id&lt;NSCopying&gt;&gt;*):id _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary.+sharedKeySetForKeys:(NSArray&lt;id&lt;NSCopying&gt;&gt;*):id _Nonnull</signature>
			</method>
		</class>
		<class name="NSTimeZone+NSExtendedTimeZone" uniqueID="&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone">
			<method accessibility="Public" methodKind="Member" name="+abbreviationDictionary" uniqueID="+abbreviationDictionary():NSDictionary&lt;NSString *,NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+abbreviationDictionary():NSDictionary&lt;NSString *,NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultTimeZone" uniqueID="+defaultTimeZone():NSTimeZone*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+defaultTimeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+knownTimeZoneNames" uniqueID="+knownTimeZoneNames():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+knownTimeZoneNames():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localTimeZone" uniqueID="+localTimeZone():NSTimeZone*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+localTimeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+resetSystemTimeZone" uniqueID="+resetSystemTimeZone():void">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+resetSystemTimeZone():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAbbreviationDictionary:" uniqueID="+setAbbreviationDictionary:(NSDictionary&lt;NSString *,NSString *&gt;*):void">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+setAbbreviationDictionary:(NSDictionary&lt;NSString *,NSString *&gt;*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setDefaultTimeZone:" uniqueID="+setDefaultTimeZone:(NSTimeZone*):void">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+setDefaultTimeZone:(NSTimeZone*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+systemTimeZone" uniqueID="+systemTimeZone():NSTimeZone*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+systemTimeZone():NSTimeZone*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeZoneDataVersion" uniqueID="+timeZoneDataVersion():NSString*">
				<signature>&lt;AppScanClass&gt;.NSTimeZone+NSExtendedTimeZone.+timeZoneDataVersion():NSString*</signature>
			</method>
		</class>
		<class name="NSDictionary+NSSharedKeySetDictionary" uniqueID="&lt;AppScanClass&gt;.NSDictionary+NSSharedKeySetDictionary">
			<method accessibility="Public" methodKind="Member" name="+sharedKeySetForKeys:" uniqueID="+sharedKeySetForKeys:(NSArray&lt;id&lt;NSCopying&gt;&gt;*):id _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSSharedKeySetDictionary.+sharedKeySetForKeys:(NSArray&lt;id&lt;NSCopying&gt;&gt;*):id _Nonnull</signature>
			</method>
		</class>
		<class name="NSDictionary+NSDictionaryCreation" uniqueID="&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation">
			<method accessibility="Public" methodKind="Member" name="+dictionary" uniqueID="+dictionary():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionary():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfFile:" uniqueID="+dictionaryWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithContentsOfFile:(NSString*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithContentsOfURL:" uniqueID="+dictionaryWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithContentsOfURL:(NSURL*):NSDictionary&lt;KeyType,ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithDictionary:" uniqueID="+dictionaryWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithDictionary:(NSDictionary&lt;KeyType,ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObject:forKey:" uniqueID="+dictionaryWithObject:forKey:(ObjectType _Nonnull;objc_object&lt;NSCopying&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithObject:forKey:(ObjectType _Nonnull;objc_object&lt;NSCopying&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObjects:forKeys:" uniqueID="+dictionaryWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithObjects:forKeys:(NSArray&lt;ObjectType&gt;*;NSArray&lt;id&lt;NSCopying&gt;&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObjects:forKeys:count:" uniqueID="+dictionaryWithObjects:forKeys:count:(const ObjectType*;const objc_object&lt;NSCopying&gt;**;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithObjects:forKeys:count:(const ObjectType*;const objc_object&lt;NSCopying&gt;**;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dictionaryWithObjectsAndKeys:" uniqueID="+dictionaryWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDictionary+NSDictionaryCreation.+dictionaryWithObjectsAndKeys:(id _Nonnull;...):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSDateFormatter" uniqueID="&lt;AppScanClass&gt;.NSDateFormatter">
			<method accessibility="Public" methodKind="Member" name="+dateFormatFromTemplate:options:locale:" uniqueID="+dateFormatFromTemplate:options:locale:(NSString*;NSUInteger;NSLocale*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSDateFormatter.+dateFormatFromTemplate:options:locale:(NSString*;NSUInteger;NSLocale*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultFormatterBehavior" uniqueID="+defaultFormatterBehavior():NSDateFormatterBehavior">
				<signature>&lt;AppScanClass&gt;.NSDateFormatter.+defaultFormatterBehavior():NSDateFormatterBehavior</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+localizedStringFromDate:dateStyle:timeStyle:" uniqueID="+localizedStringFromDate:dateStyle:timeStyle:(NSDate*;NSDateFormatterStyle;NSDateFormatterStyle):NSString*">
				<signature>&lt;AppScanClass&gt;.NSDateFormatter.+localizedStringFromDate:dateStyle:timeStyle:(NSDate*;NSDateFormatterStyle;NSDateFormatterStyle):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setDefaultFormatterBehavior:" uniqueID="+setDefaultFormatterBehavior:(NSDateFormatterBehavior):void">
				<signature>&lt;AppScanClass&gt;.NSDateFormatter.+setDefaultFormatterBehavior:(NSDateFormatterBehavior):void</signature>
			</method>
		</class>
		<class name="NSDate" uniqueID="&lt;AppScanClass&gt;.NSDate">
			<method accessibility="Public" methodKind="Member" name="+date" uniqueID="+date():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate.+date():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeInterval:sinceDate:" uniqueID="+dateWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate.+dateWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeIntervalSince1970:" uniqueID="+dateWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate.+dateWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeIntervalSinceNow:" uniqueID="+dateWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate.+dateWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeIntervalSinceReferenceDate:" uniqueID="+dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate.+dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+distantFuture" uniqueID="+distantFuture():NSDate*">
				<signature>&lt;AppScanClass&gt;.NSDate.+distantFuture():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+distantPast" uniqueID="+distantPast():NSDate*">
				<signature>&lt;AppScanClass&gt;.NSDate.+distantPast():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timeIntervalSinceReferenceDate" uniqueID="+timeIntervalSinceReferenceDate():NSTimeInterval">
				<signature>&lt;AppScanClass&gt;.NSDate.+timeIntervalSinceReferenceDate():NSTimeInterval</signature>
			</method>
		</class>
		<class name="NSDate+NSExtendedDate" uniqueID="&lt;AppScanClass&gt;.NSDate+NSExtendedDate">
			<method accessibility="Public" methodKind="Member" name="+timeIntervalSinceReferenceDate" uniqueID="+timeIntervalSinceReferenceDate():NSTimeInterval">
				<signature>&lt;AppScanClass&gt;.NSDate+NSExtendedDate.+timeIntervalSinceReferenceDate():NSTimeInterval</signature>
			</method>
		</class>
		<class name="NSFileManager" uniqueID="&lt;AppScanClass&gt;.NSFileManager">
			<method accessibility="Public" methodKind="Member" name="+defaultManager" uniqueID="+defaultManager():NSFileManager*">
				<signature>&lt;AppScanClass&gt;.NSFileManager.+defaultManager():NSFileManager*</signature>
			</method>
		</class>
		<class name="NSDate+NSDateCreation" uniqueID="&lt;AppScanClass&gt;.NSDate+NSDateCreation">
			<method accessibility="Public" methodKind="Member" name="+date" uniqueID="+date():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+date():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeInterval:sinceDate:" uniqueID="+dateWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+dateWithTimeInterval:sinceDate:(NSTimeInterval;NSDate*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeIntervalSince1970:" uniqueID="+dateWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+dateWithTimeIntervalSince1970:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeIntervalSinceNow:" uniqueID="+dateWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+dateWithTimeIntervalSinceNow:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dateWithTimeIntervalSinceReferenceDate:" uniqueID="+dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+dateWithTimeIntervalSinceReferenceDate:(NSTimeInterval):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+distantFuture" uniqueID="+distantFuture():NSDate*">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+distantFuture():NSDate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+distantPast" uniqueID="+distantPast():NSDate*">
				<signature>&lt;AppScanClass&gt;.NSDate+NSDateCreation.+distantPast():NSDate*</signature>
			</method>
		</class>
		<class name="NSError" uniqueID="&lt;AppScanClass&gt;.NSError">
			<method accessibility="Public" methodKind="Member" name="+errorWithDomain:code:userInfo:" uniqueID="+errorWithDomain:code:userInfo:(NSString*;NSInteger;NSDictionary*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSError.+errorWithDomain:code:userInfo:(NSString*;NSInteger;NSDictionary*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setUserInfoValueProviderForDomain:provider:" uniqueID="+setUserInfoValueProviderForDomain:provider:(NSString*;(^)(NSError*;NSString*):id _Nullable):void">
				<signature>&lt;AppScanClass&gt;.NSError.+setUserInfoValueProviderForDomain:provider:(NSString*;(^)(NSError*;NSString*):id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+userInfoValueProviderForDomain:" uniqueID="+userInfoValueProviderForDomain:(NSString*):(^)(NSError*;NSString*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSError.+userInfoValueProviderForDomain:(NSString*):(^)(NSError*;NSString*):id _Nullable</signature>
			</method>
		</class>
		<class name="NSData" uniqueID="&lt;AppScanClass&gt;.NSData">
			<method accessibility="Public" methodKind="Member" name="+data" uniqueID="+data():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData.+data():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithBytes:length:" uniqueID="+dataWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithBytesNoCopy:length:" uniqueID="+dataWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithBytesNoCopy:length:freeWhenDone:" uniqueID="+dataWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfFile:" uniqueID="+dataWithContentsOfFile:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithContentsOfFile:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfFile:options:error:" uniqueID="+dataWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfMappedFile:" uniqueID="+dataWithContentsOfMappedFile:(NSString*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithContentsOfMappedFile:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfURL:" uniqueID="+dataWithContentsOfURL:(NSURL*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithContentsOfURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfURL:options:error:" uniqueID="+dataWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithData:" uniqueID="+dataWithData:(NSData*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData.+dataWithData:(NSData*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSData+NSDeprecated" uniqueID="&lt;AppScanClass&gt;.NSData+NSDeprecated">
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfMappedFile:" uniqueID="+dataWithContentsOfMappedFile:(NSString*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData+NSDeprecated.+dataWithContentsOfMappedFile:(NSString*):id _Nullable</signature>
			</method>
		</class>
		<class name="NSData+NSDataCreation" uniqueID="&lt;AppScanClass&gt;.NSData+NSDataCreation">
			<method accessibility="Public" methodKind="Member" name="+data" uniqueID="+data():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+data():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithBytes:length:" uniqueID="+dataWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithBytes:length:(const void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithBytesNoCopy:length:" uniqueID="+dataWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithBytesNoCopy:length:(void*;NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithBytesNoCopy:length:freeWhenDone:" uniqueID="+dataWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithBytesNoCopy:length:freeWhenDone:(void*;NSUInteger;BOOL):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfFile:" uniqueID="+dataWithContentsOfFile:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithContentsOfFile:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfFile:options:error:" uniqueID="+dataWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithContentsOfFile:options:error:(NSString*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfURL:" uniqueID="+dataWithContentsOfURL:(NSURL*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithContentsOfURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithContentsOfURL:options:error:" uniqueID="+dataWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithContentsOfURL:options:error:(NSURL*;NSDataReadingOptions;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+dataWithData:" uniqueID="+dataWithData:(NSData*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSData+NSDataCreation.+dataWithData:(NSData*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSCalendar" uniqueID="&lt;AppScanClass&gt;.NSCalendar">
			<method accessibility="Public" methodKind="Member" name="+autoupdatingCurrentCalendar" uniqueID="+autoupdatingCurrentCalendar():NSCalendar*">
				<signature>&lt;AppScanClass&gt;.NSCalendar.+autoupdatingCurrentCalendar():NSCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+calendarWithIdentifier:" uniqueID="+calendarWithIdentifier:(NSString*):NSCalendar*">
				<signature>&lt;AppScanClass&gt;.NSCalendar.+calendarWithIdentifier:(NSString*):NSCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentCalendar" uniqueID="+currentCalendar():NSCalendar*">
				<signature>&lt;AppScanClass&gt;.NSCalendar.+currentCalendar():NSCalendar*</signature>
			</method>
		</class>
		<class name="NSFileHandle" uniqueID="&lt;AppScanClass&gt;.NSFileHandle">
			<method accessibility="Public" methodKind="Member" name="+fileHandleForReadingAtPath:" uniqueID="+fileHandleForReadingAtPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleForReadingAtPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForReadingFromURL:error:" uniqueID="+fileHandleForReadingFromURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleForReadingFromURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForUpdatingAtPath:" uniqueID="+fileHandleForUpdatingAtPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleForUpdatingAtPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForUpdatingURL:error:" uniqueID="+fileHandleForUpdatingURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleForUpdatingURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForWritingAtPath:" uniqueID="+fileHandleForWritingAtPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleForWritingAtPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleForWritingToURL:error:" uniqueID="+fileHandleForWritingToURL:error:(NSURL*;NSError**):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleForWritingToURL:error:(NSURL*;NSError**):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithNullDevice" uniqueID="+fileHandleWithNullDevice():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleWithNullDevice():NSFileHandle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithStandardError" uniqueID="+fileHandleWithStandardError():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleWithStandardError():NSFileHandle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithStandardInput" uniqueID="+fileHandleWithStandardInput():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleWithStandardInput():NSFileHandle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+fileHandleWithStandardOutput" uniqueID="+fileHandleWithStandardOutput():NSFileHandle*">
				<signature>&lt;AppScanClass&gt;.NSFileHandle.+fileHandleWithStandardOutput():NSFileHandle*</signature>
			</method>
		</class>
		<class name="NSBundle" uniqueID="&lt;AppScanClass&gt;.NSBundle">
			<method accessibility="Public" methodKind="Member" name="+URLForResource:withExtension:subdirectory:inBundleWithURL:" uniqueID="+URLForResource:withExtension:subdirectory:inBundleWithURL:(NSString*;NSString*;NSString*;NSURL*):NSURL*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+URLForResource:withExtension:subdirectory:inBundleWithURL:(NSString*;NSString*;NSString*;NSURL*):NSURL*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+URLsForResourcesWithExtension:subdirectory:inBundleWithURL:" uniqueID="+URLsForResourcesWithExtension:subdirectory:inBundleWithURL:(NSString*;NSString*;NSURL*):NSArray&lt;NSURL *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+URLsForResourcesWithExtension:subdirectory:inBundleWithURL:(NSString*;NSString*;NSURL*):NSArray&lt;NSURL *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+allBundles" uniqueID="+allBundles():NSArray&lt;NSBundle *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+allBundles():NSArray&lt;NSBundle *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+allFrameworks" uniqueID="+allFrameworks():NSArray&lt;NSBundle *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+allFrameworks():NSArray&lt;NSBundle *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+bundleForClass:" uniqueID="+bundleForClass:(Class*):NSBundle*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+bundleForClass:(Class*):NSBundle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+bundleWithIdentifier:" uniqueID="+bundleWithIdentifier:(NSString*):NSBundle*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+bundleWithIdentifier:(NSString*):NSBundle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+bundleWithPath:" uniqueID="+bundleWithPath:(NSString*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSBundle.+bundleWithPath:(NSString*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+bundleWithURL:" uniqueID="+bundleWithURL:(NSURL*):instancetype _Nullable">
				<signature>&lt;AppScanClass&gt;.NSBundle.+bundleWithURL:(NSURL*):instancetype _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+mainBundle" uniqueID="+mainBundle():NSBundle*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+mainBundle():NSBundle*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+pathForResource:ofType:inDirectory:" uniqueID="+pathForResource:ofType:inDirectory:(NSString*;NSString*;NSString*):NSString*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+pathForResource:ofType:inDirectory:(NSString*;NSString*;NSString*):NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+pathsForResourcesOfType:inDirectory:" uniqueID="+pathsForResourcesOfType:inDirectory:(NSString*;NSString*):NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+pathsForResourcesOfType:inDirectory:(NSString*;NSString*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+preferredLocalizationsFromArray:" uniqueID="+preferredLocalizationsFromArray:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+preferredLocalizationsFromArray:(NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+preferredLocalizationsFromArray:forPreferences:" uniqueID="+preferredLocalizationsFromArray:forPreferences:(NSArray&lt;NSString *&gt;*;NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSBundle.+preferredLocalizationsFromArray:forPreferences:(NSArray&lt;NSString *&gt;*;NSArray&lt;NSString *&gt;*):NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="NSURLSession" uniqueID="&lt;AppScanClass&gt;.NSURLSession">
			<method accessibility="Public" methodKind="Member" name="+sessionWithConfiguration:" uniqueID="+sessionWithConfiguration:(NSURLSessionConfiguration*):NSURLSession*">
				<signature>&lt;AppScanClass&gt;.NSURLSession.+sessionWithConfiguration:(NSURLSessionConfiguration*):NSURLSession*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sessionWithConfiguration:delegate:delegateQueue:" uniqueID="+sessionWithConfiguration:delegate:delegateQueue:(NSURLSessionConfiguration*;objc_object&lt;NSURLSessionDelegate&gt;*;NSOperationQueue*):NSURLSession*">
				<signature>&lt;AppScanClass&gt;.NSURLSession.+sessionWithConfiguration:delegate:delegateQueue:(NSURLSessionConfiguration*;objc_object&lt;NSURLSessionDelegate&gt;*;NSOperationQueue*):NSURLSession*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sharedSession" uniqueID="+sharedSession():NSURLSession*">
				<signature>&lt;AppScanClass&gt;.NSURLSession.+sharedSession():NSURLSession*</signature>
			</method>
		</class>
		<class name="NSException+NSExceptionRaisingConveniences" uniqueID="&lt;AppScanClass&gt;.NSException+NSExceptionRaisingConveniences">
			<method accessibility="Public" methodKind="Member" name="+raise:format:" uniqueID="+raise:format:(NSString*;NSString*;...):void">
				<signature>&lt;AppScanClass&gt;.NSException+NSExceptionRaisingConveniences.+raise:format:(NSString*;NSString*;...):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+raise:format:arguments:" uniqueID="+raise:format:arguments:(NSString*;NSString*;void*):void">
				<signature>&lt;AppScanClass&gt;.NSException+NSExceptionRaisingConveniences.+raise:format:arguments:(NSString*;NSString*;void*):void</signature>
			</method>
		</class>
		<class name="NSAttributedString+NSAttributedStringAttachmentConveniences" uniqueID="&lt;AppScanClass&gt;.NSAttributedString+NSAttributedStringAttachmentConveniences">
			<method accessibility="Public" methodKind="Member" name="+attributedStringWithAttachment:" uniqueID="+attributedStringWithAttachment:(NSTextAttachment*):NSAttributedString*">
				<signature>&lt;AppScanClass&gt;.NSAttributedString+NSAttributedStringAttachmentConveniences.+attributedStringWithAttachment:(NSTextAttachment*):NSAttributedString*</signature>
			</method>
		</class>
		<class name="NSArray+NSArrayCreation" uniqueID="&lt;AppScanClass&gt;.NSArray+NSArrayCreation">
			<method accessibility="Public" methodKind="Member" name="+array" uniqueID="+array():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+array():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithArray:" uniqueID="+arrayWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+arrayWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfFile:" uniqueID="+arrayWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+arrayWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfURL:" uniqueID="+arrayWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+arrayWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithObject:" uniqueID="+arrayWithObject:(ObjectType _Nonnull):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+arrayWithObject:(ObjectType _Nonnull):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithObjects:" uniqueID="+arrayWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+arrayWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithObjects:count:" uniqueID="+arrayWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray+NSArrayCreation.+arrayWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="UIView+UIViewKeyframeAnimations" uniqueID="&lt;AppScanClass&gt;.UIView+UIViewKeyframeAnimations">
			<method accessibility="Public" methodKind="Member" name="+addKeyframeWithRelativeStartTime:relativeDuration:animations:" uniqueID="+addKeyframeWithRelativeStartTime:relativeDuration:animations:(double;double;(^)():void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewKeyframeAnimations.+addKeyframeWithRelativeStartTime:relativeDuration:animations:(double;double;(^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateKeyframesWithDuration:delay:options:animations:completion:" uniqueID="+animateKeyframesWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewKeyframeAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewKeyframeAnimations.+animateKeyframesWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewKeyframeAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
		</class>
		<class name="UIView" uniqueID="&lt;AppScanClass&gt;.UIView">
			<method accessibility="Public" methodKind="Member" name="+addKeyframeWithRelativeStartTime:relativeDuration:animations:" uniqueID="+addKeyframeWithRelativeStartTime:relativeDuration:animations:(double;double;(^)():void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+addKeyframeWithRelativeStartTime:relativeDuration:animations:(double;double;(^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateKeyframesWithDuration:delay:options:animations:completion:" uniqueID="+animateKeyframesWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewKeyframeAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+animateKeyframesWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewKeyframeAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:animations:" uniqueID="+animateWithDuration:animations:(NSTimeInterval;(^)():void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+animateWithDuration:animations:(NSTimeInterval;(^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:animations:completion:" uniqueID="+animateWithDuration:animations:completion:(NSTimeInterval;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+animateWithDuration:animations:completion:(NSTimeInterval;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:delay:options:animations:completion:" uniqueID="+animateWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+animateWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:" uniqueID="+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:(NSTimeInterval;NSTimeInterval;CGFloat;CGFloat;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:(NSTimeInterval;NSTimeInterval;CGFloat;CGFloat;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+areAnimationsEnabled" uniqueID="+areAnimationsEnabled():BOOL">
				<signature>&lt;AppScanClass&gt;.UIView.+areAnimationsEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+beginAnimations:context:" uniqueID="+beginAnimations:context:(NSString*;void*):void">
				<signature>&lt;AppScanClass&gt;.UIView.+beginAnimations:context:(NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+commitAnimations" uniqueID="+commitAnimations():void">
				<signature>&lt;AppScanClass&gt;.UIView.+commitAnimations():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+inheritedAnimationDuration" uniqueID="+inheritedAnimationDuration():NSTimeInterval">
				<signature>&lt;AppScanClass&gt;.UIView.+inheritedAnimationDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+layerClass" uniqueID="+layerClass():Class*">
				<signature>&lt;AppScanClass&gt;.UIView.+layerClass():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+performSystemAnimation:onViews:options:animations:completion:" uniqueID="+performSystemAnimation:onViews:options:animations:completion:(UISystemAnimation;NSArray&lt;__kindof UIView *&gt;*;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+performSystemAnimation:onViews:options:animations:completion:(UISystemAnimation;NSArray&lt;__kindof UIView *&gt;*;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+performWithoutAnimation:" uniqueID="+performWithoutAnimation:((^)():void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+performWithoutAnimation:((^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+requiresConstraintBasedLayout" uniqueID="+requiresConstraintBasedLayout():BOOL">
				<signature>&lt;AppScanClass&gt;.UIView.+requiresConstraintBasedLayout():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationBeginsFromCurrentState:" uniqueID="+setAnimationBeginsFromCurrentState:(BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationBeginsFromCurrentState:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationCurve:" uniqueID="+setAnimationCurve:(UIViewAnimationCurve):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationCurve:(UIViewAnimationCurve):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDelay:" uniqueID="+setAnimationDelay:(NSTimeInterval):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationDelay:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDelegate:" uniqueID="+setAnimationDelegate:(id _Nullable):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationDelegate:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDidStopSelector:" uniqueID="+setAnimationDidStopSelector:(SEL _Nullable):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationDidStopSelector:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDuration:" uniqueID="+setAnimationDuration:(NSTimeInterval):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationDuration:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationRepeatAutoreverses:" uniqueID="+setAnimationRepeatAutoreverses:(BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationRepeatAutoreverses:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationRepeatCount:" uniqueID="+setAnimationRepeatCount:(float):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationRepeatCount:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationStartDate:" uniqueID="+setAnimationStartDate:(NSDate*):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationStartDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationTransition:forView:cache:" uniqueID="+setAnimationTransition:forView:cache:(UIViewAnimationTransition;UIView*;BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationTransition:forView:cache:(UIViewAnimationTransition;UIView*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationWillStartSelector:" uniqueID="+setAnimationWillStartSelector:(SEL _Nullable):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationWillStartSelector:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationsEnabled:" uniqueID="+setAnimationsEnabled:(BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView.+setAnimationsEnabled:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+transitionFromView:toView:duration:options:completion:" uniqueID="+transitionFromView:toView:duration:options:completion:(UIView*;UIView*;NSTimeInterval;UIViewAnimationOptions;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+transitionFromView:toView:duration:options:completion:(UIView*;UIView*;NSTimeInterval;UIViewAnimationOptions;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+transitionWithView:duration:options:animations:completion:" uniqueID="+transitionWithView:duration:options:animations:completion:(UIView*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView.+transitionWithView:duration:options:animations:completion:(UIView*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+userInterfaceLayoutDirectionForSemanticContentAttribute:" uniqueID="+userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute):UIUserInterfaceLayoutDirection">
				<signature>&lt;AppScanClass&gt;.UIView.+userInterfaceLayoutDirectionForSemanticContentAttribute:(UISemanticContentAttribute):UIUserInterfaceLayoutDirection</signature>
			</method>
		</class>
		<class name="UIView+UIViewAnimationWithBlocks" uniqueID="&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks">
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:animations:" uniqueID="+animateWithDuration:animations:(NSTimeInterval;(^)():void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+animateWithDuration:animations:(NSTimeInterval;(^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:animations:completion:" uniqueID="+animateWithDuration:animations:completion:(NSTimeInterval;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+animateWithDuration:animations:completion:(NSTimeInterval;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:delay:options:animations:completion:" uniqueID="+animateWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+animateWithDuration:delay:options:animations:completion:(NSTimeInterval;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:" uniqueID="+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:(NSTimeInterval;NSTimeInterval;CGFloat;CGFloat;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:(NSTimeInterval;NSTimeInterval;CGFloat;CGFloat;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+performSystemAnimation:onViews:options:animations:completion:" uniqueID="+performSystemAnimation:onViews:options:animations:completion:(UISystemAnimation;NSArray&lt;__kindof UIView *&gt;*;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+performSystemAnimation:onViews:options:animations:completion:(UISystemAnimation;NSArray&lt;__kindof UIView *&gt;*;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+transitionFromView:toView:duration:options:completion:" uniqueID="+transitionFromView:toView:duration:options:completion:(UIView*;UIView*;NSTimeInterval;UIViewAnimationOptions;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+transitionFromView:toView:duration:options:completion:(UIView*;UIView*;NSTimeInterval;UIViewAnimationOptions;(^)(BOOL):void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+transitionWithView:duration:options:animations:completion:" uniqueID="+transitionWithView:duration:options:animations:completion:(UIView*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimationWithBlocks.+transitionWithView:duration:options:animations:completion:(UIView*;NSTimeInterval;UIViewAnimationOptions;(^)():void;(^)(BOOL):void):void</signature>
			</method>
		</class>
		<class name="MKMapCamera" uniqueID="&lt;AppScanClass&gt;.MKMapCamera">
			<method accessibility="Public" methodKind="Member" name="+camera" uniqueID="+camera():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.MKMapCamera.+camera():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+cameraLookingAtCenterCoordinate:fromDistance:pitch:heading:" uniqueID="+cameraLookingAtCenterCoordinate:fromDistance:pitch:heading:(CLLocationCoordinate2D;CLLocationDistance;CGFloat;CLLocationDirection):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.MKMapCamera.+cameraLookingAtCenterCoordinate:fromDistance:pitch:heading:(CLLocationCoordinate2D;CLLocationDistance;CGFloat;CLLocationDirection):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+cameraLookingAtCenterCoordinate:fromEyeCoordinate:eyeAltitude:" uniqueID="+cameraLookingAtCenterCoordinate:fromEyeCoordinate:eyeAltitude:(CLLocationCoordinate2D;CLLocationCoordinate2D;CLLocationDistance):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.MKMapCamera.+cameraLookingAtCenterCoordinate:fromEyeCoordinate:eyeAltitude:(CLLocationCoordinate2D;CLLocationCoordinate2D;CLLocationDistance):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="JSValue" uniqueID="&lt;AppScanClass&gt;.JSValue">
			<method accessibility="Public" methodKind="Member" name="+valueWithBool:inContext:" uniqueID="+valueWithBool:inContext:(BOOL;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithBool:inContext:(BOOL;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithDouble:inContext:" uniqueID="+valueWithDouble:inContext:(double;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithDouble:inContext:(double;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithInt32:inContext:" uniqueID="+valueWithInt32:inContext:(int32_t;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithInt32:inContext:(int32_t;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithJSValueRef:inContext:" uniqueID="+valueWithJSValueRef:inContext:(JSValueRef;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithJSValueRef:inContext:(JSValueRef;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithNewArrayInContext:" uniqueID="+valueWithNewArrayInContext:(JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithNewArrayInContext:(JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithNewErrorFromMessage:inContext:" uniqueID="+valueWithNewErrorFromMessage:inContext:(NSString*;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithNewErrorFromMessage:inContext:(NSString*;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithNewObjectInContext:" uniqueID="+valueWithNewObjectInContext:(JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithNewObjectInContext:(JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithNewRegularExpressionFromPattern:flags:inContext:" uniqueID="+valueWithNewRegularExpressionFromPattern:flags:inContext:(NSString*;NSString*;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithNewRegularExpressionFromPattern:flags:inContext:(NSString*;NSString*;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithNullInContext:" uniqueID="+valueWithNullInContext:(JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithNullInContext:(JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithObject:inContext:" uniqueID="+valueWithObject:inContext:(id;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithObject:inContext:(id;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithPoint:inContext:" uniqueID="+valueWithPoint:inContext:(CGPoint;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithPoint:inContext:(CGPoint;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithRange:inContext:" uniqueID="+valueWithRange:inContext:(NSRange;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithRange:inContext:(NSRange;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithRect:inContext:" uniqueID="+valueWithRect:inContext:(CGRect;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithRect:inContext:(CGRect;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithSize:inContext:" uniqueID="+valueWithSize:inContext:(CGSize;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithSize:inContext:(CGSize;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithUInt32:inContext:" uniqueID="+valueWithUInt32:inContext:(uint32_t;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithUInt32:inContext:(uint32_t;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithUndefinedInContext:" uniqueID="+valueWithUndefinedInContext:(JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue.+valueWithUndefinedInContext:(JSContext*):JSValue*</signature>
			</method>
		</class>
		<class name="UIView+UIConstraintBasedCompatibility" uniqueID="&lt;AppScanClass&gt;.UIView+UIConstraintBasedCompatibility">
			<method accessibility="Public" methodKind="Member" name="+requiresConstraintBasedLayout" uniqueID="+requiresConstraintBasedLayout():BOOL">
				<signature>&lt;AppScanClass&gt;.UIView+UIConstraintBasedCompatibility.+requiresConstraintBasedLayout():BOOL</signature>
			</method>
		</class>
		<class name="JSValue+StructSupport" uniqueID="&lt;AppScanClass&gt;.JSValue+StructSupport">
			<method accessibility="Public" methodKind="Member" name="+valueWithPoint:inContext:" uniqueID="+valueWithPoint:inContext:(CGPoint;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue+StructSupport.+valueWithPoint:inContext:(CGPoint;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithRange:inContext:" uniqueID="+valueWithRange:inContext:(NSRange;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue+StructSupport.+valueWithRange:inContext:(NSRange;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithRect:inContext:" uniqueID="+valueWithRect:inContext:(CGRect;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue+StructSupport.+valueWithRect:inContext:(CGRect;JSContext*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithSize:inContext:" uniqueID="+valueWithSize:inContext:(CGSize;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue+StructSupport.+valueWithSize:inContext:(CGSize;JSContext*):JSValue*</signature>
			</method>
		</class>
		<class name="JSValue+JSValueRefSupport" uniqueID="&lt;AppScanClass&gt;.JSValue+JSValueRefSupport">
			<method accessibility="Public" methodKind="Member" name="+valueWithJSValueRef:inContext:" uniqueID="+valueWithJSValueRef:inContext:(JSValueRef;JSContext*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JSValue+JSValueRefSupport.+valueWithJSValueRef:inContext:(JSValueRef;JSContext*):JSValue*</signature>
			</method>
		</class>
		<class name="JSContext" uniqueID="&lt;AppScanClass&gt;.JSContext">
			<method accessibility="Public" methodKind="Member" name="+contextWithJSGlobalContextRef:" uniqueID="+contextWithJSGlobalContextRef:(JSGlobalContextRef):JSContext*">
				<signature>&lt;AppScanClass&gt;.JSContext.+contextWithJSGlobalContextRef:(JSGlobalContextRef):JSContext*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentArguments" uniqueID="+currentArguments():NSArray*">
				<signature>&lt;AppScanClass&gt;.JSContext.+currentArguments():NSArray*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentCallee" uniqueID="+currentCallee():JSValue*">
				<signature>&lt;AppScanClass&gt;.JSContext.+currentCallee():JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentContext" uniqueID="+currentContext():JSContext*">
				<signature>&lt;AppScanClass&gt;.JSContext.+currentContext():JSContext*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+currentThis" uniqueID="+currentThis():JSValue*">
				<signature>&lt;AppScanClass&gt;.JSContext.+currentThis():JSValue*</signature>
			</method>
		</class>
		<class name="NSURLCredential+NSInternetPassword" uniqueID="&lt;AppScanClass&gt;.NSURLCredential+NSInternetPassword">
			<method accessibility="Public" methodKind="Member" name="+credentialWithUser:password:persistence:" uniqueID="+credentialWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):NSURLCredential*">
				<signature>&lt;AppScanClass&gt;.NSURLCredential+NSInternetPassword.+credentialWithUser:password:persistence:(NSString*;NSString*;NSURLCredentialPersistence):NSURLCredential*</signature>
			</method>
		</class>
		<class name="JSContext+JSContextRefSupport" uniqueID="&lt;AppScanClass&gt;.JSContext+JSContextRefSupport">
			<method accessibility="Public" methodKind="Member" name="+contextWithJSGlobalContextRef:" uniqueID="+contextWithJSGlobalContextRef:(JSGlobalContextRef):JSContext*">
				<signature>&lt;AppScanClass&gt;.JSContext+JSContextRefSupport.+contextWithJSGlobalContextRef:(JSGlobalContextRef):JSContext*</signature>
			</method>
		</class>
		<class name="JPExtension" uniqueID="&lt;AppScanClass&gt;.JPExtension">
			<method accessibility="Public" methodKind="Member" name="+formatJSToOC:" uniqueID="+formatJSToOC:(JSValue*):id">
				<signature>&lt;AppScanClass&gt;.JPExtension.+formatJSToOC:(JSValue*):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+formatOCToJS:" uniqueID="+formatOCToJS:(id):id">
				<signature>&lt;AppScanClass&gt;.JPExtension.+formatOCToJS:(id):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+formatPointerJSToOC:" uniqueID="+formatPointerJSToOC:(JSValue*):void*">
				<signature>&lt;AppScanClass&gt;.JPExtension.+formatPointerJSToOC:(JSValue*):void*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+formatPointerOCToJS:" uniqueID="+formatPointerOCToJS:(void*):id">
				<signature>&lt;AppScanClass&gt;.JPExtension.+formatPointerOCToJS:(void*):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+formatRetainedCFTypeOCToJS:" uniqueID="+formatRetainedCFTypeOCToJS:(CFTypeRef):id">
				<signature>&lt;AppScanClass&gt;.JPExtension.+formatRetainedCFTypeOCToJS:(CFTypeRef):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+getDictOfStruct:structDefine:" uniqueID="+getDictOfStruct:structDefine:(void*;NSDictionary*):NSDictionary*">
				<signature>&lt;AppScanClass&gt;.JPExtension.+getDictOfStruct:structDefine:(void*;NSDictionary*):NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+getStructDataWidthDict:dict:structDefine:" uniqueID="+getStructDataWidthDict:dict:structDefine:(void*;NSDictionary*;NSDictionary*):void">
				<signature>&lt;AppScanClass&gt;.JPExtension.+getStructDataWidthDict:dict:structDefine:(void*;NSDictionary*;NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+main:" uniqueID="+main:(JSContext*):void">
				<signature>&lt;AppScanClass&gt;.JPExtension.+main:(JSContext*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+overideMethods" uniqueID="+overideMethods():NSDictionary*">
				<signature>&lt;AppScanClass&gt;.JPExtension.+overideMethods():NSDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+registeredStruct" uniqueID="+registeredStruct():NSMutableDictionary*">
				<signature>&lt;AppScanClass&gt;.JPExtension.+registeredStruct():NSMutableDictionary*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sizeOfStructTypes:" uniqueID="+sizeOfStructTypes:(NSString*):int">
				<signature>&lt;AppScanClass&gt;.JPExtension.+sizeOfStructTypes:(NSString*):int</signature>
			</method>
		</class>
		<class name="NSString+NSStringDeprecated" uniqueID="&lt;AppScanClass&gt;.NSString+NSStringDeprecated">
			<method accessibility="Public" methodKind="Member" name="+stringWithCString:" uniqueID="+stringWithCString:(const char*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringDeprecated.+stringWithCString:(const char*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithCString:length:" uniqueID="+stringWithCString:length:(const char*;NSUInteger):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringDeprecated.+stringWithCString:length:(const char*;NSUInteger):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfFile:" uniqueID="+stringWithContentsOfFile:(NSString*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringDeprecated.+stringWithContentsOfFile:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+stringWithContentsOfURL:" uniqueID="+stringWithContentsOfURL:(NSURL*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.NSString+NSStringDeprecated.+stringWithContentsOfURL:(NSURL*):id _Nullable</signature>
			</method>
		</class>
		<class name="JPEngine" uniqueID="&lt;AppScanClass&gt;.JPEngine">
			<method accessibility="Public" methodKind="Member" name="+addExtensions:" uniqueID="+addExtensions:(NSArray*):void">
				<signature>&lt;AppScanClass&gt;.JPEngine.+addExtensions:(NSArray*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+context" uniqueID="+context():JSContext*">
				<signature>&lt;AppScanClass&gt;.JPEngine.+context():JSContext*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defineStruct:" uniqueID="+defineStruct:(NSDictionary*):void">
				<signature>&lt;AppScanClass&gt;.JPEngine.+defineStruct:(NSDictionary*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+evaluateScript:" uniqueID="+evaluateScript:(NSString*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JPEngine.+evaluateScript:(NSString*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+evaluateScriptWithPath:" uniqueID="+evaluateScriptWithPath:(NSString*):JSValue*">
				<signature>&lt;AppScanClass&gt;.JPEngine.+evaluateScriptWithPath:(NSString*):JSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+startEngine" uniqueID="+startEngine():void">
				<signature>&lt;AppScanClass&gt;.JPEngine.+startEngine():void</signature>
			</method>
		</class>
		<class name="NSNumber" uniqueID="&lt;AppScanClass&gt;.NSNumber">
			<method accessibility="Public" methodKind="Member" name="+numberWithBool:" uniqueID="+numberWithBool:(BOOL):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithBool:(BOOL):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithChar:" uniqueID="+numberWithChar:(char):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithChar:(char):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithDouble:" uniqueID="+numberWithDouble:(double):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithDouble:(double):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithFloat:" uniqueID="+numberWithFloat:(float):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithFloat:(float):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithInt:" uniqueID="+numberWithInt:(int):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithInt:(int):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithInteger:" uniqueID="+numberWithInteger:(NSInteger):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithInteger:(NSInteger):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithLong:" uniqueID="+numberWithLong:(long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithLong:(long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithLongLong:" uniqueID="+numberWithLongLong:(long long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithLongLong:(long long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithShort:" uniqueID="+numberWithShort:(short):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithShort:(short):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedChar:" uniqueID="+numberWithUnsignedChar:(unsigned char):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithUnsignedChar:(unsigned char):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedInt:" uniqueID="+numberWithUnsignedInt:(unsigned int):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithUnsignedInt:(unsigned int):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedInteger:" uniqueID="+numberWithUnsignedInteger:(NSUInteger):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithUnsignedInteger:(NSUInteger):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedLong:" uniqueID="+numberWithUnsignedLong:(unsigned long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithUnsignedLong:(unsigned long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedLongLong:" uniqueID="+numberWithUnsignedLongLong:(unsigned long long):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithUnsignedLongLong:(unsigned long long):NSNumber*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+numberWithUnsignedShort:" uniqueID="+numberWithUnsignedShort:(unsigned short):NSNumber*">
				<signature>&lt;AppScanClass&gt;.NSNumber.+numberWithUnsignedShort:(unsigned short):NSNumber*</signature>
			</method>
		</class>
		<class name="NSValue+NSValueExtensionMethods" uniqueID="&lt;AppScanClass&gt;.NSValue+NSValueExtensionMethods">
			<method accessibility="Public" methodKind="Member" name="+valueWithNonretainedObject:" uniqueID="+valueWithNonretainedObject:(id _Nullable):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueExtensionMethods.+valueWithNonretainedObject:(id _Nullable):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithPointer:" uniqueID="+valueWithPointer:(const void*):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue+NSValueExtensionMethods.+valueWithPointer:(const void*):NSValue*</signature>
			</method>
		</class>
		<class name="EKEventStore" uniqueID="&lt;AppScanClass&gt;.EKEventStore">
			<method accessibility="Public" methodKind="Member" name="+authorizationStatusForEntityType:" uniqueID="+authorizationStatusForEntityType:(EKEntityType):EKAuthorizationStatus">
				<signature>&lt;AppScanClass&gt;.EKEventStore.+authorizationStatusForEntityType:(EKEntityType):EKAuthorizationStatus</signature>
			</method>
		</class>
		<class name="NSArray" uniqueID="&lt;AppScanClass&gt;.NSArray">
			<method accessibility="Public" methodKind="Member" name="+array" uniqueID="+array():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray.+array():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithArray:" uniqueID="+arrayWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray.+arrayWithArray:(NSArray&lt;ObjectType&gt;*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfFile:" uniqueID="+arrayWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSArray.+arrayWithContentsOfFile:(NSString*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithContentsOfURL:" uniqueID="+arrayWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*">
				<signature>&lt;AppScanClass&gt;.NSArray.+arrayWithContentsOfURL:(NSURL*):NSArray&lt;ObjectType&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithObject:" uniqueID="+arrayWithObject:(ObjectType _Nonnull):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray.+arrayWithObject:(ObjectType _Nonnull):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithObjects:" uniqueID="+arrayWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray.+arrayWithObjects:(ObjectType _Nonnull;...):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+arrayWithObjects:count:" uniqueID="+arrayWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSArray.+arrayWithObjects:count:(const ObjectType*;NSUInteger):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="EKCalendar" uniqueID="&lt;AppScanClass&gt;.EKCalendar">
			<method accessibility="Public" methodKind="Member" name="+calendarForEntityType:eventStore:" uniqueID="+calendarForEntityType:eventStore:(EKEntityType;EKEventStore*):EKCalendar*">
				<signature>&lt;AppScanClass&gt;.EKCalendar.+calendarForEntityType:eventStore:(EKEntityType;EKEventStore*):EKCalendar*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+calendarWithEventStore:" uniqueID="+calendarWithEventStore:(EKEventStore*):EKCalendar*">
				<signature>&lt;AppScanClass&gt;.EKCalendar.+calendarWithEventStore:(EKEventStore*):EKCalendar*</signature>
			</method>
		</class>
		<class name="CLLocationManager" uniqueID="&lt;AppScanClass&gt;.CLLocationManager">
			<method accessibility="Public" methodKind="Member" name="+authorizationStatus" uniqueID="+authorizationStatus():CLAuthorizationStatus">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+authorizationStatus():CLAuthorizationStatus</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+deferredLocationUpdatesAvailable" uniqueID="+deferredLocationUpdatesAvailable():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+deferredLocationUpdatesAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+headingAvailable" uniqueID="+headingAvailable():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+headingAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+isMonitoringAvailableForClass:" uniqueID="+isMonitoringAvailableForClass:(Class*):BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+isMonitoringAvailableForClass:(Class*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+isRangingAvailable" uniqueID="+isRangingAvailable():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+isRangingAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+locationServicesEnabled" uniqueID="+locationServicesEnabled():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+locationServicesEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+regionMonitoringAvailable" uniqueID="+regionMonitoringAvailable():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+regionMonitoringAvailable():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+regionMonitoringEnabled" uniqueID="+regionMonitoringEnabled():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+regionMonitoringEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+significantLocationChangeMonitoringAvailable" uniqueID="+significantLocationChangeMonitoringAvailable():BOOL">
				<signature>&lt;AppScanClass&gt;.CLLocationManager.+significantLocationChangeMonitoringAvailable():BOOL</signature>
			</method>
		</class>
		<class name="NSValue" uniqueID="&lt;AppScanClass&gt;.NSValue">
			<method accessibility="Public" methodKind="Member" name="+value:withObjCType:" uniqueID="+value:withObjCType:(const void*;const char*):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+value:withObjCType:(const void*;const char*):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithBytes:objCType:" uniqueID="+valueWithBytes:objCType:(const void*;const char*):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithBytes:objCType:(const void*;const char*):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCATransform3D:" uniqueID="+valueWithCATransform3D:(CATransform3D):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithCATransform3D:(CATransform3D):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGAffineTransform:" uniqueID="+valueWithCGAffineTransform:(CGAffineTransform):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithCGAffineTransform:(CGAffineTransform):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGPoint:" uniqueID="+valueWithCGPoint:(CGPoint):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithCGPoint:(CGPoint):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGRect:" uniqueID="+valueWithCGRect:(CGRect):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithCGRect:(CGRect):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGSize:" uniqueID="+valueWithCGSize:(CGSize):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithCGSize:(CGSize):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithCGVector:" uniqueID="+valueWithCGVector:(CGVector):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithCGVector:(CGVector):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithNonretainedObject:" uniqueID="+valueWithNonretainedObject:(id _Nullable):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithNonretainedObject:(id _Nullable):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithPointer:" uniqueID="+valueWithPointer:(const void*):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithPointer:(const void*):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithRange:" uniqueID="+valueWithRange:(NSRange):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithRange:(NSRange):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithUIEdgeInsets:" uniqueID="+valueWithUIEdgeInsets:(UIEdgeInsets):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithUIEdgeInsets:(UIEdgeInsets):NSValue*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+valueWithUIOffset:" uniqueID="+valueWithUIOffset:(UIOffset):NSValue*">
				<signature>&lt;AppScanClass&gt;.NSValue.+valueWithUIOffset:(UIOffset):NSValue*</signature>
			</method>
		</class>
		<class name="CIImage" uniqueID="&lt;AppScanClass&gt;.CIImage">
			<method accessibility="Public" methodKind="Member" name="+emptyImage" uniqueID="+emptyImage():CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+emptyImage():CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithBitmapData:bytesPerRow:size:format:colorSpace:" uniqueID="+imageWithBitmapData:bytesPerRow:size:format:colorSpace:(NSData*;size_t;CGSize;CIFormat;struct CGColorSpace*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithBitmapData:bytesPerRow:size:format:colorSpace:(NSData*;size_t;CGSize;CIFormat;struct CGColorSpace*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCGImage:" uniqueID="+imageWithCGImage:(struct CGImage*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCGImage:(struct CGImage*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCGImage:options:" uniqueID="+imageWithCGImage:options:(struct CGImage*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCGImage:options:(struct CGImage*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCGLayer:" uniqueID="+imageWithCGLayer:(struct CGLayer*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCGLayer:(struct CGLayer*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCGLayer:options:" uniqueID="+imageWithCGLayer:options:(struct CGLayer*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCGLayer:options:(struct CGLayer*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCVImageBuffer:" uniqueID="+imageWithCVImageBuffer:(struct __CVBuffer*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCVImageBuffer:(struct __CVBuffer*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCVImageBuffer:options:" uniqueID="+imageWithCVImageBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCVImageBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCVPixelBuffer:" uniqueID="+imageWithCVPixelBuffer:(struct __CVBuffer*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCVPixelBuffer:(struct __CVBuffer*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithCVPixelBuffer:options:" uniqueID="+imageWithCVPixelBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithCVPixelBuffer:options:(struct __CVBuffer*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithColor:" uniqueID="+imageWithColor:(CIColor*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithColor:(CIColor*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithContentsOfURL:" uniqueID="+imageWithContentsOfURL:(NSURL*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithContentsOfURL:(NSURL*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithContentsOfURL:options:" uniqueID="+imageWithContentsOfURL:options:(NSURL*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithContentsOfURL:options:(NSURL*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithData:" uniqueID="+imageWithData:(NSData*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithData:(NSData*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithData:options:" uniqueID="+imageWithData:options:(NSData*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithData:options:(NSData*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithImageProvider:size::format:colorSpace:options:" uniqueID="+imageWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithMTLTexture:options:" uniqueID="+imageWithMTLTexture:options:(objc_object&lt;MTLTexture&gt;*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithMTLTexture:options:(objc_object&lt;MTLTexture&gt;*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithTexture:size:flipped:colorSpace:" uniqueID="+imageWithTexture:size:flipped:colorSpace:(unsigned int;CGSize;BOOL;struct CGColorSpace*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithTexture:size:flipped:colorSpace:(unsigned int;CGSize;BOOL;struct CGColorSpace*):CIImage*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+imageWithTexture:size:flipped:options:" uniqueID="+imageWithTexture:size:flipped:options:(unsigned int;CGSize;BOOL;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage.+imageWithTexture:size:flipped:options:(unsigned int;CGSize;BOOL;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
		</class>
		<class name="CIImage+CIImageProvider" uniqueID="&lt;AppScanClass&gt;.CIImage+CIImageProvider">
			<method accessibility="Public" methodKind="Member" name="+imageWithImageProvider:size::format:colorSpace:options:" uniqueID="+imageWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):CIImage*">
				<signature>&lt;AppScanClass&gt;.CIImage+CIImageProvider.+imageWithImageProvider:size::format:colorSpace:options:(id _Nonnull;size_t;size_t;CIFormat;struct CGColorSpace*;NSDictionary&lt;NSString *,id&gt;*):CIImage*</signature>
			</method>
		</class>
		<class name="CIFilterShape" uniqueID="&lt;AppScanClass&gt;.CIFilterShape">
			<method accessibility="Public" methodKind="Member" name="+shapeWithRect:" uniqueID="+shapeWithRect:(CGRect):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.CIFilterShape.+shapeWithRect:(CGRect):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="CIColor" uniqueID="&lt;AppScanClass&gt;.CIColor">
			<method accessibility="Public" methodKind="Member" name="+colorWithCGColor:" uniqueID="+colorWithCGColor:(struct CGColor*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.CIColor.+colorWithCGColor:(struct CGColor*):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithRed:green:blue:" uniqueID="+colorWithRed:green:blue:(CGFloat;CGFloat;CGFloat):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.CIColor.+colorWithRed:green:blue:(CGFloat;CGFloat;CGFloat):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithRed:green:blue:alpha:" uniqueID="+colorWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.CIColor.+colorWithRed:green:blue:alpha:(CGFloat;CGFloat;CGFloat;CGFloat):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+colorWithString:" uniqueID="+colorWithString:(NSString*):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.CIColor.+colorWithString:(NSString*):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="CALayer" uniqueID="&lt;AppScanClass&gt;.CALayer">
			<method accessibility="Public" methodKind="Member" name="+defaultActionForKey:" uniqueID="+defaultActionForKey:(NSString*):objc_object&lt;CAAction&gt;*">
				<signature>&lt;AppScanClass&gt;.CALayer.+defaultActionForKey:(NSString*):objc_object&lt;CAAction&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultValueForKey:" uniqueID="+defaultValueForKey:(NSString*):id _Nullable">
				<signature>&lt;AppScanClass&gt;.CALayer.+defaultValueForKey:(NSString*):id _Nullable</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+layer" uniqueID="+layer():instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.CALayer.+layer():instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+needsDisplayForKey:" uniqueID="+needsDisplayForKey:(NSString*):BOOL">
				<signature>&lt;AppScanClass&gt;.CALayer.+needsDisplayForKey:(NSString*):BOOL</signature>
			</method>
		</class>
		<class name="UIViewController" uniqueID="&lt;AppScanClass&gt;.UIViewController">
			<method accessibility="Public" methodKind="Member" name="+attemptRotationToDeviceOrientation" uniqueID="+attemptRotationToDeviceOrientation():void">
				<signature>&lt;AppScanClass&gt;.UIViewController.+attemptRotationToDeviceOrientation():void</signature>
			</method>
		</class>
		<class name="NSPredicate" uniqueID="&lt;AppScanClass&gt;.NSPredicate">
			<method accessibility="Public" methodKind="Member" name="+predicateFromMetadataQueryString:" uniqueID="+predicateFromMetadataQueryString:(NSString*):NSPredicate*">
				<signature>&lt;AppScanClass&gt;.NSPredicate.+predicateFromMetadataQueryString:(NSString*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+predicateWithBlock:" uniqueID="+predicateWithBlock:((^)(id _Nonnull;NSDictionary&lt;NSString *,id&gt;*):BOOL):NSPredicate*">
				<signature>&lt;AppScanClass&gt;.NSPredicate.+predicateWithBlock:((^)(id _Nonnull;NSDictionary&lt;NSString *,id&gt;*):BOOL):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+predicateWithFormat:" uniqueID="+predicateWithFormat:(NSString*;...):NSPredicate*">
				<signature>&lt;AppScanClass&gt;.NSPredicate.+predicateWithFormat:(NSString*;...):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+predicateWithFormat:argumentArray:" uniqueID="+predicateWithFormat:argumentArray:(NSString*;NSArray*):NSPredicate*">
				<signature>&lt;AppScanClass&gt;.NSPredicate.+predicateWithFormat:argumentArray:(NSString*;NSArray*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+predicateWithFormat:arguments:" uniqueID="+predicateWithFormat:arguments:(NSString*;void*):NSPredicate*">
				<signature>&lt;AppScanClass&gt;.NSPredicate.+predicateWithFormat:arguments:(NSString*;void*):NSPredicate*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+predicateWithValue:" uniqueID="+predicateWithValue:(BOOL):NSPredicate*">
				<signature>&lt;AppScanClass&gt;.NSPredicate.+predicateWithValue:(BOOL):NSPredicate*</signature>
			</method>
		</class>
		<class name="UIViewController+UIViewControllerRotation" uniqueID="&lt;AppScanClass&gt;.UIViewController+UIViewControllerRotation">
			<method accessibility="Public" methodKind="Member" name="+attemptRotationToDeviceOrientation" uniqueID="+attemptRotationToDeviceOrientation():void">
				<signature>&lt;AppScanClass&gt;.UIViewController+UIViewControllerRotation.+attemptRotationToDeviceOrientation():void</signature>
			</method>
		</class>
		<class name="NSURLSessionConfiguration" uniqueID="&lt;AppScanClass&gt;.NSURLSessionConfiguration">
			<method accessibility="Public" methodKind="Member" name="+backgroundSessionConfiguration:" uniqueID="+backgroundSessionConfiguration:(NSString*):NSURLSessionConfiguration*">
				<signature>&lt;AppScanClass&gt;.NSURLSessionConfiguration.+backgroundSessionConfiguration:(NSString*):NSURLSessionConfiguration*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+backgroundSessionConfigurationWithIdentifier:" uniqueID="+backgroundSessionConfigurationWithIdentifier:(NSString*):NSURLSessionConfiguration*">
				<signature>&lt;AppScanClass&gt;.NSURLSessionConfiguration.+backgroundSessionConfigurationWithIdentifier:(NSString*):NSURLSessionConfiguration*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+defaultSessionConfiguration" uniqueID="+defaultSessionConfiguration():NSURLSessionConfiguration*">
				<signature>&lt;AppScanClass&gt;.NSURLSessionConfiguration.+defaultSessionConfiguration():NSURLSessionConfiguration*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+ephemeralSessionConfiguration" uniqueID="+ephemeralSessionConfiguration():NSURLSessionConfiguration*">
				<signature>&lt;AppScanClass&gt;.NSURLSessionConfiguration.+ephemeralSessionConfiguration():NSURLSessionConfiguration*</signature>
			</method>
		</class>
		<class name="UIApplication" uniqueID="&lt;AppScanClass&gt;.UIApplication">
			<method accessibility="Public" methodKind="Member" name="+registerObjectForStateRestoration:restorationIdentifier:" uniqueID="+registerObjectForStateRestoration:restorationIdentifier:(objc_object&lt;UIStateRestoring&gt;*;NSString*):void">
				<signature>&lt;AppScanClass&gt;.UIApplication.+registerObjectForStateRestoration:restorationIdentifier:(objc_object&lt;UIStateRestoring&gt;*;NSString*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+sharedApplication" uniqueID="+sharedApplication():UIApplication*">
				<signature>&lt;AppScanClass&gt;.UIApplication.+sharedApplication():UIApplication*</signature>
			</method>
		</class>
		<class name="NSTimer" uniqueID="&lt;AppScanClass&gt;.NSTimer">
			<method accessibility="Public" methodKind="Member" name="+scheduledTimerWithTimeInterval:invocation:repeats:" uniqueID="+scheduledTimerWithTimeInterval:invocation:repeats:(NSTimeInterval;NSInvocation*;BOOL):NSTimer*">
				<signature>&lt;AppScanClass&gt;.NSTimer.+scheduledTimerWithTimeInterval:invocation:repeats:(NSTimeInterval;NSInvocation*;BOOL):NSTimer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:" uniqueID="+scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:(NSTimeInterval;id _Nonnull;SEL _Nonnull;id _Nullable;BOOL):NSTimer*">
				<signature>&lt;AppScanClass&gt;.NSTimer.+scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:(NSTimeInterval;id _Nonnull;SEL _Nonnull;id _Nullable;BOOL):NSTimer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timerWithTimeInterval:invocation:repeats:" uniqueID="+timerWithTimeInterval:invocation:repeats:(NSTimeInterval;NSInvocation*;BOOL):NSTimer*">
				<signature>&lt;AppScanClass&gt;.NSTimer.+timerWithTimeInterval:invocation:repeats:(NSTimeInterval;NSInvocation*;BOOL):NSTimer*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+timerWithTimeInterval:target:selector:userInfo:repeats:" uniqueID="+timerWithTimeInterval:target:selector:userInfo:repeats:(NSTimeInterval;id _Nonnull;SEL _Nonnull;id _Nullable;BOOL):NSTimer*">
				<signature>&lt;AppScanClass&gt;.NSTimer.+timerWithTimeInterval:target:selector:userInfo:repeats:(NSTimeInterval;id _Nonnull;SEL _Nonnull;id _Nullable;BOOL):NSTimer*</signature>
			</method>
		</class>
		<class name="UIResponder" uniqueID="&lt;AppScanClass&gt;.UIResponder">
			<method accessibility="Public" methodKind="Member" name="+clearTextInputContextIdentifier:" uniqueID="+clearTextInputContextIdentifier:(NSString*):void">
				<signature>&lt;AppScanClass&gt;.UIResponder.+clearTextInputContextIdentifier:(NSString*):void</signature>
			</method>
		</class>
		<class name="UIResponder+UIResponderInputViewAdditions" uniqueID="&lt;AppScanClass&gt;.UIResponder+UIResponderInputViewAdditions">
			<method accessibility="Public" methodKind="Member" name="+clearTextInputContextIdentifier:" uniqueID="+clearTextInputContextIdentifier:(NSString*):void">
				<signature>&lt;AppScanClass&gt;.UIResponder+UIResponderInputViewAdditions.+clearTextInputContextIdentifier:(NSString*):void</signature>
			</method>
		</class>
		<class name="UIApplication+UIStateRestoration" uniqueID="&lt;AppScanClass&gt;.UIApplication+UIStateRestoration">
			<method accessibility="Public" methodKind="Member" name="+registerObjectForStateRestoration:restorationIdentifier:" uniqueID="+registerObjectForStateRestoration:restorationIdentifier:(objc_object&lt;UIStateRestoring&gt;*;NSString*):void">
				<signature>&lt;AppScanClass&gt;.UIApplication+UIStateRestoration.+registerObjectForStateRestoration:restorationIdentifier:(objc_object&lt;UIStateRestoring&gt;*;NSString*):void</signature>
			</method>
		</class>
		<class name="NSObject" uniqueID="&lt;AppScanClass&gt;.NSObject">
			<method accessibility="Public" methodKind="Member" name="+accessInstanceVariablesDirectly" uniqueID="+accessInstanceVariablesDirectly():BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+accessInstanceVariablesDirectly():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+alloc" uniqueID="+alloc():instancetype">
				<signature>&lt;AppScanClass&gt;.NSObject.+alloc():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+allocWithZone:" uniqueID="+allocWithZone:(struct _NSZone*):instancetype">
				<signature>&lt;AppScanClass&gt;.NSObject.+allocWithZone:(struct _NSZone*):instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+automaticallyNotifiesObserversForKey:" uniqueID="+automaticallyNotifiesObserversForKey:(NSString*):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+automaticallyNotifiesObserversForKey:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+cancelPreviousPerformRequestsWithTarget:" uniqueID="+cancelPreviousPerformRequestsWithTarget:(id _Nonnull):void">
				<signature>&lt;AppScanClass&gt;.NSObject.+cancelPreviousPerformRequestsWithTarget:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+cancelPreviousPerformRequestsWithTarget:selector:object:" uniqueID="+cancelPreviousPerformRequestsWithTarget:selector:object:(id _Nonnull;SEL _Nonnull;id _Nullable):void">
				<signature>&lt;AppScanClass&gt;.NSObject.+cancelPreviousPerformRequestsWithTarget:selector:object:(id _Nonnull;SEL _Nonnull;id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+class" uniqueID="+class():Class*">
				<signature>&lt;AppScanClass&gt;.NSObject.+class():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+classFallbacksForKeyedArchiver" uniqueID="+classFallbacksForKeyedArchiver():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSObject.+classFallbacksForKeyedArchiver():NSArray&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+classForKeyedUnarchiver" uniqueID="+classForKeyedUnarchiver():Class*">
				<signature>&lt;AppScanClass&gt;.NSObject.+classForKeyedUnarchiver():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+conformsToProtocol:" uniqueID="+conformsToProtocol:(Protocol*):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+conformsToProtocol:(Protocol*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+copyWithZone:" uniqueID="+copyWithZone:(struct _NSZone*):id">
				<signature>&lt;AppScanClass&gt;.NSObject.+copyWithZone:(struct _NSZone*):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+debugDescription" uniqueID="+debugDescription():NSString*">
				<signature>&lt;AppScanClass&gt;.NSObject.+debugDescription():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+description" uniqueID="+description():NSString*">
				<signature>&lt;AppScanClass&gt;.NSObject.+description():NSString*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+hash" uniqueID="+hash():NSUInteger">
				<signature>&lt;AppScanClass&gt;.NSObject.+hash():NSUInteger</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+initialize" uniqueID="+initialize():void">
				<signature>&lt;AppScanClass&gt;.NSObject.+initialize():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+instanceMethodForSelector:" uniqueID="+instanceMethodForSelector:(SEL):IMP">
				<signature>&lt;AppScanClass&gt;.NSObject.+instanceMethodForSelector:(SEL):IMP</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+instanceMethodSignatureForSelector:" uniqueID="+instanceMethodSignatureForSelector:(SEL):NSMethodSignature*">
				<signature>&lt;AppScanClass&gt;.NSObject.+instanceMethodSignatureForSelector:(SEL):NSMethodSignature*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+instancesRespondToSelector:" uniqueID="+instancesRespondToSelector:(SEL):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+instancesRespondToSelector:(SEL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+isSubclassOfClass:" uniqueID="+isSubclassOfClass:(Class*):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+isSubclassOfClass:(Class*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+keyPathsForValuesAffectingValueForKey:" uniqueID="+keyPathsForValuesAffectingValueForKey:(NSString*):NSSet&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSObject.+keyPathsForValuesAffectingValueForKey:(NSString*):NSSet&lt;NSString *&gt;*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+load" uniqueID="+load():void">
				<signature>&lt;AppScanClass&gt;.NSObject.+load():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+mutableCopyWithZone:" uniqueID="+mutableCopyWithZone:(struct _NSZone*):id">
				<signature>&lt;AppScanClass&gt;.NSObject.+mutableCopyWithZone:(struct _NSZone*):id</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+new" uniqueID="+new():instancetype">
				<signature>&lt;AppScanClass&gt;.NSObject.+new():instancetype</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+resolveClassMethod:" uniqueID="+resolveClassMethod:(SEL):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+resolveClassMethod:(SEL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+resolveInstanceMethod:" uniqueID="+resolveInstanceMethod:(SEL):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject.+resolveInstanceMethod:(SEL):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setVersion:" uniqueID="+setVersion:(NSInteger):void">
				<signature>&lt;AppScanClass&gt;.NSObject.+setVersion:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+superclass" uniqueID="+superclass():Class*">
				<signature>&lt;AppScanClass&gt;.NSObject.+superclass():Class*</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+version" uniqueID="+version():NSInteger">
				<signature>&lt;AppScanClass&gt;.NSObject.+version():NSInteger</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyedUnarchiverObjectSubstitution" uniqueID="&lt;AppScanClass&gt;.NSObject+NSKeyedUnarchiverObjectSubstitution">
			<method accessibility="Public" methodKind="Member" name="+classForKeyedUnarchiver" uniqueID="+classForKeyedUnarchiver():Class*">
				<signature>&lt;AppScanClass&gt;.NSObject+NSKeyedUnarchiverObjectSubstitution.+classForKeyedUnarchiver():Class*</signature>
			</method>
		</class>
		<class name="AVAudioSession" uniqueID="&lt;AppScanClass&gt;.AVAudioSession">
			<method accessibility="Public" methodKind="Member" name="+sharedInstance" uniqueID="+sharedInstance():AVAudioSession*">
				<signature>&lt;AppScanClass&gt;.AVAudioSession.+sharedInstance():AVAudioSession*</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyedArchiverObjectSubstitution" uniqueID="&lt;AppScanClass&gt;.NSObject+NSKeyedArchiverObjectSubstitution">
			<method accessibility="Public" methodKind="Member" name="+classFallbacksForKeyedArchiver" uniqueID="+classFallbacksForKeyedArchiver():NSArray&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSObject+NSKeyedArchiverObjectSubstitution.+classFallbacksForKeyedArchiver():NSArray&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueObservingCustomization" uniqueID="&lt;AppScanClass&gt;.NSObject+NSKeyValueObservingCustomization">
			<method accessibility="Public" methodKind="Member" name="+automaticallyNotifiesObserversForKey:" uniqueID="+automaticallyNotifiesObserversForKey:(NSString*):BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject+NSKeyValueObservingCustomization.+automaticallyNotifiesObserversForKey:(NSString*):BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+keyPathsForValuesAffectingValueForKey:" uniqueID="+keyPathsForValuesAffectingValueForKey:(NSString*):NSSet&lt;NSString *&gt;*">
				<signature>&lt;AppScanClass&gt;.NSObject+NSKeyValueObservingCustomization.+keyPathsForValuesAffectingValueForKey:(NSString*):NSSet&lt;NSString *&gt;*</signature>
			</method>
		</class>
		<class name="NSObject+NSKeyValueCoding" uniqueID="&lt;AppScanClass&gt;.NSObject+NSKeyValueCoding">
			<method accessibility="Public" methodKind="Member" name="+accessInstanceVariablesDirectly" uniqueID="+accessInstanceVariablesDirectly():BOOL">
				<signature>&lt;AppScanClass&gt;.NSObject+NSKeyValueCoding.+accessInstanceVariablesDirectly():BOOL</signature>
			</method>
		</class>
		<class name="UIView+UIViewAnimation" uniqueID="&lt;AppScanClass&gt;.UIView+UIViewAnimation">
			<method accessibility="Public" methodKind="Member" name="+areAnimationsEnabled" uniqueID="+areAnimationsEnabled():BOOL">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+areAnimationsEnabled():BOOL</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+beginAnimations:context:" uniqueID="+beginAnimations:context:(NSString*;void*):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+beginAnimations:context:(NSString*;void*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+commitAnimations" uniqueID="+commitAnimations():void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+commitAnimations():void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+inheritedAnimationDuration" uniqueID="+inheritedAnimationDuration():NSTimeInterval">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+inheritedAnimationDuration():NSTimeInterval</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+performWithoutAnimation:" uniqueID="+performWithoutAnimation:((^)():void):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+performWithoutAnimation:((^)():void):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationBeginsFromCurrentState:" uniqueID="+setAnimationBeginsFromCurrentState:(BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationBeginsFromCurrentState:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationCurve:" uniqueID="+setAnimationCurve:(UIViewAnimationCurve):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationCurve:(UIViewAnimationCurve):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDelay:" uniqueID="+setAnimationDelay:(NSTimeInterval):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationDelay:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDelegate:" uniqueID="+setAnimationDelegate:(id _Nullable):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationDelegate:(id _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDidStopSelector:" uniqueID="+setAnimationDidStopSelector:(SEL _Nullable):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationDidStopSelector:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationDuration:" uniqueID="+setAnimationDuration:(NSTimeInterval):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationDuration:(NSTimeInterval):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationRepeatAutoreverses:" uniqueID="+setAnimationRepeatAutoreverses:(BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationRepeatAutoreverses:(BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationRepeatCount:" uniqueID="+setAnimationRepeatCount:(float):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationRepeatCount:(float):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationStartDate:" uniqueID="+setAnimationStartDate:(NSDate*):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationStartDate:(NSDate*):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationTransition:forView:cache:" uniqueID="+setAnimationTransition:forView:cache:(UIViewAnimationTransition;UIView*;BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationTransition:forView:cache:(UIViewAnimationTransition;UIView*;BOOL):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationWillStartSelector:" uniqueID="+setAnimationWillStartSelector:(SEL _Nullable):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationWillStartSelector:(SEL _Nullable):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+setAnimationsEnabled:" uniqueID="+setAnimationsEnabled:(BOOL):void">
				<signature>&lt;AppScanClass&gt;.UIView+UIViewAnimation.+setAnimationsEnabled:(BOOL):void</signature>
			</method>
		</class>
		<class name="NSObject+NSDelayedPerforming" uniqueID="&lt;AppScanClass&gt;.NSObject+NSDelayedPerforming">
			<method accessibility="Public" methodKind="Member" name="+cancelPreviousPerformRequestsWithTarget:" uniqueID="+cancelPreviousPerformRequestsWithTarget:(id _Nonnull):void">
				<signature>&lt;AppScanClass&gt;.NSObject+NSDelayedPerforming.+cancelPreviousPerformRequestsWithTarget:(id _Nonnull):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+cancelPreviousPerformRequestsWithTarget:selector:object:" uniqueID="+cancelPreviousPerformRequestsWithTarget:selector:object:(id _Nonnull;SEL _Nonnull;id _Nullable):void">
				<signature>&lt;AppScanClass&gt;.NSObject+NSDelayedPerforming.+cancelPreviousPerformRequestsWithTarget:selector:object:(id _Nonnull;SEL _Nonnull;id _Nullable):void</signature>
			</method>
		</class>
		<class name="NSURLConnection+NSURLConnectionSynchronousLoading" uniqueID="&lt;AppScanClass&gt;.NSURLConnection+NSURLConnectionSynchronousLoading">
			<method accessibility="Public" methodKind="Member" name="+sendSynchronousRequest:returningResponse:error:" uniqueID="+sendSynchronousRequest:returningResponse:error:(NSURLRequest*;NSURLResponse**;NSError**):NSData*">
				<signature>&lt;AppScanClass&gt;.NSURLConnection+NSURLConnectionSynchronousLoading.+sendSynchronousRequest:returningResponse:error:(NSURLRequest*;NSURLResponse**;NSError**):NSData*</signature>
			</method>
		</class>
		<class name="NSIndexPath" uniqueID="&lt;AppScanClass&gt;.NSIndexPath">
			<method accessibility="Public" methodKind="Member" name="+indexPathForItem:inSection:" uniqueID="+indexPathForItem:inSection:(NSInteger;NSInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSIndexPath.+indexPathForItem:inSection:(NSInteger;NSInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+indexPathForRow:inSection:" uniqueID="+indexPathForRow:inSection:(NSInteger;NSInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSIndexPath.+indexPathForRow:inSection:(NSInteger;NSInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+indexPathWithIndex:" uniqueID="+indexPathWithIndex:(NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSIndexPath.+indexPathWithIndex:(NSUInteger):instancetype _Nonnull</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+indexPathWithIndexes:length:" uniqueID="+indexPathWithIndexes:length:(const NSUInteger*;NSUInteger):instancetype _Nonnull">
				<signature>&lt;AppScanClass&gt;.NSIndexPath.+indexPathWithIndexes:length:(const NSUInteger*;NSUInteger):instancetype _Nonnull</signature>
			</method>
		</class>
		<class name="NSAttributedString" uniqueID="&lt;AppScanClass&gt;.NSAttributedString">
			<method accessibility="Public" methodKind="Member" name="+attributedStringWithAttachment:" uniqueID="+attributedStringWithAttachment:(NSTextAttachment*):NSAttributedString*">
				<signature>&lt;AppScanClass&gt;.NSAttributedString.+attributedStringWithAttachment:(NSTextAttachment*):NSAttributedString*</signature>
			</method>
		</class>
		<class name="NSObject+NSCoderMethods" uniqueID="&lt;AppScanClass&gt;.NSObject+NSCoderMethods">
			<method accessibility="Public" methodKind="Member" name="+setVersion:" uniqueID="+setVersion:(NSInteger):void">
				<signature>&lt;AppScanClass&gt;.NSObject+NSCoderMethods.+setVersion:(NSInteger):void</signature>
			</method>
			<method accessibility="Public" methodKind="Member" name="+version" uniqueID="+version():NSInteger">
				<signature>&lt;AppScanClass&gt;.NSObject+NSCoderMethods.+version():NSInteger</signature>
			</method>
		</class>
	</package>
	<package name="&lt;AppScan&gt;">
		<class>
			<method accessibility="Module" name="_compilation_unit_init" uniqueID="&lt;AppScan&gt;._compilation_unit_init():void">
				<signature>&lt;AppScan&gt;._compilation_unit_init():void</signature>
			</method>
			<method accessibility="External" name="getClass" uniqueID="&lt;AppScan&gt;.getClass(char*):objc_class*">
				<signature>&lt;AppScan&gt;.getClass(char*):objc_class*</signature>
			</method>
		</class>
	</package>
</api_info>
